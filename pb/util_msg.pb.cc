// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: util_msg.proto

#include "util_msg.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace bess {
namespace pb {

inline constexpr FieldData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : encoding_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR FieldData::FieldData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FieldDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldDataDefaultTypeInternal() {}
  union {
    FieldData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldDataDefaultTypeInternal _FieldData_default_instance_;

inline constexpr Field::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : num_bytes_{0u},
        position_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Field::Field(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FieldDefaultTypeInternal() {}
  union {
    Field _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FieldDefaultTypeInternal _Field_default_instance_;
}  // namespace pb
}  // namespace bess
static ::_pb::Metadata file_level_metadata_util_5fmsg_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_util_5fmsg_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_util_5fmsg_2eproto = nullptr;
const ::uint32_t TableStruct_util_5fmsg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::bess::pb::Field, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::bess::pb::Field, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::bess::pb::Field, _impl_.num_bytes_),
    PROTOBUF_FIELD_OFFSET(::bess::pb::Field, _impl_.position_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::bess::pb::FieldData, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::bess::pb::FieldData, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::bess::pb::FieldData, _impl_.encoding_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::bess::pb::Field)},
        {12, -1, -1, sizeof(::bess::pb::FieldData)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::bess::pb::_Field_default_instance_._instance,
    &::bess::pb::_FieldData_default_instance_._instance,
};
const char descriptor_table_protodef_util_5fmsg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\016util_msg.proto\022\007bess.pb\"M\n\005Field\022\023\n\tat"
    "tr_name\030\001 \001(\tH\000\022\020\n\006offset\030\002 \001(\rH\000\022\021\n\tnum"
    "_bytes\030\003 \001(\rB\n\n\010position\"A\n\tFieldData\022\023\n"
    "\tvalue_bin\030\001 \001(\014H\000\022\023\n\tvalue_int\030\002 \001(\004H\000B"
    "\n\n\010encodingb\006proto3"
};
static ::absl::once_flag descriptor_table_util_5fmsg_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_util_5fmsg_2eproto = {
    false,
    false,
    179,
    descriptor_table_protodef_util_5fmsg_2eproto,
    "util_msg.proto",
    &descriptor_table_util_5fmsg_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_util_5fmsg_2eproto::offsets,
    file_level_metadata_util_5fmsg_2eproto,
    file_level_enum_descriptors_util_5fmsg_2eproto,
    file_level_service_descriptors_util_5fmsg_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_util_5fmsg_2eproto_getter() {
  return &descriptor_table_util_5fmsg_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_util_5fmsg_2eproto(&descriptor_table_util_5fmsg_2eproto);
namespace bess {
namespace pb {
// ===================================================================

class Field::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::bess::pb::Field, _impl_._oneof_case_);
};

Field::Field(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:bess.pb.Field)
}
inline PROTOBUF_NDEBUG_INLINE Field::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : position_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Field::Field(
    ::google::protobuf::Arena* arena,
    const Field& from)
    : ::google::protobuf::Message(arena) {
  Field* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.num_bytes_ = from._impl_.num_bytes_;
  switch (position_case()) {
    case POSITION_NOT_SET:
      break;
      case kAttrName:
        new (&_impl_.position_.attr_name_) decltype(_impl_.position_.attr_name_){arena, from._impl_.position_.attr_name_};
        break;
      case kOffset:
        _impl_.position_.offset_ = from._impl_.position_.offset_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:bess.pb.Field)
}
inline PROTOBUF_NDEBUG_INLINE Field::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : position_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Field::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.num_bytes_ = {};
}
Field::~Field() {
  // @@protoc_insertion_point(destructor:bess.pb.Field)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Field::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_position()) {
    clear_position();
  }
  _impl_.~Impl_();
}

void Field::clear_position() {
// @@protoc_insertion_point(one_of_clear_start:bess.pb.Field)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (position_case()) {
    case kAttrName: {
      _impl_.position_.attr_name_.Destroy();
      break;
    }
    case kOffset: {
      // No need to clear
      break;
    }
    case POSITION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = POSITION_NOT_SET;
}


PROTOBUF_NOINLINE void Field::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.pb.Field)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.num_bytes_ = 0u;
  clear_position();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Field::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 31, 2> Field::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Field_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 num_bytes = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Field, _impl_.num_bytes_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Field, _impl_.num_bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string attr_name = 1;
    {PROTOBUF_FIELD_OFFSET(Field, _impl_.position_.attr_name_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(Field, _impl_.position_.offset_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // uint32 num_bytes = 3;
    {PROTOBUF_FIELD_OFFSET(Field, _impl_.num_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\15\11\0\0\0\0\0\0"
    "bess.pb.Field"
    "attr_name"
  }},
};

::uint8_t* Field::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.pb.Field)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (position_case()) {
    case kAttrName: {
      const std::string& _s = this->_internal_attr_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "bess.pb.Field.attr_name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kOffset: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this->_internal_offset(), target);
      break;
    }
    default:
      break;
  }
  // uint32 num_bytes = 3;
  if (this->_internal_num_bytes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_num_bytes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bess.pb.Field)
  return target;
}

::size_t Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bess.pb.Field)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 num_bytes = 3;
  if (this->_internal_num_bytes() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_num_bytes());
  }

  switch (position_case()) {
    // string attr_name = 1;
    case kAttrName: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_attr_name());
      break;
    }
    // uint32 offset = 2;
    case kOffset: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_offset());
      break;
    }
    case POSITION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Field::_class_data_ = {
    Field::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Field::GetClassData() const {
  return &_class_data_;
}

void Field::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Field*>(&to_msg);
  auto& from = static_cast<const Field&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:bess.pb.Field)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num_bytes() != 0) {
    _this->_internal_set_num_bytes(from._internal_num_bytes());
  }
  switch (from.position_case()) {
    case kAttrName: {
      _this->_internal_set_attr_name(from._internal_attr_name());
      break;
    }
    case kOffset: {
      _this->_internal_set_offset(from._internal_offset());
      break;
    }
    case POSITION_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Field::CopyFrom(const Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.pb.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Field::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Field::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Field::InternalSwap(Field* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.num_bytes_, other->_impl_.num_bytes_);
  swap(_impl_.position_, other->_impl_.position_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Field::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_5fmsg_2eproto_getter, &descriptor_table_util_5fmsg_2eproto_once,
      file_level_metadata_util_5fmsg_2eproto[0]);
}
// ===================================================================

class FieldData::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::bess::pb::FieldData, _impl_._oneof_case_);
};

FieldData::FieldData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:bess.pb.FieldData)
}
inline PROTOBUF_NDEBUG_INLINE FieldData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : encoding_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

FieldData::FieldData(
    ::google::protobuf::Arena* arena,
    const FieldData& from)
    : ::google::protobuf::Message(arena) {
  FieldData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (encoding_case()) {
    case ENCODING_NOT_SET:
      break;
      case kValueBin:
        new (&_impl_.encoding_.value_bin_) decltype(_impl_.encoding_.value_bin_){arena, from._impl_.encoding_.value_bin_};
        break;
      case kValueInt:
        _impl_.encoding_.value_int_ = from._impl_.encoding_.value_int_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:bess.pb.FieldData)
}
inline PROTOBUF_NDEBUG_INLINE FieldData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : encoding_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void FieldData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FieldData::~FieldData() {
  // @@protoc_insertion_point(destructor:bess.pb.FieldData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FieldData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_encoding()) {
    clear_encoding();
  }
  _impl_.~Impl_();
}

void FieldData::clear_encoding() {
// @@protoc_insertion_point(one_of_clear_start:bess.pb.FieldData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (encoding_case()) {
    case kValueBin: {
      _impl_.encoding_.value_bin_.Destroy();
      break;
    }
    case kValueInt: {
      // No need to clear
      break;
    }
    case ENCODING_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ENCODING_NOT_SET;
}


PROTOBUF_NOINLINE void FieldData::Clear() {
// @@protoc_insertion_point(message_clear_start:bess.pb.FieldData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_encoding();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FieldData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 0, 2> FieldData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FieldData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes value_bin = 1;
    {PROTOBUF_FIELD_OFFSET(FieldData, _impl_.encoding_.value_bin_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 value_int = 2;
    {PROTOBUF_FIELD_OFFSET(FieldData, _impl_.encoding_.value_int_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FieldData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bess.pb.FieldData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (encoding_case()) {
    case kValueBin: {
      const std::string& _s = this->_internal_value_bin();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
      break;
    }
    case kValueInt: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this->_internal_value_int(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bess.pb.FieldData)
  return target;
}

::size_t FieldData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bess.pb.FieldData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (encoding_case()) {
    // bytes value_bin = 1;
    case kValueBin: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_value_bin());
      break;
    }
    // uint64 value_int = 2;
    case kValueInt: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_value_int());
      break;
    }
    case ENCODING_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FieldData::_class_data_ = {
    FieldData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FieldData::GetClassData() const {
  return &_class_data_;
}

void FieldData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FieldData*>(&to_msg);
  auto& from = static_cast<const FieldData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:bess.pb.FieldData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.encoding_case()) {
    case kValueBin: {
      _this->_internal_set_value_bin(from._internal_value_bin());
      break;
    }
    case kValueInt: {
      _this->_internal_set_value_int(from._internal_value_int());
      break;
    }
    case ENCODING_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FieldData::CopyFrom(const FieldData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bess.pb.FieldData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FieldData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FieldData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FieldData::InternalSwap(FieldData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.encoding_, other->_impl_.encoding_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata FieldData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_5fmsg_2eproto_getter, &descriptor_table_util_5fmsg_2eproto_once,
      file_level_metadata_util_5fmsg_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace bess
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
