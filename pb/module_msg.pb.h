// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module_msg.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_module_5fmsg_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_module_5fmsg_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "util_msg.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_module_5fmsg_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_module_5fmsg_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_module_5fmsg_2eproto;
namespace bess {
namespace pb {
class ACLArg;
struct ACLArgDefaultTypeInternal;
extern ACLArgDefaultTypeInternal _ACLArg_default_instance_;
class ACLArg_Rule;
struct ACLArg_RuleDefaultTypeInternal;
extern ACLArg_RuleDefaultTypeInternal _ACLArg_Rule_default_instance_;
class ArpResponderArg;
struct ArpResponderArgDefaultTypeInternal;
extern ArpResponderArgDefaultTypeInternal _ArpResponderArg_default_instance_;
class BPFArg;
struct BPFArgDefaultTypeInternal;
extern BPFArgDefaultTypeInternal _BPFArg_default_instance_;
class BPFArg_Filter;
struct BPFArg_FilterDefaultTypeInternal;
extern BPFArg_FilterDefaultTypeInternal _BPFArg_Filter_default_instance_;
class BPFCommandClearArg;
struct BPFCommandClearArgDefaultTypeInternal;
extern BPFCommandClearArgDefaultTypeInternal _BPFCommandClearArg_default_instance_;
class BufferArg;
struct BufferArgDefaultTypeInternal;
extern BufferArgDefaultTypeInternal _BufferArg_default_instance_;
class BypassArg;
struct BypassArgDefaultTypeInternal;
extern BypassArgDefaultTypeInternal _BypassArg_default_instance_;
class DRRArg;
struct DRRArgDefaultTypeInternal;
extern DRRArgDefaultTypeInternal _DRRArg_default_instance_;
class DRRMaxFlowQueueSizeArg;
struct DRRMaxFlowQueueSizeArgDefaultTypeInternal;
extern DRRMaxFlowQueueSizeArgDefaultTypeInternal _DRRMaxFlowQueueSizeArg_default_instance_;
class DRRQuantumArg;
struct DRRQuantumArgDefaultTypeInternal;
extern DRRQuantumArgDefaultTypeInternal _DRRQuantumArg_default_instance_;
class DumpArg;
struct DumpArgDefaultTypeInternal;
extern DumpArgDefaultTypeInternal _DumpArg_default_instance_;
class EmptyArg;
struct EmptyArgDefaultTypeInternal;
extern EmptyArgDefaultTypeInternal _EmptyArg_default_instance_;
class EtherEncapArg;
struct EtherEncapArgDefaultTypeInternal;
extern EtherEncapArgDefaultTypeInternal _EtherEncapArg_default_instance_;
class ExactMatchArg;
struct ExactMatchArgDefaultTypeInternal;
extern ExactMatchArgDefaultTypeInternal _ExactMatchArg_default_instance_;
class ExactMatchCommandAddArg;
struct ExactMatchCommandAddArgDefaultTypeInternal;
extern ExactMatchCommandAddArgDefaultTypeInternal _ExactMatchCommandAddArg_default_instance_;
class ExactMatchCommandClearArg;
struct ExactMatchCommandClearArgDefaultTypeInternal;
extern ExactMatchCommandClearArgDefaultTypeInternal _ExactMatchCommandClearArg_default_instance_;
class ExactMatchCommandDeleteArg;
struct ExactMatchCommandDeleteArgDefaultTypeInternal;
extern ExactMatchCommandDeleteArgDefaultTypeInternal _ExactMatchCommandDeleteArg_default_instance_;
class ExactMatchCommandSetDefaultGateArg;
struct ExactMatchCommandSetDefaultGateArgDefaultTypeInternal;
extern ExactMatchCommandSetDefaultGateArgDefaultTypeInternal _ExactMatchCommandSetDefaultGateArg_default_instance_;
class ExactMatchConfig;
struct ExactMatchConfigDefaultTypeInternal;
extern ExactMatchConfigDefaultTypeInternal _ExactMatchConfig_default_instance_;
class FlowGenArg;
struct FlowGenArgDefaultTypeInternal;
extern FlowGenArgDefaultTypeInternal _FlowGenArg_default_instance_;
class FlowGenCommandSetBurstArg;
struct FlowGenCommandSetBurstArgDefaultTypeInternal;
extern FlowGenCommandSetBurstArgDefaultTypeInternal _FlowGenCommandSetBurstArg_default_instance_;
class GenericDecapArg;
struct GenericDecapArgDefaultTypeInternal;
extern GenericDecapArgDefaultTypeInternal _GenericDecapArg_default_instance_;
class GenericEncapArg;
struct GenericEncapArgDefaultTypeInternal;
extern GenericEncapArgDefaultTypeInternal _GenericEncapArg_default_instance_;
class GenericEncapArg_EncapField;
struct GenericEncapArg_EncapFieldDefaultTypeInternal;
extern GenericEncapArg_EncapFieldDefaultTypeInternal _GenericEncapArg_EncapField_default_instance_;
class HashLBArg;
struct HashLBArgDefaultTypeInternal;
extern HashLBArgDefaultTypeInternal _HashLBArg_default_instance_;
class HashLBCommandSetGatesArg;
struct HashLBCommandSetGatesArgDefaultTypeInternal;
extern HashLBCommandSetGatesArgDefaultTypeInternal _HashLBCommandSetGatesArg_default_instance_;
class HashLBCommandSetModeArg;
struct HashLBCommandSetModeArgDefaultTypeInternal;
extern HashLBCommandSetModeArgDefaultTypeInternal _HashLBCommandSetModeArg_default_instance_;
class IPChecksumArg;
struct IPChecksumArgDefaultTypeInternal;
extern IPChecksumArgDefaultTypeInternal _IPChecksumArg_default_instance_;
class IPEncapArg;
struct IPEncapArgDefaultTypeInternal;
extern IPEncapArgDefaultTypeInternal _IPEncapArg_default_instance_;
class IPLookupArg;
struct IPLookupArgDefaultTypeInternal;
extern IPLookupArgDefaultTypeInternal _IPLookupArg_default_instance_;
class IPLookupCommandAddArg;
struct IPLookupCommandAddArgDefaultTypeInternal;
extern IPLookupCommandAddArgDefaultTypeInternal _IPLookupCommandAddArg_default_instance_;
class IPLookupCommandClearArg;
struct IPLookupCommandClearArgDefaultTypeInternal;
extern IPLookupCommandClearArgDefaultTypeInternal _IPLookupCommandClearArg_default_instance_;
class IPLookupCommandDeleteArg;
struct IPLookupCommandDeleteArgDefaultTypeInternal;
extern IPLookupCommandDeleteArgDefaultTypeInternal _IPLookupCommandDeleteArg_default_instance_;
class L2ForwardArg;
struct L2ForwardArgDefaultTypeInternal;
extern L2ForwardArgDefaultTypeInternal _L2ForwardArg_default_instance_;
class L2ForwardCommandAddArg;
struct L2ForwardCommandAddArgDefaultTypeInternal;
extern L2ForwardCommandAddArgDefaultTypeInternal _L2ForwardCommandAddArg_default_instance_;
class L2ForwardCommandAddArg_Entry;
struct L2ForwardCommandAddArg_EntryDefaultTypeInternal;
extern L2ForwardCommandAddArg_EntryDefaultTypeInternal _L2ForwardCommandAddArg_Entry_default_instance_;
class L2ForwardCommandDeleteArg;
struct L2ForwardCommandDeleteArgDefaultTypeInternal;
extern L2ForwardCommandDeleteArgDefaultTypeInternal _L2ForwardCommandDeleteArg_default_instance_;
class L2ForwardCommandLookupArg;
struct L2ForwardCommandLookupArgDefaultTypeInternal;
extern L2ForwardCommandLookupArgDefaultTypeInternal _L2ForwardCommandLookupArg_default_instance_;
class L2ForwardCommandLookupResponse;
struct L2ForwardCommandLookupResponseDefaultTypeInternal;
extern L2ForwardCommandLookupResponseDefaultTypeInternal _L2ForwardCommandLookupResponse_default_instance_;
class L2ForwardCommandPopulateArg;
struct L2ForwardCommandPopulateArgDefaultTypeInternal;
extern L2ForwardCommandPopulateArgDefaultTypeInternal _L2ForwardCommandPopulateArg_default_instance_;
class L2ForwardCommandSetDefaultGateArg;
struct L2ForwardCommandSetDefaultGateArgDefaultTypeInternal;
extern L2ForwardCommandSetDefaultGateArgDefaultTypeInternal _L2ForwardCommandSetDefaultGateArg_default_instance_;
class L4ChecksumArg;
struct L4ChecksumArgDefaultTypeInternal;
extern L4ChecksumArgDefaultTypeInternal _L4ChecksumArg_default_instance_;
class MACSwapArg;
struct MACSwapArgDefaultTypeInternal;
extern MACSwapArgDefaultTypeInternal _MACSwapArg_default_instance_;
class MeasureArg;
struct MeasureArgDefaultTypeInternal;
extern MeasureArgDefaultTypeInternal _MeasureArg_default_instance_;
class MeasureCommandGetSummaryArg;
struct MeasureCommandGetSummaryArgDefaultTypeInternal;
extern MeasureCommandGetSummaryArgDefaultTypeInternal _MeasureCommandGetSummaryArg_default_instance_;
class MeasureCommandGetSummaryResponse;
struct MeasureCommandGetSummaryResponseDefaultTypeInternal;
extern MeasureCommandGetSummaryResponseDefaultTypeInternal _MeasureCommandGetSummaryResponse_default_instance_;
class MeasureCommandGetSummaryResponse_Histogram;
struct MeasureCommandGetSummaryResponse_HistogramDefaultTypeInternal;
extern MeasureCommandGetSummaryResponse_HistogramDefaultTypeInternal _MeasureCommandGetSummaryResponse_Histogram_default_instance_;
class MergeArg;
struct MergeArgDefaultTypeInternal;
extern MergeArgDefaultTypeInternal _MergeArg_default_instance_;
class MetadataTestArg;
struct MetadataTestArgDefaultTypeInternal;
extern MetadataTestArgDefaultTypeInternal _MetadataTestArg_default_instance_;
class MetadataTestArg_ReadEntry_DoNotUse;
struct MetadataTestArg_ReadEntry_DoNotUseDefaultTypeInternal;
extern MetadataTestArg_ReadEntry_DoNotUseDefaultTypeInternal _MetadataTestArg_ReadEntry_DoNotUse_default_instance_;
class MetadataTestArg_UpdateEntry_DoNotUse;
struct MetadataTestArg_UpdateEntry_DoNotUseDefaultTypeInternal;
extern MetadataTestArg_UpdateEntry_DoNotUseDefaultTypeInternal _MetadataTestArg_UpdateEntry_DoNotUse_default_instance_;
class MetadataTestArg_WriteEntry_DoNotUse;
struct MetadataTestArg_WriteEntry_DoNotUseDefaultTypeInternal;
extern MetadataTestArg_WriteEntry_DoNotUseDefaultTypeInternal _MetadataTestArg_WriteEntry_DoNotUse_default_instance_;
class MplsPopArg;
struct MplsPopArgDefaultTypeInternal;
extern MplsPopArgDefaultTypeInternal _MplsPopArg_default_instance_;
class NATArg;
struct NATArgDefaultTypeInternal;
extern NATArgDefaultTypeInternal _NATArg_default_instance_;
class NATArg_ExternalAddress;
struct NATArg_ExternalAddressDefaultTypeInternal;
extern NATArg_ExternalAddressDefaultTypeInternal _NATArg_ExternalAddress_default_instance_;
class NATArg_PortRange;
struct NATArg_PortRangeDefaultTypeInternal;
extern NATArg_PortRangeDefaultTypeInternal _NATArg_PortRange_default_instance_;
class NoOpArg;
struct NoOpArgDefaultTypeInternal;
extern NoOpArgDefaultTypeInternal _NoOpArg_default_instance_;
class PortIncArg;
struct PortIncArgDefaultTypeInternal;
extern PortIncArgDefaultTypeInternal _PortIncArg_default_instance_;
class PortIncCommandSetBurstArg;
struct PortIncCommandSetBurstArgDefaultTypeInternal;
extern PortIncCommandSetBurstArgDefaultTypeInternal _PortIncCommandSetBurstArg_default_instance_;
class PortOutArg;
struct PortOutArgDefaultTypeInternal;
extern PortOutArgDefaultTypeInternal _PortOutArg_default_instance_;
class QueueArg;
struct QueueArgDefaultTypeInternal;
extern QueueArgDefaultTypeInternal _QueueArg_default_instance_;
class QueueCommandGetStatusArg;
struct QueueCommandGetStatusArgDefaultTypeInternal;
extern QueueCommandGetStatusArgDefaultTypeInternal _QueueCommandGetStatusArg_default_instance_;
class QueueCommandGetStatusResponse;
struct QueueCommandGetStatusResponseDefaultTypeInternal;
extern QueueCommandGetStatusResponseDefaultTypeInternal _QueueCommandGetStatusResponse_default_instance_;
class QueueCommandSetBurstArg;
struct QueueCommandSetBurstArgDefaultTypeInternal;
extern QueueCommandSetBurstArgDefaultTypeInternal _QueueCommandSetBurstArg_default_instance_;
class QueueCommandSetSizeArg;
struct QueueCommandSetSizeArgDefaultTypeInternal;
extern QueueCommandSetSizeArgDefaultTypeInternal _QueueCommandSetSizeArg_default_instance_;
class QueueIncArg;
struct QueueIncArgDefaultTypeInternal;
extern QueueIncArgDefaultTypeInternal _QueueIncArg_default_instance_;
class QueueIncCommandSetBurstArg;
struct QueueIncCommandSetBurstArgDefaultTypeInternal;
extern QueueIncCommandSetBurstArgDefaultTypeInternal _QueueIncCommandSetBurstArg_default_instance_;
class QueueOutArg;
struct QueueOutArgDefaultTypeInternal;
extern QueueOutArgDefaultTypeInternal _QueueOutArg_default_instance_;
class RandomSplitArg;
struct RandomSplitArgDefaultTypeInternal;
extern RandomSplitArgDefaultTypeInternal _RandomSplitArg_default_instance_;
class RandomSplitCommandSetDroprateArg;
struct RandomSplitCommandSetDroprateArgDefaultTypeInternal;
extern RandomSplitCommandSetDroprateArgDefaultTypeInternal _RandomSplitCommandSetDroprateArg_default_instance_;
class RandomSplitCommandSetGatesArg;
struct RandomSplitCommandSetGatesArgDefaultTypeInternal;
extern RandomSplitCommandSetGatesArgDefaultTypeInternal _RandomSplitCommandSetGatesArg_default_instance_;
class RandomUpdateArg;
struct RandomUpdateArgDefaultTypeInternal;
extern RandomUpdateArgDefaultTypeInternal _RandomUpdateArg_default_instance_;
class RandomUpdateArg_Field;
struct RandomUpdateArg_FieldDefaultTypeInternal;
extern RandomUpdateArg_FieldDefaultTypeInternal _RandomUpdateArg_Field_default_instance_;
class RandomUpdateCommandClearArg;
struct RandomUpdateCommandClearArgDefaultTypeInternal;
extern RandomUpdateCommandClearArgDefaultTypeInternal _RandomUpdateCommandClearArg_default_instance_;
class ReplicateArg;
struct ReplicateArgDefaultTypeInternal;
extern ReplicateArgDefaultTypeInternal _ReplicateArg_default_instance_;
class ReplicateCommandSetGatesArg;
struct ReplicateCommandSetGatesArgDefaultTypeInternal;
extern ReplicateCommandSetGatesArgDefaultTypeInternal _ReplicateCommandSetGatesArg_default_instance_;
class RewriteArg;
struct RewriteArgDefaultTypeInternal;
extern RewriteArgDefaultTypeInternal _RewriteArg_default_instance_;
class RewriteCommandClearArg;
struct RewriteCommandClearArgDefaultTypeInternal;
extern RewriteCommandClearArgDefaultTypeInternal _RewriteCommandClearArg_default_instance_;
class RoundRobinArg;
struct RoundRobinArgDefaultTypeInternal;
extern RoundRobinArgDefaultTypeInternal _RoundRobinArg_default_instance_;
class RoundRobinCommandSetGatesArg;
struct RoundRobinCommandSetGatesArgDefaultTypeInternal;
extern RoundRobinCommandSetGatesArgDefaultTypeInternal _RoundRobinCommandSetGatesArg_default_instance_;
class RoundRobinCommandSetModeArg;
struct RoundRobinCommandSetModeArgDefaultTypeInternal;
extern RoundRobinCommandSetModeArgDefaultTypeInternal _RoundRobinCommandSetModeArg_default_instance_;
class SetMetadataArg;
struct SetMetadataArgDefaultTypeInternal;
extern SetMetadataArgDefaultTypeInternal _SetMetadataArg_default_instance_;
class SetMetadataArg_Attribute;
struct SetMetadataArg_AttributeDefaultTypeInternal;
extern SetMetadataArg_AttributeDefaultTypeInternal _SetMetadataArg_Attribute_default_instance_;
class SinkArg;
struct SinkArgDefaultTypeInternal;
extern SinkArgDefaultTypeInternal _SinkArg_default_instance_;
class SourceArg;
struct SourceArgDefaultTypeInternal;
extern SourceArgDefaultTypeInternal _SourceArg_default_instance_;
class SourceCommandSetBurstArg;
struct SourceCommandSetBurstArgDefaultTypeInternal;
extern SourceCommandSetBurstArgDefaultTypeInternal _SourceCommandSetBurstArg_default_instance_;
class SourceCommandSetPktSizeArg;
struct SourceCommandSetPktSizeArgDefaultTypeInternal;
extern SourceCommandSetPktSizeArgDefaultTypeInternal _SourceCommandSetPktSizeArg_default_instance_;
class SplitArg;
struct SplitArgDefaultTypeInternal;
extern SplitArgDefaultTypeInternal _SplitArg_default_instance_;
class StaticNATArg;
struct StaticNATArgDefaultTypeInternal;
extern StaticNATArgDefaultTypeInternal _StaticNATArg_default_instance_;
class StaticNATArg_AddressRange;
struct StaticNATArg_AddressRangeDefaultTypeInternal;
extern StaticNATArg_AddressRangeDefaultTypeInternal _StaticNATArg_AddressRange_default_instance_;
class StaticNATArg_AddressRangePair;
struct StaticNATArg_AddressRangePairDefaultTypeInternal;
extern StaticNATArg_AddressRangePairDefaultTypeInternal _StaticNATArg_AddressRangePair_default_instance_;
class TimestampArg;
struct TimestampArgDefaultTypeInternal;
extern TimestampArgDefaultTypeInternal _TimestampArg_default_instance_;
class UpdateArg;
struct UpdateArgDefaultTypeInternal;
extern UpdateArgDefaultTypeInternal _UpdateArg_default_instance_;
class UpdateArg_Field;
struct UpdateArg_FieldDefaultTypeInternal;
extern UpdateArg_FieldDefaultTypeInternal _UpdateArg_Field_default_instance_;
class UpdateCommandClearArg;
struct UpdateCommandClearArgDefaultTypeInternal;
extern UpdateCommandClearArgDefaultTypeInternal _UpdateCommandClearArg_default_instance_;
class UrlFilterArg;
struct UrlFilterArgDefaultTypeInternal;
extern UrlFilterArgDefaultTypeInternal _UrlFilterArg_default_instance_;
class UrlFilterArg_Url;
struct UrlFilterArg_UrlDefaultTypeInternal;
extern UrlFilterArg_UrlDefaultTypeInternal _UrlFilterArg_Url_default_instance_;
class UrlFilterConfig;
struct UrlFilterConfigDefaultTypeInternal;
extern UrlFilterConfigDefaultTypeInternal _UrlFilterConfig_default_instance_;
class VLANPopArg;
struct VLANPopArgDefaultTypeInternal;
extern VLANPopArgDefaultTypeInternal _VLANPopArg_default_instance_;
class VLANPushArg;
struct VLANPushArgDefaultTypeInternal;
extern VLANPushArgDefaultTypeInternal _VLANPushArg_default_instance_;
class VLANSplitArg;
struct VLANSplitArgDefaultTypeInternal;
extern VLANSplitArgDefaultTypeInternal _VLANSplitArg_default_instance_;
class VXLANDecapArg;
struct VXLANDecapArgDefaultTypeInternal;
extern VXLANDecapArgDefaultTypeInternal _VXLANDecapArg_default_instance_;
class VXLANEncapArg;
struct VXLANEncapArgDefaultTypeInternal;
extern VXLANEncapArgDefaultTypeInternal _VXLANEncapArg_default_instance_;
class WildcardMatchArg;
struct WildcardMatchArgDefaultTypeInternal;
extern WildcardMatchArgDefaultTypeInternal _WildcardMatchArg_default_instance_;
class WildcardMatchCommandAddArg;
struct WildcardMatchCommandAddArgDefaultTypeInternal;
extern WildcardMatchCommandAddArgDefaultTypeInternal _WildcardMatchCommandAddArg_default_instance_;
class WildcardMatchCommandClearArg;
struct WildcardMatchCommandClearArgDefaultTypeInternal;
extern WildcardMatchCommandClearArgDefaultTypeInternal _WildcardMatchCommandClearArg_default_instance_;
class WildcardMatchCommandDeleteArg;
struct WildcardMatchCommandDeleteArgDefaultTypeInternal;
extern WildcardMatchCommandDeleteArgDefaultTypeInternal _WildcardMatchCommandDeleteArg_default_instance_;
class WildcardMatchCommandSetDefaultGateArg;
struct WildcardMatchCommandSetDefaultGateArgDefaultTypeInternal;
extern WildcardMatchCommandSetDefaultGateArgDefaultTypeInternal _WildcardMatchCommandSetDefaultGateArg_default_instance_;
class WildcardMatchConfig;
struct WildcardMatchConfigDefaultTypeInternal;
extern WildcardMatchConfigDefaultTypeInternal _WildcardMatchConfig_default_instance_;
class WorkerSplitArg;
struct WorkerSplitArgDefaultTypeInternal;
extern WorkerSplitArgDefaultTypeInternal _WorkerSplitArg_default_instance_;
class WorkerSplitArg_WorkerGatesEntry_DoNotUse;
struct WorkerSplitArg_WorkerGatesEntry_DoNotUseDefaultTypeInternal;
extern WorkerSplitArg_WorkerGatesEntry_DoNotUseDefaultTypeInternal _WorkerSplitArg_WorkerGatesEntry_DoNotUse_default_instance_;
}  // namespace pb
}  // namespace bess
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace bess {
namespace pb {

// ===================================================================


// -------------------------------------------------------------------

class WorkerSplitArg_WorkerGatesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          WorkerSplitArg_WorkerGatesEntry_DoNotUse, ::uint32_t, ::uint32_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      WorkerSplitArg_WorkerGatesEntry_DoNotUse, ::uint32_t, ::uint32_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>;
  WorkerSplitArg_WorkerGatesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WorkerSplitArg_WorkerGatesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit WorkerSplitArg_WorkerGatesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const WorkerSplitArg_WorkerGatesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const WorkerSplitArg_WorkerGatesEntry_DoNotUse*>(
        &_WorkerSplitArg_WorkerGatesEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_module_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class WildcardMatchCommandSetDefaultGateArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.WildcardMatchCommandSetDefaultGateArg) */ {
 public:
  inline WildcardMatchCommandSetDefaultGateArg() : WildcardMatchCommandSetDefaultGateArg(nullptr) {}
  ~WildcardMatchCommandSetDefaultGateArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WildcardMatchCommandSetDefaultGateArg(::google::protobuf::internal::ConstantInitialized);

  inline WildcardMatchCommandSetDefaultGateArg(const WildcardMatchCommandSetDefaultGateArg& from)
      : WildcardMatchCommandSetDefaultGateArg(nullptr, from) {}
  WildcardMatchCommandSetDefaultGateArg(WildcardMatchCommandSetDefaultGateArg&& from) noexcept
    : WildcardMatchCommandSetDefaultGateArg() {
    *this = ::std::move(from);
  }

  inline WildcardMatchCommandSetDefaultGateArg& operator=(const WildcardMatchCommandSetDefaultGateArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline WildcardMatchCommandSetDefaultGateArg& operator=(WildcardMatchCommandSetDefaultGateArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WildcardMatchCommandSetDefaultGateArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const WildcardMatchCommandSetDefaultGateArg* internal_default_instance() {
    return reinterpret_cast<const WildcardMatchCommandSetDefaultGateArg*>(
               &_WildcardMatchCommandSetDefaultGateArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(WildcardMatchCommandSetDefaultGateArg& a, WildcardMatchCommandSetDefaultGateArg& b) {
    a.Swap(&b);
  }
  inline void Swap(WildcardMatchCommandSetDefaultGateArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WildcardMatchCommandSetDefaultGateArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WildcardMatchCommandSetDefaultGateArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WildcardMatchCommandSetDefaultGateArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WildcardMatchCommandSetDefaultGateArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WildcardMatchCommandSetDefaultGateArg& from) {
    WildcardMatchCommandSetDefaultGateArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WildcardMatchCommandSetDefaultGateArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.WildcardMatchCommandSetDefaultGateArg";
  }
  protected:
  explicit WildcardMatchCommandSetDefaultGateArg(::google::protobuf::Arena* arena);
  WildcardMatchCommandSetDefaultGateArg(::google::protobuf::Arena* arena, const WildcardMatchCommandSetDefaultGateArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGateFieldNumber = 1,
  };
  // uint64 gate = 1;
  void clear_gate() ;
  ::uint64_t gate() const;
  void set_gate(::uint64_t value);

  private:
  ::uint64_t _internal_gate() const;
  void _internal_set_gate(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.WildcardMatchCommandSetDefaultGateArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t gate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class WildcardMatchCommandClearArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.WildcardMatchCommandClearArg) */ {
 public:
  inline WildcardMatchCommandClearArg() : WildcardMatchCommandClearArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WildcardMatchCommandClearArg(::google::protobuf::internal::ConstantInitialized);

  inline WildcardMatchCommandClearArg(const WildcardMatchCommandClearArg& from)
      : WildcardMatchCommandClearArg(nullptr, from) {}
  WildcardMatchCommandClearArg(WildcardMatchCommandClearArg&& from) noexcept
    : WildcardMatchCommandClearArg() {
    *this = ::std::move(from);
  }

  inline WildcardMatchCommandClearArg& operator=(const WildcardMatchCommandClearArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline WildcardMatchCommandClearArg& operator=(WildcardMatchCommandClearArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WildcardMatchCommandClearArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const WildcardMatchCommandClearArg* internal_default_instance() {
    return reinterpret_cast<const WildcardMatchCommandClearArg*>(
               &_WildcardMatchCommandClearArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(WildcardMatchCommandClearArg& a, WildcardMatchCommandClearArg& b) {
    a.Swap(&b);
  }
  inline void Swap(WildcardMatchCommandClearArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WildcardMatchCommandClearArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WildcardMatchCommandClearArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WildcardMatchCommandClearArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const WildcardMatchCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const WildcardMatchCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.WildcardMatchCommandClearArg";
  }
  protected:
  explicit WildcardMatchCommandClearArg(::google::protobuf::Arena* arena);
  WildcardMatchCommandClearArg(::google::protobuf::Arena* arena, const WildcardMatchCommandClearArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.WildcardMatchCommandClearArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class VXLANEncapArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.VXLANEncapArg) */ {
 public:
  inline VXLANEncapArg() : VXLANEncapArg(nullptr) {}
  ~VXLANEncapArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VXLANEncapArg(::google::protobuf::internal::ConstantInitialized);

  inline VXLANEncapArg(const VXLANEncapArg& from)
      : VXLANEncapArg(nullptr, from) {}
  VXLANEncapArg(VXLANEncapArg&& from) noexcept
    : VXLANEncapArg() {
    *this = ::std::move(from);
  }

  inline VXLANEncapArg& operator=(const VXLANEncapArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline VXLANEncapArg& operator=(VXLANEncapArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VXLANEncapArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const VXLANEncapArg* internal_default_instance() {
    return reinterpret_cast<const VXLANEncapArg*>(
               &_VXLANEncapArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  friend void swap(VXLANEncapArg& a, VXLANEncapArg& b) {
    a.Swap(&b);
  }
  inline void Swap(VXLANEncapArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VXLANEncapArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VXLANEncapArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VXLANEncapArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VXLANEncapArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VXLANEncapArg& from) {
    VXLANEncapArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VXLANEncapArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.VXLANEncapArg";
  }
  protected:
  explicit VXLANEncapArg(::google::protobuf::Arena* arena);
  VXLANEncapArg(::google::protobuf::Arena* arena, const VXLANEncapArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDstportFieldNumber = 1,
  };
  // uint64 dstport = 1;
  void clear_dstport() ;
  ::uint64_t dstport() const;
  void set_dstport(::uint64_t value);

  private:
  ::uint64_t _internal_dstport() const;
  void _internal_set_dstport(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.VXLANEncapArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t dstport_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class VXLANDecapArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.VXLANDecapArg) */ {
 public:
  inline VXLANDecapArg() : VXLANDecapArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VXLANDecapArg(::google::protobuf::internal::ConstantInitialized);

  inline VXLANDecapArg(const VXLANDecapArg& from)
      : VXLANDecapArg(nullptr, from) {}
  VXLANDecapArg(VXLANDecapArg&& from) noexcept
    : VXLANDecapArg() {
    *this = ::std::move(from);
  }

  inline VXLANDecapArg& operator=(const VXLANDecapArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline VXLANDecapArg& operator=(VXLANDecapArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VXLANDecapArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const VXLANDecapArg* internal_default_instance() {
    return reinterpret_cast<const VXLANDecapArg*>(
               &_VXLANDecapArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  friend void swap(VXLANDecapArg& a, VXLANDecapArg& b) {
    a.Swap(&b);
  }
  inline void Swap(VXLANDecapArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VXLANDecapArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VXLANDecapArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VXLANDecapArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const VXLANDecapArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const VXLANDecapArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.VXLANDecapArg";
  }
  protected:
  explicit VXLANDecapArg(::google::protobuf::Arena* arena);
  VXLANDecapArg(::google::protobuf::Arena* arena, const VXLANDecapArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.VXLANDecapArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class VLANSplitArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.VLANSplitArg) */ {
 public:
  inline VLANSplitArg() : VLANSplitArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VLANSplitArg(::google::protobuf::internal::ConstantInitialized);

  inline VLANSplitArg(const VLANSplitArg& from)
      : VLANSplitArg(nullptr, from) {}
  VLANSplitArg(VLANSplitArg&& from) noexcept
    : VLANSplitArg() {
    *this = ::std::move(from);
  }

  inline VLANSplitArg& operator=(const VLANSplitArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline VLANSplitArg& operator=(VLANSplitArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VLANSplitArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const VLANSplitArg* internal_default_instance() {
    return reinterpret_cast<const VLANSplitArg*>(
               &_VLANSplitArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  friend void swap(VLANSplitArg& a, VLANSplitArg& b) {
    a.Swap(&b);
  }
  inline void Swap(VLANSplitArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VLANSplitArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VLANSplitArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VLANSplitArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const VLANSplitArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const VLANSplitArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.VLANSplitArg";
  }
  protected:
  explicit VLANSplitArg(::google::protobuf::Arena* arena);
  VLANSplitArg(::google::protobuf::Arena* arena, const VLANSplitArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.VLANSplitArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class VLANPushArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.VLANPushArg) */ {
 public:
  inline VLANPushArg() : VLANPushArg(nullptr) {}
  ~VLANPushArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VLANPushArg(::google::protobuf::internal::ConstantInitialized);

  inline VLANPushArg(const VLANPushArg& from)
      : VLANPushArg(nullptr, from) {}
  VLANPushArg(VLANPushArg&& from) noexcept
    : VLANPushArg() {
    *this = ::std::move(from);
  }

  inline VLANPushArg& operator=(const VLANPushArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline VLANPushArg& operator=(VLANPushArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VLANPushArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const VLANPushArg* internal_default_instance() {
    return reinterpret_cast<const VLANPushArg*>(
               &_VLANPushArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  friend void swap(VLANPushArg& a, VLANPushArg& b) {
    a.Swap(&b);
  }
  inline void Swap(VLANPushArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VLANPushArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VLANPushArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VLANPushArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VLANPushArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VLANPushArg& from) {
    VLANPushArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VLANPushArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.VLANPushArg";
  }
  protected:
  explicit VLANPushArg(::google::protobuf::Arena* arena);
  VLANPushArg(::google::protobuf::Arena* arena, const VLANPushArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTciFieldNumber = 1,
  };
  // uint64 tci = 1;
  void clear_tci() ;
  ::uint64_t tci() const;
  void set_tci(::uint64_t value);

  private:
  ::uint64_t _internal_tci() const;
  void _internal_set_tci(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.VLANPushArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t tci_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class VLANPopArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.VLANPopArg) */ {
 public:
  inline VLANPopArg() : VLANPopArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VLANPopArg(::google::protobuf::internal::ConstantInitialized);

  inline VLANPopArg(const VLANPopArg& from)
      : VLANPopArg(nullptr, from) {}
  VLANPopArg(VLANPopArg&& from) noexcept
    : VLANPopArg() {
    *this = ::std::move(from);
  }

  inline VLANPopArg& operator=(const VLANPopArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline VLANPopArg& operator=(VLANPopArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VLANPopArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const VLANPopArg* internal_default_instance() {
    return reinterpret_cast<const VLANPopArg*>(
               &_VLANPopArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  friend void swap(VLANPopArg& a, VLANPopArg& b) {
    a.Swap(&b);
  }
  inline void Swap(VLANPopArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VLANPopArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VLANPopArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VLANPopArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const VLANPopArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const VLANPopArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.VLANPopArg";
  }
  protected:
  explicit VLANPopArg(::google::protobuf::Arena* arena);
  VLANPopArg(::google::protobuf::Arena* arena, const VLANPopArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.VLANPopArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class UrlFilterArg_Url final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.UrlFilterArg.Url) */ {
 public:
  inline UrlFilterArg_Url() : UrlFilterArg_Url(nullptr) {}
  ~UrlFilterArg_Url() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UrlFilterArg_Url(::google::protobuf::internal::ConstantInitialized);

  inline UrlFilterArg_Url(const UrlFilterArg_Url& from)
      : UrlFilterArg_Url(nullptr, from) {}
  UrlFilterArg_Url(UrlFilterArg_Url&& from) noexcept
    : UrlFilterArg_Url() {
    *this = ::std::move(from);
  }

  inline UrlFilterArg_Url& operator=(const UrlFilterArg_Url& from) {
    CopyFrom(from);
    return *this;
  }
  inline UrlFilterArg_Url& operator=(UrlFilterArg_Url&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UrlFilterArg_Url& default_instance() {
    return *internal_default_instance();
  }
  static inline const UrlFilterArg_Url* internal_default_instance() {
    return reinterpret_cast<const UrlFilterArg_Url*>(
               &_UrlFilterArg_Url_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(UrlFilterArg_Url& a, UrlFilterArg_Url& b) {
    a.Swap(&b);
  }
  inline void Swap(UrlFilterArg_Url* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UrlFilterArg_Url* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UrlFilterArg_Url* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UrlFilterArg_Url>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UrlFilterArg_Url& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UrlFilterArg_Url& from) {
    UrlFilterArg_Url::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UrlFilterArg_Url* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.UrlFilterArg.Url";
  }
  protected:
  explicit UrlFilterArg_Url(::google::protobuf::Arena* arena);
  UrlFilterArg_Url(::google::protobuf::Arena* arena, const UrlFilterArg_Url& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHostFieldNumber = 1,
    kPathFieldNumber = 2,
  };
  // string host = 1;
  void clear_host() ;
  const std::string& host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  std::string* mutable_host();
  PROTOBUF_NODISCARD std::string* release_host();
  void set_allocated_host(std::string* value);

  private:
  const std::string& _internal_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host(
      const std::string& value);
  std::string* _internal_mutable_host();

  public:
  // string path = 2;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.UrlFilterArg.Url)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class UpdateCommandClearArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.UpdateCommandClearArg) */ {
 public:
  inline UpdateCommandClearArg() : UpdateCommandClearArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateCommandClearArg(::google::protobuf::internal::ConstantInitialized);

  inline UpdateCommandClearArg(const UpdateCommandClearArg& from)
      : UpdateCommandClearArg(nullptr, from) {}
  UpdateCommandClearArg(UpdateCommandClearArg&& from) noexcept
    : UpdateCommandClearArg() {
    *this = ::std::move(from);
  }

  inline UpdateCommandClearArg& operator=(const UpdateCommandClearArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCommandClearArg& operator=(UpdateCommandClearArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateCommandClearArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateCommandClearArg* internal_default_instance() {
    return reinterpret_cast<const UpdateCommandClearArg*>(
               &_UpdateCommandClearArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(UpdateCommandClearArg& a, UpdateCommandClearArg& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateCommandClearArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCommandClearArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateCommandClearArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateCommandClearArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UpdateCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UpdateCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.UpdateCommandClearArg";
  }
  protected:
  explicit UpdateCommandClearArg(::google::protobuf::Arena* arena);
  UpdateCommandClearArg(::google::protobuf::Arena* arena, const UpdateCommandClearArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.UpdateCommandClearArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class UpdateArg_Field final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.UpdateArg.Field) */ {
 public:
  inline UpdateArg_Field() : UpdateArg_Field(nullptr) {}
  ~UpdateArg_Field() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateArg_Field(::google::protobuf::internal::ConstantInitialized);

  inline UpdateArg_Field(const UpdateArg_Field& from)
      : UpdateArg_Field(nullptr, from) {}
  UpdateArg_Field(UpdateArg_Field&& from) noexcept
    : UpdateArg_Field() {
    *this = ::std::move(from);
  }

  inline UpdateArg_Field& operator=(const UpdateArg_Field& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateArg_Field& operator=(UpdateArg_Field&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateArg_Field& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateArg_Field* internal_default_instance() {
    return reinterpret_cast<const UpdateArg_Field*>(
               &_UpdateArg_Field_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(UpdateArg_Field& a, UpdateArg_Field& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateArg_Field* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateArg_Field* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateArg_Field* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateArg_Field>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateArg_Field& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpdateArg_Field& from) {
    UpdateArg_Field::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateArg_Field* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.UpdateArg.Field";
  }
  protected:
  explicit UpdateArg_Field(::google::protobuf::Arena* arena);
  UpdateArg_Field(::google::protobuf::Arena* arena, const UpdateArg_Field& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOffsetFieldNumber = 1,
    kSizeFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // int64 offset = 1;
  void clear_offset() ;
  ::int64_t offset() const;
  void set_offset(::int64_t value);

  private:
  ::int64_t _internal_offset() const;
  void _internal_set_offset(::int64_t value);

  public:
  // uint64 size = 2;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // uint64 value = 3;
  void clear_value() ;
  ::uint64_t value() const;
  void set_value(::uint64_t value);

  private:
  ::uint64_t _internal_value() const;
  void _internal_set_value(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.UpdateArg.Field)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t offset_;
    ::uint64_t size_;
    ::uint64_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class TimestampArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.TimestampArg) */ {
 public:
  inline TimestampArg() : TimestampArg(nullptr) {}
  ~TimestampArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TimestampArg(::google::protobuf::internal::ConstantInitialized);

  inline TimestampArg(const TimestampArg& from)
      : TimestampArg(nullptr, from) {}
  TimestampArg(TimestampArg&& from) noexcept
    : TimestampArg() {
    *this = ::std::move(from);
  }

  inline TimestampArg& operator=(const TimestampArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimestampArg& operator=(TimestampArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimestampArg& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kOffset = 1,
    kAttrName = 2,
    TYPE_NOT_SET = 0,
  };

  static inline const TimestampArg* internal_default_instance() {
    return reinterpret_cast<const TimestampArg*>(
               &_TimestampArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(TimestampArg& a, TimestampArg& b) {
    a.Swap(&b);
  }
  inline void Swap(TimestampArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimestampArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimestampArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TimestampArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TimestampArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TimestampArg& from) {
    TimestampArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TimestampArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.TimestampArg";
  }
  protected:
  explicit TimestampArg(::google::protobuf::Arena* arena);
  TimestampArg(::google::protobuf::Arena* arena, const TimestampArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOffsetFieldNumber = 1,
    kAttrNameFieldNumber = 2,
  };
  // uint64 offset = 1;
  bool has_offset() const;
  void clear_offset() ;
  ::uint64_t offset() const;
  void set_offset(::uint64_t value);

  private:
  ::uint64_t _internal_offset() const;
  void _internal_set_offset(::uint64_t value);

  public:
  // string attr_name = 2;
  bool has_attr_name() const;
  void clear_attr_name() ;
  const std::string& attr_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attr_name(Arg_&& arg, Args_... args);
  std::string* mutable_attr_name();
  PROTOBUF_NODISCARD std::string* release_attr_name();
  void set_allocated_attr_name(std::string* value);

  private:
  const std::string& _internal_attr_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attr_name(
      const std::string& value);
  std::string* _internal_mutable_attr_name();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:bess.pb.TimestampArg)
 private:
  class _Internal;
  void set_has_offset();
  void set_has_attr_name();

  inline bool has_type() const;
  inline void clear_has_type();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 0,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::uint64_t offset_;
      ::google::protobuf::internal::ArenaStringPtr attr_name_;
    } type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class StaticNATArg_AddressRange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.StaticNATArg.AddressRange) */ {
 public:
  inline StaticNATArg_AddressRange() : StaticNATArg_AddressRange(nullptr) {}
  ~StaticNATArg_AddressRange() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StaticNATArg_AddressRange(::google::protobuf::internal::ConstantInitialized);

  inline StaticNATArg_AddressRange(const StaticNATArg_AddressRange& from)
      : StaticNATArg_AddressRange(nullptr, from) {}
  StaticNATArg_AddressRange(StaticNATArg_AddressRange&& from) noexcept
    : StaticNATArg_AddressRange() {
    *this = ::std::move(from);
  }

  inline StaticNATArg_AddressRange& operator=(const StaticNATArg_AddressRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticNATArg_AddressRange& operator=(StaticNATArg_AddressRange&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticNATArg_AddressRange& default_instance() {
    return *internal_default_instance();
  }
  static inline const StaticNATArg_AddressRange* internal_default_instance() {
    return reinterpret_cast<const StaticNATArg_AddressRange*>(
               &_StaticNATArg_AddressRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(StaticNATArg_AddressRange& a, StaticNATArg_AddressRange& b) {
    a.Swap(&b);
  }
  inline void Swap(StaticNATArg_AddressRange* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticNATArg_AddressRange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticNATArg_AddressRange* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StaticNATArg_AddressRange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticNATArg_AddressRange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StaticNATArg_AddressRange& from) {
    StaticNATArg_AddressRange::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StaticNATArg_AddressRange* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.StaticNATArg.AddressRange";
  }
  protected:
  explicit StaticNATArg_AddressRange(::google::protobuf::Arena* arena);
  StaticNATArg_AddressRange(::google::protobuf::Arena* arena, const StaticNATArg_AddressRange& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartFieldNumber = 1,
    kEndFieldNumber = 2,
  };
  // string start = 1;
  void clear_start() ;
  const std::string& start() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_start(Arg_&& arg, Args_... args);
  std::string* mutable_start();
  PROTOBUF_NODISCARD std::string* release_start();
  void set_allocated_start(std::string* value);

  private:
  const std::string& _internal_start() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_start(
      const std::string& value);
  std::string* _internal_mutable_start();

  public:
  // string end = 2;
  void clear_end() ;
  const std::string& end() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_end(Arg_&& arg, Args_... args);
  std::string* mutable_end();
  PROTOBUF_NODISCARD std::string* release_end();
  void set_allocated_end(std::string* value);

  private:
  const std::string& _internal_end() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_end(
      const std::string& value);
  std::string* _internal_mutable_end();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.StaticNATArg.AddressRange)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr start_;
    ::google::protobuf::internal::ArenaStringPtr end_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class SplitArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.SplitArg) */ {
 public:
  inline SplitArg() : SplitArg(nullptr) {}
  ~SplitArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SplitArg(::google::protobuf::internal::ConstantInitialized);

  inline SplitArg(const SplitArg& from)
      : SplitArg(nullptr, from) {}
  SplitArg(SplitArg&& from) noexcept
    : SplitArg() {
    *this = ::std::move(from);
  }

  inline SplitArg& operator=(const SplitArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline SplitArg& operator=(SplitArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SplitArg& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kAttribute = 2,
    kOffset = 3,
    TYPE_NOT_SET = 0,
  };

  static inline const SplitArg* internal_default_instance() {
    return reinterpret_cast<const SplitArg*>(
               &_SplitArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(SplitArg& a, SplitArg& b) {
    a.Swap(&b);
  }
  inline void Swap(SplitArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SplitArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SplitArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SplitArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SplitArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SplitArg& from) {
    SplitArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SplitArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.SplitArg";
  }
  protected:
  explicit SplitArg(::google::protobuf::Arena* arena);
  SplitArg(::google::protobuf::Arena* arena, const SplitArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSizeFieldNumber = 1,
    kAttributeFieldNumber = 2,
    kOffsetFieldNumber = 3,
  };
  // uint64 size = 1;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // string attribute = 2;
  bool has_attribute() const;
  void clear_attribute() ;
  const std::string& attribute() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attribute(Arg_&& arg, Args_... args);
  std::string* mutable_attribute();
  PROTOBUF_NODISCARD std::string* release_attribute();
  void set_allocated_attribute(std::string* value);

  private:
  const std::string& _internal_attribute() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attribute(
      const std::string& value);
  std::string* _internal_mutable_attribute();

  public:
  // int64 offset = 3;
  bool has_offset() const;
  void clear_offset() ;
  ::int64_t offset() const;
  void set_offset(::int64_t value);

  private:
  ::int64_t _internal_offset() const;
  void _internal_set_offset(::int64_t value);

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:bess.pb.SplitArg)
 private:
  class _Internal;
  void set_has_attribute();
  void set_has_offset();

  inline bool has_type() const;
  inline void clear_has_type();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      34, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t size_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr attribute_;
      ::int64_t offset_;
    } type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class SourceCommandSetPktSizeArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.SourceCommandSetPktSizeArg) */ {
 public:
  inline SourceCommandSetPktSizeArg() : SourceCommandSetPktSizeArg(nullptr) {}
  ~SourceCommandSetPktSizeArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SourceCommandSetPktSizeArg(::google::protobuf::internal::ConstantInitialized);

  inline SourceCommandSetPktSizeArg(const SourceCommandSetPktSizeArg& from)
      : SourceCommandSetPktSizeArg(nullptr, from) {}
  SourceCommandSetPktSizeArg(SourceCommandSetPktSizeArg&& from) noexcept
    : SourceCommandSetPktSizeArg() {
    *this = ::std::move(from);
  }

  inline SourceCommandSetPktSizeArg& operator=(const SourceCommandSetPktSizeArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceCommandSetPktSizeArg& operator=(SourceCommandSetPktSizeArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceCommandSetPktSizeArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceCommandSetPktSizeArg* internal_default_instance() {
    return reinterpret_cast<const SourceCommandSetPktSizeArg*>(
               &_SourceCommandSetPktSizeArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(SourceCommandSetPktSizeArg& a, SourceCommandSetPktSizeArg& b) {
    a.Swap(&b);
  }
  inline void Swap(SourceCommandSetPktSizeArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceCommandSetPktSizeArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceCommandSetPktSizeArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SourceCommandSetPktSizeArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceCommandSetPktSizeArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SourceCommandSetPktSizeArg& from) {
    SourceCommandSetPktSizeArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceCommandSetPktSizeArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.SourceCommandSetPktSizeArg";
  }
  protected:
  explicit SourceCommandSetPktSizeArg(::google::protobuf::Arena* arena);
  SourceCommandSetPktSizeArg(::google::protobuf::Arena* arena, const SourceCommandSetPktSizeArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPktSizeFieldNumber = 1,
  };
  // uint64 pkt_size = 1;
  void clear_pkt_size() ;
  ::uint64_t pkt_size() const;
  void set_pkt_size(::uint64_t value);

  private:
  ::uint64_t _internal_pkt_size() const;
  void _internal_set_pkt_size(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.SourceCommandSetPktSizeArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t pkt_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class SourceCommandSetBurstArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.SourceCommandSetBurstArg) */ {
 public:
  inline SourceCommandSetBurstArg() : SourceCommandSetBurstArg(nullptr) {}
  ~SourceCommandSetBurstArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SourceCommandSetBurstArg(::google::protobuf::internal::ConstantInitialized);

  inline SourceCommandSetBurstArg(const SourceCommandSetBurstArg& from)
      : SourceCommandSetBurstArg(nullptr, from) {}
  SourceCommandSetBurstArg(SourceCommandSetBurstArg&& from) noexcept
    : SourceCommandSetBurstArg() {
    *this = ::std::move(from);
  }

  inline SourceCommandSetBurstArg& operator=(const SourceCommandSetBurstArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceCommandSetBurstArg& operator=(SourceCommandSetBurstArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceCommandSetBurstArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceCommandSetBurstArg* internal_default_instance() {
    return reinterpret_cast<const SourceCommandSetBurstArg*>(
               &_SourceCommandSetBurstArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(SourceCommandSetBurstArg& a, SourceCommandSetBurstArg& b) {
    a.Swap(&b);
  }
  inline void Swap(SourceCommandSetBurstArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceCommandSetBurstArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceCommandSetBurstArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SourceCommandSetBurstArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceCommandSetBurstArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SourceCommandSetBurstArg& from) {
    SourceCommandSetBurstArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceCommandSetBurstArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.SourceCommandSetBurstArg";
  }
  protected:
  explicit SourceCommandSetBurstArg(::google::protobuf::Arena* arena);
  SourceCommandSetBurstArg(::google::protobuf::Arena* arena, const SourceCommandSetBurstArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBurstFieldNumber = 1,
  };
  // uint64 burst = 1;
  void clear_burst() ;
  ::uint64_t burst() const;
  void set_burst(::uint64_t value);

  private:
  ::uint64_t _internal_burst() const;
  void _internal_set_burst(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.SourceCommandSetBurstArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t burst_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class SourceArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.SourceArg) */ {
 public:
  inline SourceArg() : SourceArg(nullptr) {}
  ~SourceArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SourceArg(::google::protobuf::internal::ConstantInitialized);

  inline SourceArg(const SourceArg& from)
      : SourceArg(nullptr, from) {}
  SourceArg(SourceArg&& from) noexcept
    : SourceArg() {
    *this = ::std::move(from);
  }

  inline SourceArg& operator=(const SourceArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceArg& operator=(SourceArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SourceArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const SourceArg* internal_default_instance() {
    return reinterpret_cast<const SourceArg*>(
               &_SourceArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(SourceArg& a, SourceArg& b) {
    a.Swap(&b);
  }
  inline void Swap(SourceArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SourceArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SourceArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SourceArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SourceArg& from) {
    SourceArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SourceArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.SourceArg";
  }
  protected:
  explicit SourceArg(::google::protobuf::Arena* arena);
  SourceArg(::google::protobuf::Arena* arena, const SourceArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPktSizeFieldNumber = 1,
  };
  // uint64 pkt_size = 1;
  void clear_pkt_size() ;
  ::uint64_t pkt_size() const;
  void set_pkt_size(::uint64_t value);

  private:
  ::uint64_t _internal_pkt_size() const;
  void _internal_set_pkt_size(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.SourceArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t pkt_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class SinkArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.SinkArg) */ {
 public:
  inline SinkArg() : SinkArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SinkArg(::google::protobuf::internal::ConstantInitialized);

  inline SinkArg(const SinkArg& from)
      : SinkArg(nullptr, from) {}
  SinkArg(SinkArg&& from) noexcept
    : SinkArg() {
    *this = ::std::move(from);
  }

  inline SinkArg& operator=(const SinkArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline SinkArg& operator=(SinkArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SinkArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const SinkArg* internal_default_instance() {
    return reinterpret_cast<const SinkArg*>(
               &_SinkArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(SinkArg& a, SinkArg& b) {
    a.Swap(&b);
  }
  inline void Swap(SinkArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SinkArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SinkArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SinkArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SinkArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SinkArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.SinkArg";
  }
  protected:
  explicit SinkArg(::google::protobuf::Arena* arena);
  SinkArg(::google::protobuf::Arena* arena, const SinkArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.SinkArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class SetMetadataArg_Attribute final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.SetMetadataArg.Attribute) */ {
 public:
  inline SetMetadataArg_Attribute() : SetMetadataArg_Attribute(nullptr) {}
  ~SetMetadataArg_Attribute() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetMetadataArg_Attribute(::google::protobuf::internal::ConstantInitialized);

  inline SetMetadataArg_Attribute(const SetMetadataArg_Attribute& from)
      : SetMetadataArg_Attribute(nullptr, from) {}
  SetMetadataArg_Attribute(SetMetadataArg_Attribute&& from) noexcept
    : SetMetadataArg_Attribute() {
    *this = ::std::move(from);
  }

  inline SetMetadataArg_Attribute& operator=(const SetMetadataArg_Attribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMetadataArg_Attribute& operator=(SetMetadataArg_Attribute&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMetadataArg_Attribute& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kValueInt = 3,
    kValueBin = 4,
    VALUE_NOT_SET = 0,
  };

  static inline const SetMetadataArg_Attribute* internal_default_instance() {
    return reinterpret_cast<const SetMetadataArg_Attribute*>(
               &_SetMetadataArg_Attribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(SetMetadataArg_Attribute& a, SetMetadataArg_Attribute& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMetadataArg_Attribute* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMetadataArg_Attribute* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMetadataArg_Attribute* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMetadataArg_Attribute>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMetadataArg_Attribute& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetMetadataArg_Attribute& from) {
    SetMetadataArg_Attribute::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetMetadataArg_Attribute* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.SetMetadataArg.Attribute";
  }
  protected:
  explicit SetMetadataArg_Attribute(::google::protobuf::Arena* arena);
  SetMetadataArg_Attribute(::google::protobuf::Arena* arena, const SetMetadataArg_Attribute& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kMaskFieldNumber = 6,
    kSizeFieldNumber = 2,
    kOffsetFieldNumber = 5,
    kRshiftBitsFieldNumber = 7,
    kValueIntFieldNumber = 3,
    kValueBinFieldNumber = 4,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bytes mask = 6;
  void clear_mask() ;
  const std::string& mask() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mask(Arg_&& arg, Args_... args);
  std::string* mutable_mask();
  PROTOBUF_NODISCARD std::string* release_mask();
  void set_allocated_mask(std::string* value);

  private:
  const std::string& _internal_mask() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mask(
      const std::string& value);
  std::string* _internal_mutable_mask();

  public:
  // uint64 size = 2;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // int32 offset = 5;
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // int32 rshift_bits = 7;
  void clear_rshift_bits() ;
  ::int32_t rshift_bits() const;
  void set_rshift_bits(::int32_t value);

  private:
  ::int32_t _internal_rshift_bits() const;
  void _internal_set_rshift_bits(::int32_t value);

  public:
  // uint64 value_int = 3;
  bool has_value_int() const;
  void clear_value_int() ;
  ::uint64_t value_int() const;
  void set_value_int(::uint64_t value);

  private:
  ::uint64_t _internal_value_int() const;
  void _internal_set_value_int(::uint64_t value);

  public:
  // bytes value_bin = 4;
  bool has_value_bin() const;
  void clear_value_bin() ;
  const std::string& value_bin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value_bin(Arg_&& arg, Args_... args);
  std::string* mutable_value_bin();
  PROTOBUF_NODISCARD std::string* release_value_bin();
  void set_allocated_value_bin(std::string* value);

  private:
  const std::string& _internal_value_bin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_bin(
      const std::string& value);
  std::string* _internal_mutable_value_bin();

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:bess.pb.SetMetadataArg.Attribute)
 private:
  class _Internal;
  void set_has_value_int();
  void set_has_value_bin();

  inline bool has_value() const;
  inline void clear_has_value();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr mask_;
    ::uint64_t size_;
    ::int32_t offset_;
    ::int32_t rshift_bits_;
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::uint64_t value_int_;
      ::google::protobuf::internal::ArenaStringPtr value_bin_;
    } value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RoundRobinCommandSetModeArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.RoundRobinCommandSetModeArg) */ {
 public:
  inline RoundRobinCommandSetModeArg() : RoundRobinCommandSetModeArg(nullptr) {}
  ~RoundRobinCommandSetModeArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RoundRobinCommandSetModeArg(::google::protobuf::internal::ConstantInitialized);

  inline RoundRobinCommandSetModeArg(const RoundRobinCommandSetModeArg& from)
      : RoundRobinCommandSetModeArg(nullptr, from) {}
  RoundRobinCommandSetModeArg(RoundRobinCommandSetModeArg&& from) noexcept
    : RoundRobinCommandSetModeArg() {
    *this = ::std::move(from);
  }

  inline RoundRobinCommandSetModeArg& operator=(const RoundRobinCommandSetModeArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoundRobinCommandSetModeArg& operator=(RoundRobinCommandSetModeArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoundRobinCommandSetModeArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RoundRobinCommandSetModeArg* internal_default_instance() {
    return reinterpret_cast<const RoundRobinCommandSetModeArg*>(
               &_RoundRobinCommandSetModeArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(RoundRobinCommandSetModeArg& a, RoundRobinCommandSetModeArg& b) {
    a.Swap(&b);
  }
  inline void Swap(RoundRobinCommandSetModeArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoundRobinCommandSetModeArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoundRobinCommandSetModeArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RoundRobinCommandSetModeArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoundRobinCommandSetModeArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RoundRobinCommandSetModeArg& from) {
    RoundRobinCommandSetModeArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RoundRobinCommandSetModeArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RoundRobinCommandSetModeArg";
  }
  protected:
  explicit RoundRobinCommandSetModeArg(::google::protobuf::Arena* arena);
  RoundRobinCommandSetModeArg(::google::protobuf::Arena* arena, const RoundRobinCommandSetModeArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModeFieldNumber = 1,
  };
  // string mode = 1;
  void clear_mode() ;
  const std::string& mode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mode(Arg_&& arg, Args_... args);
  std::string* mutable_mode();
  PROTOBUF_NODISCARD std::string* release_mode();
  void set_allocated_mode(std::string* value);

  private:
  const std::string& _internal_mode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mode(
      const std::string& value);
  std::string* _internal_mutable_mode();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.RoundRobinCommandSetModeArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr mode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RoundRobinCommandSetGatesArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.RoundRobinCommandSetGatesArg) */ {
 public:
  inline RoundRobinCommandSetGatesArg() : RoundRobinCommandSetGatesArg(nullptr) {}
  ~RoundRobinCommandSetGatesArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RoundRobinCommandSetGatesArg(::google::protobuf::internal::ConstantInitialized);

  inline RoundRobinCommandSetGatesArg(const RoundRobinCommandSetGatesArg& from)
      : RoundRobinCommandSetGatesArg(nullptr, from) {}
  RoundRobinCommandSetGatesArg(RoundRobinCommandSetGatesArg&& from) noexcept
    : RoundRobinCommandSetGatesArg() {
    *this = ::std::move(from);
  }

  inline RoundRobinCommandSetGatesArg& operator=(const RoundRobinCommandSetGatesArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoundRobinCommandSetGatesArg& operator=(RoundRobinCommandSetGatesArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoundRobinCommandSetGatesArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RoundRobinCommandSetGatesArg* internal_default_instance() {
    return reinterpret_cast<const RoundRobinCommandSetGatesArg*>(
               &_RoundRobinCommandSetGatesArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(RoundRobinCommandSetGatesArg& a, RoundRobinCommandSetGatesArg& b) {
    a.Swap(&b);
  }
  inline void Swap(RoundRobinCommandSetGatesArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoundRobinCommandSetGatesArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoundRobinCommandSetGatesArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RoundRobinCommandSetGatesArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoundRobinCommandSetGatesArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RoundRobinCommandSetGatesArg& from) {
    RoundRobinCommandSetGatesArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RoundRobinCommandSetGatesArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RoundRobinCommandSetGatesArg";
  }
  protected:
  explicit RoundRobinCommandSetGatesArg(::google::protobuf::Arena* arena);
  RoundRobinCommandSetGatesArg(::google::protobuf::Arena* arena, const RoundRobinCommandSetGatesArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGatesFieldNumber = 1,
  };
  // repeated int64 gates = 1;
  int gates_size() const;
  private:
  int _internal_gates_size() const;

  public:
  void clear_gates() ;
  ::int64_t gates(int index) const;
  void set_gates(int index, ::int64_t value);
  void add_gates(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_gates();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_gates();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.RoundRobinCommandSetGatesArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> gates_;
    mutable ::google::protobuf::internal::CachedSize _gates_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RoundRobinArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.RoundRobinArg) */ {
 public:
  inline RoundRobinArg() : RoundRobinArg(nullptr) {}
  ~RoundRobinArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RoundRobinArg(::google::protobuf::internal::ConstantInitialized);

  inline RoundRobinArg(const RoundRobinArg& from)
      : RoundRobinArg(nullptr, from) {}
  RoundRobinArg(RoundRobinArg&& from) noexcept
    : RoundRobinArg() {
    *this = ::std::move(from);
  }

  inline RoundRobinArg& operator=(const RoundRobinArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoundRobinArg& operator=(RoundRobinArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoundRobinArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RoundRobinArg* internal_default_instance() {
    return reinterpret_cast<const RoundRobinArg*>(
               &_RoundRobinArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(RoundRobinArg& a, RoundRobinArg& b) {
    a.Swap(&b);
  }
  inline void Swap(RoundRobinArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoundRobinArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoundRobinArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RoundRobinArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoundRobinArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RoundRobinArg& from) {
    RoundRobinArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RoundRobinArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RoundRobinArg";
  }
  protected:
  explicit RoundRobinArg(::google::protobuf::Arena* arena);
  RoundRobinArg(::google::protobuf::Arena* arena, const RoundRobinArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGatesFieldNumber = 1,
    kModeFieldNumber = 2,
  };
  // repeated int64 gates = 1;
  int gates_size() const;
  private:
  int _internal_gates_size() const;

  public:
  void clear_gates() ;
  ::int64_t gates(int index) const;
  void set_gates(int index, ::int64_t value);
  void add_gates(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_gates();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_gates();

  public:
  // string mode = 2;
  void clear_mode() ;
  const std::string& mode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mode(Arg_&& arg, Args_... args);
  std::string* mutable_mode();
  PROTOBUF_NODISCARD std::string* release_mode();
  void set_allocated_mode(std::string* value);

  private:
  const std::string& _internal_mode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mode(
      const std::string& value);
  std::string* _internal_mutable_mode();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.RoundRobinArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      34, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> gates_;
    mutable ::google::protobuf::internal::CachedSize _gates_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr mode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RewriteCommandClearArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.RewriteCommandClearArg) */ {
 public:
  inline RewriteCommandClearArg() : RewriteCommandClearArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RewriteCommandClearArg(::google::protobuf::internal::ConstantInitialized);

  inline RewriteCommandClearArg(const RewriteCommandClearArg& from)
      : RewriteCommandClearArg(nullptr, from) {}
  RewriteCommandClearArg(RewriteCommandClearArg&& from) noexcept
    : RewriteCommandClearArg() {
    *this = ::std::move(from);
  }

  inline RewriteCommandClearArg& operator=(const RewriteCommandClearArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RewriteCommandClearArg& operator=(RewriteCommandClearArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RewriteCommandClearArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RewriteCommandClearArg* internal_default_instance() {
    return reinterpret_cast<const RewriteCommandClearArg*>(
               &_RewriteCommandClearArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(RewriteCommandClearArg& a, RewriteCommandClearArg& b) {
    a.Swap(&b);
  }
  inline void Swap(RewriteCommandClearArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RewriteCommandClearArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RewriteCommandClearArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RewriteCommandClearArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RewriteCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RewriteCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RewriteCommandClearArg";
  }
  protected:
  explicit RewriteCommandClearArg(::google::protobuf::Arena* arena);
  RewriteCommandClearArg(::google::protobuf::Arena* arena, const RewriteCommandClearArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.RewriteCommandClearArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RewriteArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.RewriteArg) */ {
 public:
  inline RewriteArg() : RewriteArg(nullptr) {}
  ~RewriteArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RewriteArg(::google::protobuf::internal::ConstantInitialized);

  inline RewriteArg(const RewriteArg& from)
      : RewriteArg(nullptr, from) {}
  RewriteArg(RewriteArg&& from) noexcept
    : RewriteArg() {
    *this = ::std::move(from);
  }

  inline RewriteArg& operator=(const RewriteArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RewriteArg& operator=(RewriteArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RewriteArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RewriteArg* internal_default_instance() {
    return reinterpret_cast<const RewriteArg*>(
               &_RewriteArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(RewriteArg& a, RewriteArg& b) {
    a.Swap(&b);
  }
  inline void Swap(RewriteArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RewriteArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RewriteArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RewriteArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RewriteArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RewriteArg& from) {
    RewriteArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RewriteArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RewriteArg";
  }
  protected:
  explicit RewriteArg(::google::protobuf::Arena* arena);
  RewriteArg(::google::protobuf::Arena* arena, const RewriteArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTemplatesFieldNumber = 1,
  };
  // repeated bytes templates = 1;
  int templates_size() const;
  private:
  int _internal_templates_size() const;

  public:
  void clear_templates() ;
  const std::string& templates(int index) const;
  std::string* mutable_templates(int index);
  void set_templates(int index, const std::string& value);
  void set_templates(int index, std::string&& value);
  void set_templates(int index, const char* value);
  void set_templates(int index, const void* value, std::size_t size);
  void set_templates(int index, absl::string_view value);
  std::string* add_templates();
  void add_templates(const std::string& value);
  void add_templates(std::string&& value);
  void add_templates(const char* value);
  void add_templates(const void* value, std::size_t size);
  void add_templates(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& templates() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_templates();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_templates() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_templates();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.RewriteArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> templates_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ReplicateCommandSetGatesArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ReplicateCommandSetGatesArg) */ {
 public:
  inline ReplicateCommandSetGatesArg() : ReplicateCommandSetGatesArg(nullptr) {}
  ~ReplicateCommandSetGatesArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicateCommandSetGatesArg(::google::protobuf::internal::ConstantInitialized);

  inline ReplicateCommandSetGatesArg(const ReplicateCommandSetGatesArg& from)
      : ReplicateCommandSetGatesArg(nullptr, from) {}
  ReplicateCommandSetGatesArg(ReplicateCommandSetGatesArg&& from) noexcept
    : ReplicateCommandSetGatesArg() {
    *this = ::std::move(from);
  }

  inline ReplicateCommandSetGatesArg& operator=(const ReplicateCommandSetGatesArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplicateCommandSetGatesArg& operator=(ReplicateCommandSetGatesArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplicateCommandSetGatesArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplicateCommandSetGatesArg* internal_default_instance() {
    return reinterpret_cast<const ReplicateCommandSetGatesArg*>(
               &_ReplicateCommandSetGatesArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(ReplicateCommandSetGatesArg& a, ReplicateCommandSetGatesArg& b) {
    a.Swap(&b);
  }
  inline void Swap(ReplicateCommandSetGatesArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplicateCommandSetGatesArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplicateCommandSetGatesArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReplicateCommandSetGatesArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplicateCommandSetGatesArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReplicateCommandSetGatesArg& from) {
    ReplicateCommandSetGatesArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReplicateCommandSetGatesArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ReplicateCommandSetGatesArg";
  }
  protected:
  explicit ReplicateCommandSetGatesArg(::google::protobuf::Arena* arena);
  ReplicateCommandSetGatesArg(::google::protobuf::Arena* arena, const ReplicateCommandSetGatesArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGatesFieldNumber = 1,
  };
  // repeated int64 gates = 1;
  int gates_size() const;
  private:
  int _internal_gates_size() const;

  public:
  void clear_gates() ;
  ::int64_t gates(int index) const;
  void set_gates(int index, ::int64_t value);
  void add_gates(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_gates();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_gates();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.ReplicateCommandSetGatesArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> gates_;
    mutable ::google::protobuf::internal::CachedSize _gates_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ReplicateArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ReplicateArg) */ {
 public:
  inline ReplicateArg() : ReplicateArg(nullptr) {}
  ~ReplicateArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReplicateArg(::google::protobuf::internal::ConstantInitialized);

  inline ReplicateArg(const ReplicateArg& from)
      : ReplicateArg(nullptr, from) {}
  ReplicateArg(ReplicateArg&& from) noexcept
    : ReplicateArg() {
    *this = ::std::move(from);
  }

  inline ReplicateArg& operator=(const ReplicateArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplicateArg& operator=(ReplicateArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplicateArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplicateArg* internal_default_instance() {
    return reinterpret_cast<const ReplicateArg*>(
               &_ReplicateArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(ReplicateArg& a, ReplicateArg& b) {
    a.Swap(&b);
  }
  inline void Swap(ReplicateArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplicateArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplicateArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReplicateArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplicateArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReplicateArg& from) {
    ReplicateArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReplicateArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ReplicateArg";
  }
  protected:
  explicit ReplicateArg(::google::protobuf::Arena* arena);
  ReplicateArg(::google::protobuf::Arena* arena, const ReplicateArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGatesFieldNumber = 1,
  };
  // repeated int64 gates = 1;
  int gates_size() const;
  private:
  int _internal_gates_size() const;

  public:
  void clear_gates() ;
  ::int64_t gates(int index) const;
  void set_gates(int index, ::int64_t value);
  void add_gates(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_gates();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_gates();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.ReplicateArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> gates_;
    mutable ::google::protobuf::internal::CachedSize _gates_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RandomUpdateCommandClearArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.RandomUpdateCommandClearArg) */ {
 public:
  inline RandomUpdateCommandClearArg() : RandomUpdateCommandClearArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RandomUpdateCommandClearArg(::google::protobuf::internal::ConstantInitialized);

  inline RandomUpdateCommandClearArg(const RandomUpdateCommandClearArg& from)
      : RandomUpdateCommandClearArg(nullptr, from) {}
  RandomUpdateCommandClearArg(RandomUpdateCommandClearArg&& from) noexcept
    : RandomUpdateCommandClearArg() {
    *this = ::std::move(from);
  }

  inline RandomUpdateCommandClearArg& operator=(const RandomUpdateCommandClearArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RandomUpdateCommandClearArg& operator=(RandomUpdateCommandClearArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RandomUpdateCommandClearArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RandomUpdateCommandClearArg* internal_default_instance() {
    return reinterpret_cast<const RandomUpdateCommandClearArg*>(
               &_RandomUpdateCommandClearArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(RandomUpdateCommandClearArg& a, RandomUpdateCommandClearArg& b) {
    a.Swap(&b);
  }
  inline void Swap(RandomUpdateCommandClearArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RandomUpdateCommandClearArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RandomUpdateCommandClearArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RandomUpdateCommandClearArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RandomUpdateCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RandomUpdateCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RandomUpdateCommandClearArg";
  }
  protected:
  explicit RandomUpdateCommandClearArg(::google::protobuf::Arena* arena);
  RandomUpdateCommandClearArg(::google::protobuf::Arena* arena, const RandomUpdateCommandClearArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.RandomUpdateCommandClearArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RandomUpdateArg_Field final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.RandomUpdateArg.Field) */ {
 public:
  inline RandomUpdateArg_Field() : RandomUpdateArg_Field(nullptr) {}
  ~RandomUpdateArg_Field() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RandomUpdateArg_Field(::google::protobuf::internal::ConstantInitialized);

  inline RandomUpdateArg_Field(const RandomUpdateArg_Field& from)
      : RandomUpdateArg_Field(nullptr, from) {}
  RandomUpdateArg_Field(RandomUpdateArg_Field&& from) noexcept
    : RandomUpdateArg_Field() {
    *this = ::std::move(from);
  }

  inline RandomUpdateArg_Field& operator=(const RandomUpdateArg_Field& from) {
    CopyFrom(from);
    return *this;
  }
  inline RandomUpdateArg_Field& operator=(RandomUpdateArg_Field&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RandomUpdateArg_Field& default_instance() {
    return *internal_default_instance();
  }
  static inline const RandomUpdateArg_Field* internal_default_instance() {
    return reinterpret_cast<const RandomUpdateArg_Field*>(
               &_RandomUpdateArg_Field_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(RandomUpdateArg_Field& a, RandomUpdateArg_Field& b) {
    a.Swap(&b);
  }
  inline void Swap(RandomUpdateArg_Field* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RandomUpdateArg_Field* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RandomUpdateArg_Field* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RandomUpdateArg_Field>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RandomUpdateArg_Field& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RandomUpdateArg_Field& from) {
    RandomUpdateArg_Field::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RandomUpdateArg_Field* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RandomUpdateArg.Field";
  }
  protected:
  explicit RandomUpdateArg_Field(::google::protobuf::Arena* arena);
  RandomUpdateArg_Field(::google::protobuf::Arena* arena, const RandomUpdateArg_Field& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOffsetFieldNumber = 1,
    kSizeFieldNumber = 2,
    kMinFieldNumber = 3,
    kMaxFieldNumber = 4,
  };
  // int64 offset = 1;
  void clear_offset() ;
  ::int64_t offset() const;
  void set_offset(::int64_t value);

  private:
  ::int64_t _internal_offset() const;
  void _internal_set_offset(::int64_t value);

  public:
  // uint64 size = 2;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // uint64 min = 3;
  void clear_min() ;
  ::uint64_t min() const;
  void set_min(::uint64_t value);

  private:
  ::uint64_t _internal_min() const;
  void _internal_set_min(::uint64_t value);

  public:
  // uint64 max = 4;
  void clear_max() ;
  ::uint64_t max() const;
  void set_max(::uint64_t value);

  private:
  ::uint64_t _internal_max() const;
  void _internal_set_max(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.RandomUpdateArg.Field)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t offset_;
    ::uint64_t size_;
    ::uint64_t min_;
    ::uint64_t max_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RandomSplitCommandSetGatesArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.RandomSplitCommandSetGatesArg) */ {
 public:
  inline RandomSplitCommandSetGatesArg() : RandomSplitCommandSetGatesArg(nullptr) {}
  ~RandomSplitCommandSetGatesArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RandomSplitCommandSetGatesArg(::google::protobuf::internal::ConstantInitialized);

  inline RandomSplitCommandSetGatesArg(const RandomSplitCommandSetGatesArg& from)
      : RandomSplitCommandSetGatesArg(nullptr, from) {}
  RandomSplitCommandSetGatesArg(RandomSplitCommandSetGatesArg&& from) noexcept
    : RandomSplitCommandSetGatesArg() {
    *this = ::std::move(from);
  }

  inline RandomSplitCommandSetGatesArg& operator=(const RandomSplitCommandSetGatesArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RandomSplitCommandSetGatesArg& operator=(RandomSplitCommandSetGatesArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RandomSplitCommandSetGatesArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RandomSplitCommandSetGatesArg* internal_default_instance() {
    return reinterpret_cast<const RandomSplitCommandSetGatesArg*>(
               &_RandomSplitCommandSetGatesArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(RandomSplitCommandSetGatesArg& a, RandomSplitCommandSetGatesArg& b) {
    a.Swap(&b);
  }
  inline void Swap(RandomSplitCommandSetGatesArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RandomSplitCommandSetGatesArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RandomSplitCommandSetGatesArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RandomSplitCommandSetGatesArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RandomSplitCommandSetGatesArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RandomSplitCommandSetGatesArg& from) {
    RandomSplitCommandSetGatesArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RandomSplitCommandSetGatesArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RandomSplitCommandSetGatesArg";
  }
  protected:
  explicit RandomSplitCommandSetGatesArg(::google::protobuf::Arena* arena);
  RandomSplitCommandSetGatesArg(::google::protobuf::Arena* arena, const RandomSplitCommandSetGatesArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGatesFieldNumber = 1,
  };
  // repeated int64 gates = 1;
  int gates_size() const;
  private:
  int _internal_gates_size() const;

  public:
  void clear_gates() ;
  ::int64_t gates(int index) const;
  void set_gates(int index, ::int64_t value);
  void add_gates(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_gates();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_gates();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.RandomSplitCommandSetGatesArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> gates_;
    mutable ::google::protobuf::internal::CachedSize _gates_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RandomSplitCommandSetDroprateArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.RandomSplitCommandSetDroprateArg) */ {
 public:
  inline RandomSplitCommandSetDroprateArg() : RandomSplitCommandSetDroprateArg(nullptr) {}
  ~RandomSplitCommandSetDroprateArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RandomSplitCommandSetDroprateArg(::google::protobuf::internal::ConstantInitialized);

  inline RandomSplitCommandSetDroprateArg(const RandomSplitCommandSetDroprateArg& from)
      : RandomSplitCommandSetDroprateArg(nullptr, from) {}
  RandomSplitCommandSetDroprateArg(RandomSplitCommandSetDroprateArg&& from) noexcept
    : RandomSplitCommandSetDroprateArg() {
    *this = ::std::move(from);
  }

  inline RandomSplitCommandSetDroprateArg& operator=(const RandomSplitCommandSetDroprateArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RandomSplitCommandSetDroprateArg& operator=(RandomSplitCommandSetDroprateArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RandomSplitCommandSetDroprateArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RandomSplitCommandSetDroprateArg* internal_default_instance() {
    return reinterpret_cast<const RandomSplitCommandSetDroprateArg*>(
               &_RandomSplitCommandSetDroprateArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(RandomSplitCommandSetDroprateArg& a, RandomSplitCommandSetDroprateArg& b) {
    a.Swap(&b);
  }
  inline void Swap(RandomSplitCommandSetDroprateArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RandomSplitCommandSetDroprateArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RandomSplitCommandSetDroprateArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RandomSplitCommandSetDroprateArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RandomSplitCommandSetDroprateArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RandomSplitCommandSetDroprateArg& from) {
    RandomSplitCommandSetDroprateArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RandomSplitCommandSetDroprateArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RandomSplitCommandSetDroprateArg";
  }
  protected:
  explicit RandomSplitCommandSetDroprateArg(::google::protobuf::Arena* arena);
  RandomSplitCommandSetDroprateArg(::google::protobuf::Arena* arena, const RandomSplitCommandSetDroprateArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDropRateFieldNumber = 1,
  };
  // double drop_rate = 1;
  void clear_drop_rate() ;
  double drop_rate() const;
  void set_drop_rate(double value);

  private:
  double _internal_drop_rate() const;
  void _internal_set_drop_rate(double value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.RandomSplitCommandSetDroprateArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double drop_rate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RandomSplitArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.RandomSplitArg) */ {
 public:
  inline RandomSplitArg() : RandomSplitArg(nullptr) {}
  ~RandomSplitArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RandomSplitArg(::google::protobuf::internal::ConstantInitialized);

  inline RandomSplitArg(const RandomSplitArg& from)
      : RandomSplitArg(nullptr, from) {}
  RandomSplitArg(RandomSplitArg&& from) noexcept
    : RandomSplitArg() {
    *this = ::std::move(from);
  }

  inline RandomSplitArg& operator=(const RandomSplitArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RandomSplitArg& operator=(RandomSplitArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RandomSplitArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RandomSplitArg* internal_default_instance() {
    return reinterpret_cast<const RandomSplitArg*>(
               &_RandomSplitArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(RandomSplitArg& a, RandomSplitArg& b) {
    a.Swap(&b);
  }
  inline void Swap(RandomSplitArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RandomSplitArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RandomSplitArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RandomSplitArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RandomSplitArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RandomSplitArg& from) {
    RandomSplitArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RandomSplitArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RandomSplitArg";
  }
  protected:
  explicit RandomSplitArg(::google::protobuf::Arena* arena);
  RandomSplitArg(::google::protobuf::Arena* arena, const RandomSplitArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGatesFieldNumber = 2,
    kDropRateFieldNumber = 1,
  };
  // repeated int64 gates = 2;
  int gates_size() const;
  private:
  int _internal_gates_size() const;

  public:
  void clear_gates() ;
  ::int64_t gates(int index) const;
  void set_gates(int index, ::int64_t value);
  void add_gates(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_gates();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_gates();

  public:
  // double drop_rate = 1;
  void clear_drop_rate() ;
  double drop_rate() const;
  void set_drop_rate(double value);

  private:
  double _internal_drop_rate() const;
  void _internal_set_drop_rate(double value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.RandomSplitArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> gates_;
    mutable ::google::protobuf::internal::CachedSize _gates_cached_byte_size_;
    double drop_rate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class QueueOutArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.QueueOutArg) */ {
 public:
  inline QueueOutArg() : QueueOutArg(nullptr) {}
  ~QueueOutArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueueOutArg(::google::protobuf::internal::ConstantInitialized);

  inline QueueOutArg(const QueueOutArg& from)
      : QueueOutArg(nullptr, from) {}
  QueueOutArg(QueueOutArg&& from) noexcept
    : QueueOutArg() {
    *this = ::std::move(from);
  }

  inline QueueOutArg& operator=(const QueueOutArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueueOutArg& operator=(QueueOutArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueueOutArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueueOutArg* internal_default_instance() {
    return reinterpret_cast<const QueueOutArg*>(
               &_QueueOutArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(QueueOutArg& a, QueueOutArg& b) {
    a.Swap(&b);
  }
  inline void Swap(QueueOutArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueueOutArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueueOutArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueueOutArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueueOutArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueueOutArg& from) {
    QueueOutArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueueOutArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.QueueOutArg";
  }
  protected:
  explicit QueueOutArg(::google::protobuf::Arena* arena);
  QueueOutArg(::google::protobuf::Arena* arena, const QueueOutArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPortFieldNumber = 1,
    kQidFieldNumber = 2,
  };
  // string port = 1;
  void clear_port() ;
  const std::string& port() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_port(Arg_&& arg, Args_... args);
  std::string* mutable_port();
  PROTOBUF_NODISCARD std::string* release_port();
  void set_allocated_port(std::string* value);

  private:
  const std::string& _internal_port() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_port(
      const std::string& value);
  std::string* _internal_mutable_port();

  public:
  // uint64 qid = 2;
  void clear_qid() ;
  ::uint64_t qid() const;
  void set_qid(::uint64_t value);

  private:
  ::uint64_t _internal_qid() const;
  void _internal_set_qid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.QueueOutArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      32, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr port_;
    ::uint64_t qid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class QueueIncCommandSetBurstArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.QueueIncCommandSetBurstArg) */ {
 public:
  inline QueueIncCommandSetBurstArg() : QueueIncCommandSetBurstArg(nullptr) {}
  ~QueueIncCommandSetBurstArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueueIncCommandSetBurstArg(::google::protobuf::internal::ConstantInitialized);

  inline QueueIncCommandSetBurstArg(const QueueIncCommandSetBurstArg& from)
      : QueueIncCommandSetBurstArg(nullptr, from) {}
  QueueIncCommandSetBurstArg(QueueIncCommandSetBurstArg&& from) noexcept
    : QueueIncCommandSetBurstArg() {
    *this = ::std::move(from);
  }

  inline QueueIncCommandSetBurstArg& operator=(const QueueIncCommandSetBurstArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueueIncCommandSetBurstArg& operator=(QueueIncCommandSetBurstArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueueIncCommandSetBurstArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueueIncCommandSetBurstArg* internal_default_instance() {
    return reinterpret_cast<const QueueIncCommandSetBurstArg*>(
               &_QueueIncCommandSetBurstArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(QueueIncCommandSetBurstArg& a, QueueIncCommandSetBurstArg& b) {
    a.Swap(&b);
  }
  inline void Swap(QueueIncCommandSetBurstArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueueIncCommandSetBurstArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueueIncCommandSetBurstArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueueIncCommandSetBurstArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueueIncCommandSetBurstArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueueIncCommandSetBurstArg& from) {
    QueueIncCommandSetBurstArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueueIncCommandSetBurstArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.QueueIncCommandSetBurstArg";
  }
  protected:
  explicit QueueIncCommandSetBurstArg(::google::protobuf::Arena* arena);
  QueueIncCommandSetBurstArg(::google::protobuf::Arena* arena, const QueueIncCommandSetBurstArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBurstFieldNumber = 1,
  };
  // uint64 burst = 1;
  void clear_burst() ;
  ::uint64_t burst() const;
  void set_burst(::uint64_t value);

  private:
  ::uint64_t _internal_burst() const;
  void _internal_set_burst(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.QueueIncCommandSetBurstArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t burst_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class QueueIncArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.QueueIncArg) */ {
 public:
  inline QueueIncArg() : QueueIncArg(nullptr) {}
  ~QueueIncArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueueIncArg(::google::protobuf::internal::ConstantInitialized);

  inline QueueIncArg(const QueueIncArg& from)
      : QueueIncArg(nullptr, from) {}
  QueueIncArg(QueueIncArg&& from) noexcept
    : QueueIncArg() {
    *this = ::std::move(from);
  }

  inline QueueIncArg& operator=(const QueueIncArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueueIncArg& operator=(QueueIncArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueueIncArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueueIncArg* internal_default_instance() {
    return reinterpret_cast<const QueueIncArg*>(
               &_QueueIncArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(QueueIncArg& a, QueueIncArg& b) {
    a.Swap(&b);
  }
  inline void Swap(QueueIncArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueueIncArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueueIncArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueueIncArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueueIncArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueueIncArg& from) {
    QueueIncArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueueIncArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.QueueIncArg";
  }
  protected:
  explicit QueueIncArg(::google::protobuf::Arena* arena);
  QueueIncArg(::google::protobuf::Arena* arena, const QueueIncArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPortFieldNumber = 1,
    kQidFieldNumber = 2,
    kPrefetchFieldNumber = 3,
  };
  // string port = 1;
  void clear_port() ;
  const std::string& port() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_port(Arg_&& arg, Args_... args);
  std::string* mutable_port();
  PROTOBUF_NODISCARD std::string* release_port();
  void set_allocated_port(std::string* value);

  private:
  const std::string& _internal_port() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_port(
      const std::string& value);
  std::string* _internal_mutable_port();

  public:
  // uint64 qid = 2;
  void clear_qid() ;
  ::uint64_t qid() const;
  void set_qid(::uint64_t value);

  private:
  ::uint64_t _internal_qid() const;
  void _internal_set_qid(::uint64_t value);

  public:
  // bool prefetch = 3;
  void clear_prefetch() ;
  bool prefetch() const;
  void set_prefetch(bool value);

  private:
  bool _internal_prefetch() const;
  void _internal_set_prefetch(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.QueueIncArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      32, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr port_;
    ::uint64_t qid_;
    bool prefetch_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class QueueCommandSetSizeArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.QueueCommandSetSizeArg) */ {
 public:
  inline QueueCommandSetSizeArg() : QueueCommandSetSizeArg(nullptr) {}
  ~QueueCommandSetSizeArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueueCommandSetSizeArg(::google::protobuf::internal::ConstantInitialized);

  inline QueueCommandSetSizeArg(const QueueCommandSetSizeArg& from)
      : QueueCommandSetSizeArg(nullptr, from) {}
  QueueCommandSetSizeArg(QueueCommandSetSizeArg&& from) noexcept
    : QueueCommandSetSizeArg() {
    *this = ::std::move(from);
  }

  inline QueueCommandSetSizeArg& operator=(const QueueCommandSetSizeArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueueCommandSetSizeArg& operator=(QueueCommandSetSizeArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueueCommandSetSizeArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueueCommandSetSizeArg* internal_default_instance() {
    return reinterpret_cast<const QueueCommandSetSizeArg*>(
               &_QueueCommandSetSizeArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(QueueCommandSetSizeArg& a, QueueCommandSetSizeArg& b) {
    a.Swap(&b);
  }
  inline void Swap(QueueCommandSetSizeArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueueCommandSetSizeArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueueCommandSetSizeArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueueCommandSetSizeArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueueCommandSetSizeArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueueCommandSetSizeArg& from) {
    QueueCommandSetSizeArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueueCommandSetSizeArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.QueueCommandSetSizeArg";
  }
  protected:
  explicit QueueCommandSetSizeArg(::google::protobuf::Arena* arena);
  QueueCommandSetSizeArg(::google::protobuf::Arena* arena, const QueueCommandSetSizeArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSizeFieldNumber = 1,
  };
  // uint64 size = 1;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.QueueCommandSetSizeArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class QueueCommandSetBurstArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.QueueCommandSetBurstArg) */ {
 public:
  inline QueueCommandSetBurstArg() : QueueCommandSetBurstArg(nullptr) {}
  ~QueueCommandSetBurstArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueueCommandSetBurstArg(::google::protobuf::internal::ConstantInitialized);

  inline QueueCommandSetBurstArg(const QueueCommandSetBurstArg& from)
      : QueueCommandSetBurstArg(nullptr, from) {}
  QueueCommandSetBurstArg(QueueCommandSetBurstArg&& from) noexcept
    : QueueCommandSetBurstArg() {
    *this = ::std::move(from);
  }

  inline QueueCommandSetBurstArg& operator=(const QueueCommandSetBurstArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueueCommandSetBurstArg& operator=(QueueCommandSetBurstArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueueCommandSetBurstArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueueCommandSetBurstArg* internal_default_instance() {
    return reinterpret_cast<const QueueCommandSetBurstArg*>(
               &_QueueCommandSetBurstArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(QueueCommandSetBurstArg& a, QueueCommandSetBurstArg& b) {
    a.Swap(&b);
  }
  inline void Swap(QueueCommandSetBurstArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueueCommandSetBurstArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueueCommandSetBurstArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueueCommandSetBurstArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueueCommandSetBurstArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueueCommandSetBurstArg& from) {
    QueueCommandSetBurstArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueueCommandSetBurstArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.QueueCommandSetBurstArg";
  }
  protected:
  explicit QueueCommandSetBurstArg(::google::protobuf::Arena* arena);
  QueueCommandSetBurstArg(::google::protobuf::Arena* arena, const QueueCommandSetBurstArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBurstFieldNumber = 1,
  };
  // uint64 burst = 1;
  void clear_burst() ;
  ::uint64_t burst() const;
  void set_burst(::uint64_t value);

  private:
  ::uint64_t _internal_burst() const;
  void _internal_set_burst(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.QueueCommandSetBurstArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t burst_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class QueueCommandGetStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.QueueCommandGetStatusResponse) */ {
 public:
  inline QueueCommandGetStatusResponse() : QueueCommandGetStatusResponse(nullptr) {}
  ~QueueCommandGetStatusResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueueCommandGetStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline QueueCommandGetStatusResponse(const QueueCommandGetStatusResponse& from)
      : QueueCommandGetStatusResponse(nullptr, from) {}
  QueueCommandGetStatusResponse(QueueCommandGetStatusResponse&& from) noexcept
    : QueueCommandGetStatusResponse() {
    *this = ::std::move(from);
  }

  inline QueueCommandGetStatusResponse& operator=(const QueueCommandGetStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueueCommandGetStatusResponse& operator=(QueueCommandGetStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueueCommandGetStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueueCommandGetStatusResponse* internal_default_instance() {
    return reinterpret_cast<const QueueCommandGetStatusResponse*>(
               &_QueueCommandGetStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(QueueCommandGetStatusResponse& a, QueueCommandGetStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueueCommandGetStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueueCommandGetStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueueCommandGetStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueueCommandGetStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueueCommandGetStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueueCommandGetStatusResponse& from) {
    QueueCommandGetStatusResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueueCommandGetStatusResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.QueueCommandGetStatusResponse";
  }
  protected:
  explicit QueueCommandGetStatusResponse(::google::protobuf::Arena* arena);
  QueueCommandGetStatusResponse(::google::protobuf::Arena* arena, const QueueCommandGetStatusResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountFieldNumber = 1,
    kSizeFieldNumber = 2,
    kEnqueuedFieldNumber = 3,
    kDequeuedFieldNumber = 4,
    kDroppedFieldNumber = 5,
  };
  // uint64 count = 1;
  void clear_count() ;
  ::uint64_t count() const;
  void set_count(::uint64_t value);

  private:
  ::uint64_t _internal_count() const;
  void _internal_set_count(::uint64_t value);

  public:
  // uint64 size = 2;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // uint64 enqueued = 3;
  void clear_enqueued() ;
  ::uint64_t enqueued() const;
  void set_enqueued(::uint64_t value);

  private:
  ::uint64_t _internal_enqueued() const;
  void _internal_set_enqueued(::uint64_t value);

  public:
  // uint64 dequeued = 4;
  void clear_dequeued() ;
  ::uint64_t dequeued() const;
  void set_dequeued(::uint64_t value);

  private:
  ::uint64_t _internal_dequeued() const;
  void _internal_set_dequeued(::uint64_t value);

  public:
  // uint64 dropped = 5;
  void clear_dropped() ;
  ::uint64_t dropped() const;
  void set_dropped(::uint64_t value);

  private:
  ::uint64_t _internal_dropped() const;
  void _internal_set_dropped(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.QueueCommandGetStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t count_;
    ::uint64_t size_;
    ::uint64_t enqueued_;
    ::uint64_t dequeued_;
    ::uint64_t dropped_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class QueueCommandGetStatusArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.QueueCommandGetStatusArg) */ {
 public:
  inline QueueCommandGetStatusArg() : QueueCommandGetStatusArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueueCommandGetStatusArg(::google::protobuf::internal::ConstantInitialized);

  inline QueueCommandGetStatusArg(const QueueCommandGetStatusArg& from)
      : QueueCommandGetStatusArg(nullptr, from) {}
  QueueCommandGetStatusArg(QueueCommandGetStatusArg&& from) noexcept
    : QueueCommandGetStatusArg() {
    *this = ::std::move(from);
  }

  inline QueueCommandGetStatusArg& operator=(const QueueCommandGetStatusArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueueCommandGetStatusArg& operator=(QueueCommandGetStatusArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueueCommandGetStatusArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueueCommandGetStatusArg* internal_default_instance() {
    return reinterpret_cast<const QueueCommandGetStatusArg*>(
               &_QueueCommandGetStatusArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(QueueCommandGetStatusArg& a, QueueCommandGetStatusArg& b) {
    a.Swap(&b);
  }
  inline void Swap(QueueCommandGetStatusArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueueCommandGetStatusArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueueCommandGetStatusArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueueCommandGetStatusArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueueCommandGetStatusArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueueCommandGetStatusArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.QueueCommandGetStatusArg";
  }
  protected:
  explicit QueueCommandGetStatusArg(::google::protobuf::Arena* arena);
  QueueCommandGetStatusArg(::google::protobuf::Arena* arena, const QueueCommandGetStatusArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.QueueCommandGetStatusArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class QueueArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.QueueArg) */ {
 public:
  inline QueueArg() : QueueArg(nullptr) {}
  ~QueueArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueueArg(::google::protobuf::internal::ConstantInitialized);

  inline QueueArg(const QueueArg& from)
      : QueueArg(nullptr, from) {}
  QueueArg(QueueArg&& from) noexcept
    : QueueArg() {
    *this = ::std::move(from);
  }

  inline QueueArg& operator=(const QueueArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueueArg& operator=(QueueArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueueArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueueArg* internal_default_instance() {
    return reinterpret_cast<const QueueArg*>(
               &_QueueArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(QueueArg& a, QueueArg& b) {
    a.Swap(&b);
  }
  inline void Swap(QueueArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueueArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueueArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueueArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueueArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const QueueArg& from) {
    QueueArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueueArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.QueueArg";
  }
  protected:
  explicit QueueArg(::google::protobuf::Arena* arena);
  QueueArg(::google::protobuf::Arena* arena, const QueueArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSizeFieldNumber = 1,
    kPrefetchFieldNumber = 2,
    kBackpressureFieldNumber = 3,
  };
  // uint64 size = 1;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // bool prefetch = 2;
  void clear_prefetch() ;
  bool prefetch() const;
  void set_prefetch(bool value);

  private:
  bool _internal_prefetch() const;
  void _internal_set_prefetch(bool value);

  public:
  // bool backpressure = 3;
  void clear_backpressure() ;
  bool backpressure() const;
  void set_backpressure(bool value);

  private:
  bool _internal_backpressure() const;
  void _internal_set_backpressure(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.QueueArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t size_;
    bool prefetch_;
    bool backpressure_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class PortOutArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.PortOutArg) */ {
 public:
  inline PortOutArg() : PortOutArg(nullptr) {}
  ~PortOutArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PortOutArg(::google::protobuf::internal::ConstantInitialized);

  inline PortOutArg(const PortOutArg& from)
      : PortOutArg(nullptr, from) {}
  PortOutArg(PortOutArg&& from) noexcept
    : PortOutArg() {
    *this = ::std::move(from);
  }

  inline PortOutArg& operator=(const PortOutArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline PortOutArg& operator=(PortOutArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PortOutArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const PortOutArg* internal_default_instance() {
    return reinterpret_cast<const PortOutArg*>(
               &_PortOutArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(PortOutArg& a, PortOutArg& b) {
    a.Swap(&b);
  }
  inline void Swap(PortOutArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PortOutArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PortOutArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PortOutArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PortOutArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PortOutArg& from) {
    PortOutArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PortOutArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.PortOutArg";
  }
  protected:
  explicit PortOutArg(::google::protobuf::Arena* arena);
  PortOutArg(::google::protobuf::Arena* arena, const PortOutArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPortFieldNumber = 1,
  };
  // string port = 1;
  void clear_port() ;
  const std::string& port() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_port(Arg_&& arg, Args_... args);
  std::string* mutable_port();
  PROTOBUF_NODISCARD std::string* release_port();
  void set_allocated_port(std::string* value);

  private:
  const std::string& _internal_port() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_port(
      const std::string& value);
  std::string* _internal_mutable_port();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.PortOutArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      31, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr port_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class PortIncCommandSetBurstArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.PortIncCommandSetBurstArg) */ {
 public:
  inline PortIncCommandSetBurstArg() : PortIncCommandSetBurstArg(nullptr) {}
  ~PortIncCommandSetBurstArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PortIncCommandSetBurstArg(::google::protobuf::internal::ConstantInitialized);

  inline PortIncCommandSetBurstArg(const PortIncCommandSetBurstArg& from)
      : PortIncCommandSetBurstArg(nullptr, from) {}
  PortIncCommandSetBurstArg(PortIncCommandSetBurstArg&& from) noexcept
    : PortIncCommandSetBurstArg() {
    *this = ::std::move(from);
  }

  inline PortIncCommandSetBurstArg& operator=(const PortIncCommandSetBurstArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline PortIncCommandSetBurstArg& operator=(PortIncCommandSetBurstArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PortIncCommandSetBurstArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const PortIncCommandSetBurstArg* internal_default_instance() {
    return reinterpret_cast<const PortIncCommandSetBurstArg*>(
               &_PortIncCommandSetBurstArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(PortIncCommandSetBurstArg& a, PortIncCommandSetBurstArg& b) {
    a.Swap(&b);
  }
  inline void Swap(PortIncCommandSetBurstArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PortIncCommandSetBurstArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PortIncCommandSetBurstArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PortIncCommandSetBurstArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PortIncCommandSetBurstArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PortIncCommandSetBurstArg& from) {
    PortIncCommandSetBurstArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PortIncCommandSetBurstArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.PortIncCommandSetBurstArg";
  }
  protected:
  explicit PortIncCommandSetBurstArg(::google::protobuf::Arena* arena);
  PortIncCommandSetBurstArg(::google::protobuf::Arena* arena, const PortIncCommandSetBurstArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBurstFieldNumber = 1,
  };
  // uint64 burst = 1;
  void clear_burst() ;
  ::uint64_t burst() const;
  void set_burst(::uint64_t value);

  private:
  ::uint64_t _internal_burst() const;
  void _internal_set_burst(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.PortIncCommandSetBurstArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t burst_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class PortIncArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.PortIncArg) */ {
 public:
  inline PortIncArg() : PortIncArg(nullptr) {}
  ~PortIncArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PortIncArg(::google::protobuf::internal::ConstantInitialized);

  inline PortIncArg(const PortIncArg& from)
      : PortIncArg(nullptr, from) {}
  PortIncArg(PortIncArg&& from) noexcept
    : PortIncArg() {
    *this = ::std::move(from);
  }

  inline PortIncArg& operator=(const PortIncArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline PortIncArg& operator=(PortIncArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PortIncArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const PortIncArg* internal_default_instance() {
    return reinterpret_cast<const PortIncArg*>(
               &_PortIncArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(PortIncArg& a, PortIncArg& b) {
    a.Swap(&b);
  }
  inline void Swap(PortIncArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PortIncArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PortIncArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PortIncArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PortIncArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PortIncArg& from) {
    PortIncArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PortIncArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.PortIncArg";
  }
  protected:
  explicit PortIncArg(::google::protobuf::Arena* arena);
  PortIncArg(::google::protobuf::Arena* arena, const PortIncArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPortFieldNumber = 1,
    kPrefetchFieldNumber = 2,
  };
  // string port = 1;
  void clear_port() ;
  const std::string& port() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_port(Arg_&& arg, Args_... args);
  std::string* mutable_port();
  PROTOBUF_NODISCARD std::string* release_port();
  void set_allocated_port(std::string* value);

  private:
  const std::string& _internal_port() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_port(
      const std::string& value);
  std::string* _internal_mutable_port();

  public:
  // bool prefetch = 2;
  void clear_prefetch() ;
  bool prefetch() const;
  void set_prefetch(bool value);

  private:
  bool _internal_prefetch() const;
  void _internal_set_prefetch(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.PortIncArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      31, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr port_;
    bool prefetch_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class NoOpArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.NoOpArg) */ {
 public:
  inline NoOpArg() : NoOpArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NoOpArg(::google::protobuf::internal::ConstantInitialized);

  inline NoOpArg(const NoOpArg& from)
      : NoOpArg(nullptr, from) {}
  NoOpArg(NoOpArg&& from) noexcept
    : NoOpArg() {
    *this = ::std::move(from);
  }

  inline NoOpArg& operator=(const NoOpArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline NoOpArg& operator=(NoOpArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NoOpArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const NoOpArg* internal_default_instance() {
    return reinterpret_cast<const NoOpArg*>(
               &_NoOpArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(NoOpArg& a, NoOpArg& b) {
    a.Swap(&b);
  }
  inline void Swap(NoOpArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NoOpArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NoOpArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NoOpArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NoOpArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NoOpArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.NoOpArg";
  }
  protected:
  explicit NoOpArg(::google::protobuf::Arena* arena);
  NoOpArg(::google::protobuf::Arena* arena, const NoOpArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.NoOpArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class NATArg_PortRange final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.NATArg.PortRange) */ {
 public:
  inline NATArg_PortRange() : NATArg_PortRange(nullptr) {}
  ~NATArg_PortRange() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NATArg_PortRange(::google::protobuf::internal::ConstantInitialized);

  inline NATArg_PortRange(const NATArg_PortRange& from)
      : NATArg_PortRange(nullptr, from) {}
  NATArg_PortRange(NATArg_PortRange&& from) noexcept
    : NATArg_PortRange() {
    *this = ::std::move(from);
  }

  inline NATArg_PortRange& operator=(const NATArg_PortRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline NATArg_PortRange& operator=(NATArg_PortRange&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NATArg_PortRange& default_instance() {
    return *internal_default_instance();
  }
  static inline const NATArg_PortRange* internal_default_instance() {
    return reinterpret_cast<const NATArg_PortRange*>(
               &_NATArg_PortRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(NATArg_PortRange& a, NATArg_PortRange& b) {
    a.Swap(&b);
  }
  inline void Swap(NATArg_PortRange* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NATArg_PortRange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NATArg_PortRange* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NATArg_PortRange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NATArg_PortRange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NATArg_PortRange& from) {
    NATArg_PortRange::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NATArg_PortRange* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.NATArg.PortRange";
  }
  protected:
  explicit NATArg_PortRange(::google::protobuf::Arena* arena);
  NATArg_PortRange(::google::protobuf::Arena* arena, const NATArg_PortRange& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBeginFieldNumber = 1,
    kEndFieldNumber = 2,
    kSuspendedFieldNumber = 3,
  };
  // uint32 begin = 1;
  void clear_begin() ;
  ::uint32_t begin() const;
  void set_begin(::uint32_t value);

  private:
  ::uint32_t _internal_begin() const;
  void _internal_set_begin(::uint32_t value);

  public:
  // uint32 end = 2;
  void clear_end() ;
  ::uint32_t end() const;
  void set_end(::uint32_t value);

  private:
  ::uint32_t _internal_end() const;
  void _internal_set_end(::uint32_t value);

  public:
  // bool suspended = 3;
  void clear_suspended() ;
  bool suspended() const;
  void set_suspended(bool value);

  private:
  bool _internal_suspended() const;
  void _internal_set_suspended(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.NATArg.PortRange)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t begin_;
    ::uint32_t end_;
    bool suspended_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class MplsPopArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.MplsPopArg) */ {
 public:
  inline MplsPopArg() : MplsPopArg(nullptr) {}
  ~MplsPopArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MplsPopArg(::google::protobuf::internal::ConstantInitialized);

  inline MplsPopArg(const MplsPopArg& from)
      : MplsPopArg(nullptr, from) {}
  MplsPopArg(MplsPopArg&& from) noexcept
    : MplsPopArg() {
    *this = ::std::move(from);
  }

  inline MplsPopArg& operator=(const MplsPopArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MplsPopArg& operator=(MplsPopArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MplsPopArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const MplsPopArg* internal_default_instance() {
    return reinterpret_cast<const MplsPopArg*>(
               &_MplsPopArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  friend void swap(MplsPopArg& a, MplsPopArg& b) {
    a.Swap(&b);
  }
  inline void Swap(MplsPopArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MplsPopArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MplsPopArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MplsPopArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MplsPopArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MplsPopArg& from) {
    MplsPopArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MplsPopArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.MplsPopArg";
  }
  protected:
  explicit MplsPopArg(::google::protobuf::Arena* arena);
  MplsPopArg(::google::protobuf::Arena* arena, const MplsPopArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRemoveEthHeaderFieldNumber = 1,
    kNextEthTypeFieldNumber = 2,
  };
  // bool remove_eth_header = 1;
  void clear_remove_eth_header() ;
  bool remove_eth_header() const;
  void set_remove_eth_header(bool value);

  private:
  bool _internal_remove_eth_header() const;
  void _internal_set_remove_eth_header(bool value);

  public:
  // uint32 next_eth_type = 2;
  void clear_next_eth_type() ;
  ::uint32_t next_eth_type() const;
  void set_next_eth_type(::uint32_t value);

  private:
  ::uint32_t _internal_next_eth_type() const;
  void _internal_set_next_eth_type(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.MplsPopArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool remove_eth_header_;
    ::uint32_t next_eth_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class MetadataTestArg_WriteEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          MetadataTestArg_WriteEntry_DoNotUse, std::string, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      MetadataTestArg_WriteEntry_DoNotUse, std::string, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>;
  MetadataTestArg_WriteEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MetadataTestArg_WriteEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MetadataTestArg_WriteEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MetadataTestArg_WriteEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MetadataTestArg_WriteEntry_DoNotUse*>(
        &_MetadataTestArg_WriteEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "bess.pb.MetadataTestArg.WriteEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_module_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MetadataTestArg_UpdateEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          MetadataTestArg_UpdateEntry_DoNotUse, std::string, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      MetadataTestArg_UpdateEntry_DoNotUse, std::string, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>;
  MetadataTestArg_UpdateEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MetadataTestArg_UpdateEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MetadataTestArg_UpdateEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MetadataTestArg_UpdateEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MetadataTestArg_UpdateEntry_DoNotUse*>(
        &_MetadataTestArg_UpdateEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "bess.pb.MetadataTestArg.UpdateEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_module_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MetadataTestArg_ReadEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          MetadataTestArg_ReadEntry_DoNotUse, std::string, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      MetadataTestArg_ReadEntry_DoNotUse, std::string, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>;
  MetadataTestArg_ReadEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MetadataTestArg_ReadEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MetadataTestArg_ReadEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MetadataTestArg_ReadEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MetadataTestArg_ReadEntry_DoNotUse*>(
        &_MetadataTestArg_ReadEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "bess.pb.MetadataTestArg.ReadEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_module_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MergeArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.MergeArg) */ {
 public:
  inline MergeArg() : MergeArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MergeArg(::google::protobuf::internal::ConstantInitialized);

  inline MergeArg(const MergeArg& from)
      : MergeArg(nullptr, from) {}
  MergeArg(MergeArg&& from) noexcept
    : MergeArg() {
    *this = ::std::move(from);
  }

  inline MergeArg& operator=(const MergeArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MergeArg& operator=(MergeArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MergeArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const MergeArg* internal_default_instance() {
    return reinterpret_cast<const MergeArg*>(
               &_MergeArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(MergeArg& a, MergeArg& b) {
    a.Swap(&b);
  }
  inline void Swap(MergeArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MergeArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MergeArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MergeArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MergeArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MergeArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.MergeArg";
  }
  protected:
  explicit MergeArg(::google::protobuf::Arena* arena);
  MergeArg(::google::protobuf::Arena* arena, const MergeArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.MergeArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class MeasureCommandGetSummaryResponse_Histogram final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.MeasureCommandGetSummaryResponse.Histogram) */ {
 public:
  inline MeasureCommandGetSummaryResponse_Histogram() : MeasureCommandGetSummaryResponse_Histogram(nullptr) {}
  ~MeasureCommandGetSummaryResponse_Histogram() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MeasureCommandGetSummaryResponse_Histogram(::google::protobuf::internal::ConstantInitialized);

  inline MeasureCommandGetSummaryResponse_Histogram(const MeasureCommandGetSummaryResponse_Histogram& from)
      : MeasureCommandGetSummaryResponse_Histogram(nullptr, from) {}
  MeasureCommandGetSummaryResponse_Histogram(MeasureCommandGetSummaryResponse_Histogram&& from) noexcept
    : MeasureCommandGetSummaryResponse_Histogram() {
    *this = ::std::move(from);
  }

  inline MeasureCommandGetSummaryResponse_Histogram& operator=(const MeasureCommandGetSummaryResponse_Histogram& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeasureCommandGetSummaryResponse_Histogram& operator=(MeasureCommandGetSummaryResponse_Histogram&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeasureCommandGetSummaryResponse_Histogram& default_instance() {
    return *internal_default_instance();
  }
  static inline const MeasureCommandGetSummaryResponse_Histogram* internal_default_instance() {
    return reinterpret_cast<const MeasureCommandGetSummaryResponse_Histogram*>(
               &_MeasureCommandGetSummaryResponse_Histogram_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MeasureCommandGetSummaryResponse_Histogram& a, MeasureCommandGetSummaryResponse_Histogram& b) {
    a.Swap(&b);
  }
  inline void Swap(MeasureCommandGetSummaryResponse_Histogram* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeasureCommandGetSummaryResponse_Histogram* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeasureCommandGetSummaryResponse_Histogram* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MeasureCommandGetSummaryResponse_Histogram>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MeasureCommandGetSummaryResponse_Histogram& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MeasureCommandGetSummaryResponse_Histogram& from) {
    MeasureCommandGetSummaryResponse_Histogram::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MeasureCommandGetSummaryResponse_Histogram* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.MeasureCommandGetSummaryResponse.Histogram";
  }
  protected:
  explicit MeasureCommandGetSummaryResponse_Histogram(::google::protobuf::Arena* arena);
  MeasureCommandGetSummaryResponse_Histogram(::google::protobuf::Arena* arena, const MeasureCommandGetSummaryResponse_Histogram& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPercentileValuesNsFieldNumber = 7,
    kCountFieldNumber = 1,
    kAboveRangeFieldNumber = 2,
    kMinNsFieldNumber = 3,
    kAvgNsFieldNumber = 4,
    kMaxNsFieldNumber = 5,
    kTotalNsFieldNumber = 6,
    kResolutionNsFieldNumber = 8,
  };
  // repeated uint64 percentile_values_ns = 7;
  int percentile_values_ns_size() const;
  private:
  int _internal_percentile_values_ns_size() const;

  public:
  void clear_percentile_values_ns() ;
  ::uint64_t percentile_values_ns(int index) const;
  void set_percentile_values_ns(int index, ::uint64_t value);
  void add_percentile_values_ns(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& percentile_values_ns() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_percentile_values_ns();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_percentile_values_ns() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_percentile_values_ns();

  public:
  // uint64 count = 1;
  void clear_count() ;
  ::uint64_t count() const;
  void set_count(::uint64_t value);

  private:
  ::uint64_t _internal_count() const;
  void _internal_set_count(::uint64_t value);

  public:
  // uint64 above_range = 2;
  void clear_above_range() ;
  ::uint64_t above_range() const;
  void set_above_range(::uint64_t value);

  private:
  ::uint64_t _internal_above_range() const;
  void _internal_set_above_range(::uint64_t value);

  public:
  // uint64 min_ns = 3;
  void clear_min_ns() ;
  ::uint64_t min_ns() const;
  void set_min_ns(::uint64_t value);

  private:
  ::uint64_t _internal_min_ns() const;
  void _internal_set_min_ns(::uint64_t value);

  public:
  // uint64 avg_ns = 4;
  void clear_avg_ns() ;
  ::uint64_t avg_ns() const;
  void set_avg_ns(::uint64_t value);

  private:
  ::uint64_t _internal_avg_ns() const;
  void _internal_set_avg_ns(::uint64_t value);

  public:
  // uint64 max_ns = 5;
  void clear_max_ns() ;
  ::uint64_t max_ns() const;
  void set_max_ns(::uint64_t value);

  private:
  ::uint64_t _internal_max_ns() const;
  void _internal_set_max_ns(::uint64_t value);

  public:
  // uint64 total_ns = 6;
  void clear_total_ns() ;
  ::uint64_t total_ns() const;
  void set_total_ns(::uint64_t value);

  private:
  ::uint64_t _internal_total_ns() const;
  void _internal_set_total_ns(::uint64_t value);

  public:
  // uint64 resolution_ns = 8;
  void clear_resolution_ns() ;
  ::uint64_t resolution_ns() const;
  void set_resolution_ns(::uint64_t value);

  private:
  ::uint64_t _internal_resolution_ns() const;
  void _internal_set_resolution_ns(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.MeasureCommandGetSummaryResponse.Histogram)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint64_t> percentile_values_ns_;
    mutable ::google::protobuf::internal::CachedSize _percentile_values_ns_cached_byte_size_;
    ::uint64_t count_;
    ::uint64_t above_range_;
    ::uint64_t min_ns_;
    ::uint64_t avg_ns_;
    ::uint64_t max_ns_;
    ::uint64_t total_ns_;
    ::uint64_t resolution_ns_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class MeasureCommandGetSummaryArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.MeasureCommandGetSummaryArg) */ {
 public:
  inline MeasureCommandGetSummaryArg() : MeasureCommandGetSummaryArg(nullptr) {}
  ~MeasureCommandGetSummaryArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MeasureCommandGetSummaryArg(::google::protobuf::internal::ConstantInitialized);

  inline MeasureCommandGetSummaryArg(const MeasureCommandGetSummaryArg& from)
      : MeasureCommandGetSummaryArg(nullptr, from) {}
  MeasureCommandGetSummaryArg(MeasureCommandGetSummaryArg&& from) noexcept
    : MeasureCommandGetSummaryArg() {
    *this = ::std::move(from);
  }

  inline MeasureCommandGetSummaryArg& operator=(const MeasureCommandGetSummaryArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeasureCommandGetSummaryArg& operator=(MeasureCommandGetSummaryArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeasureCommandGetSummaryArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const MeasureCommandGetSummaryArg* internal_default_instance() {
    return reinterpret_cast<const MeasureCommandGetSummaryArg*>(
               &_MeasureCommandGetSummaryArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MeasureCommandGetSummaryArg& a, MeasureCommandGetSummaryArg& b) {
    a.Swap(&b);
  }
  inline void Swap(MeasureCommandGetSummaryArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeasureCommandGetSummaryArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeasureCommandGetSummaryArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MeasureCommandGetSummaryArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MeasureCommandGetSummaryArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MeasureCommandGetSummaryArg& from) {
    MeasureCommandGetSummaryArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MeasureCommandGetSummaryArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.MeasureCommandGetSummaryArg";
  }
  protected:
  explicit MeasureCommandGetSummaryArg(::google::protobuf::Arena* arena);
  MeasureCommandGetSummaryArg(::google::protobuf::Arena* arena, const MeasureCommandGetSummaryArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLatencyPercentilesFieldNumber = 2,
    kJitterPercentilesFieldNumber = 3,
    kClearFieldNumber = 1,
  };
  // repeated double latency_percentiles = 2;
  int latency_percentiles_size() const;
  private:
  int _internal_latency_percentiles_size() const;

  public:
  void clear_latency_percentiles() ;
  double latency_percentiles(int index) const;
  void set_latency_percentiles(int index, double value);
  void add_latency_percentiles(double value);
  const ::google::protobuf::RepeatedField<double>& latency_percentiles() const;
  ::google::protobuf::RepeatedField<double>* mutable_latency_percentiles();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_latency_percentiles() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_latency_percentiles();

  public:
  // repeated double jitter_percentiles = 3;
  int jitter_percentiles_size() const;
  private:
  int _internal_jitter_percentiles_size() const;

  public:
  void clear_jitter_percentiles() ;
  double jitter_percentiles(int index) const;
  void set_jitter_percentiles(int index, double value);
  void add_jitter_percentiles(double value);
  const ::google::protobuf::RepeatedField<double>& jitter_percentiles() const;
  ::google::protobuf::RepeatedField<double>* mutable_jitter_percentiles();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_jitter_percentiles() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_jitter_percentiles();

  public:
  // bool clear = 1;
  void clear_clear() ;
  bool clear() const;
  void set_clear(bool value);

  private:
  bool _internal_clear() const;
  void _internal_set_clear(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.MeasureCommandGetSummaryArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<double> latency_percentiles_;
    ::google::protobuf::RepeatedField<double> jitter_percentiles_;
    bool clear_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class MeasureArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.MeasureArg) */ {
 public:
  inline MeasureArg() : MeasureArg(nullptr) {}
  ~MeasureArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MeasureArg(::google::protobuf::internal::ConstantInitialized);

  inline MeasureArg(const MeasureArg& from)
      : MeasureArg(nullptr, from) {}
  MeasureArg(MeasureArg&& from) noexcept
    : MeasureArg() {
    *this = ::std::move(from);
  }

  inline MeasureArg& operator=(const MeasureArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeasureArg& operator=(MeasureArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeasureArg& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kOffset = 2,
    kAttrName = 6,
    TYPE_NOT_SET = 0,
  };

  static inline const MeasureArg* internal_default_instance() {
    return reinterpret_cast<const MeasureArg*>(
               &_MeasureArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(MeasureArg& a, MeasureArg& b) {
    a.Swap(&b);
  }
  inline void Swap(MeasureArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeasureArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeasureArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MeasureArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MeasureArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MeasureArg& from) {
    MeasureArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MeasureArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.MeasureArg";
  }
  protected:
  explicit MeasureArg(::google::protobuf::Arena* arena);
  MeasureArg(::google::protobuf::Arena* arena, const MeasureArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJitterSampleProbFieldNumber = 3,
    kLatencyNsMaxFieldNumber = 4,
    kLatencyNsResolutionFieldNumber = 5,
    kOffsetFieldNumber = 2,
    kAttrNameFieldNumber = 6,
  };
  // double jitter_sample_prob = 3;
  void clear_jitter_sample_prob() ;
  double jitter_sample_prob() const;
  void set_jitter_sample_prob(double value);

  private:
  double _internal_jitter_sample_prob() const;
  void _internal_set_jitter_sample_prob(double value);

  public:
  // uint64 latency_ns_max = 4;
  void clear_latency_ns_max() ;
  ::uint64_t latency_ns_max() const;
  void set_latency_ns_max(::uint64_t value);

  private:
  ::uint64_t _internal_latency_ns_max() const;
  void _internal_set_latency_ns_max(::uint64_t value);

  public:
  // uint32 latency_ns_resolution = 5;
  void clear_latency_ns_resolution() ;
  ::uint32_t latency_ns_resolution() const;
  void set_latency_ns_resolution(::uint32_t value);

  private:
  ::uint32_t _internal_latency_ns_resolution() const;
  void _internal_set_latency_ns_resolution(::uint32_t value);

  public:
  // uint64 offset = 2;
  bool has_offset() const;
  void clear_offset() ;
  ::uint64_t offset() const;
  void set_offset(::uint64_t value);

  private:
  ::uint64_t _internal_offset() const;
  void _internal_set_offset(::uint64_t value);

  public:
  // string attr_name = 6;
  bool has_attr_name() const;
  void clear_attr_name() ;
  const std::string& attr_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attr_name(Arg_&& arg, Args_... args);
  std::string* mutable_attr_name();
  PROTOBUF_NODISCARD std::string* release_attr_name();
  void set_allocated_attr_name(std::string* value);

  private:
  const std::string& _internal_attr_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attr_name(
      const std::string& value);
  std::string* _internal_mutable_attr_name();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:bess.pb.MeasureArg)
 private:
  class _Internal;
  void set_has_offset();
  void set_has_attr_name();

  inline bool has_type() const;
  inline void clear_has_type();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 0,
      36, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double jitter_sample_prob_;
    ::uint64_t latency_ns_max_;
    ::uint32_t latency_ns_resolution_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::uint64_t offset_;
      ::google::protobuf::internal::ArenaStringPtr attr_name_;
    } type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class MACSwapArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.MACSwapArg) */ {
 public:
  inline MACSwapArg() : MACSwapArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MACSwapArg(::google::protobuf::internal::ConstantInitialized);

  inline MACSwapArg(const MACSwapArg& from)
      : MACSwapArg(nullptr, from) {}
  MACSwapArg(MACSwapArg&& from) noexcept
    : MACSwapArg() {
    *this = ::std::move(from);
  }

  inline MACSwapArg& operator=(const MACSwapArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MACSwapArg& operator=(MACSwapArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MACSwapArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const MACSwapArg* internal_default_instance() {
    return reinterpret_cast<const MACSwapArg*>(
               &_MACSwapArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(MACSwapArg& a, MACSwapArg& b) {
    a.Swap(&b);
  }
  inline void Swap(MACSwapArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MACSwapArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MACSwapArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MACSwapArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MACSwapArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MACSwapArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.MACSwapArg";
  }
  protected:
  explicit MACSwapArg(::google::protobuf::Arena* arena);
  MACSwapArg(::google::protobuf::Arena* arena, const MACSwapArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.MACSwapArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class L4ChecksumArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.L4ChecksumArg) */ {
 public:
  inline L4ChecksumArg() : L4ChecksumArg(nullptr) {}
  ~L4ChecksumArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR L4ChecksumArg(::google::protobuf::internal::ConstantInitialized);

  inline L4ChecksumArg(const L4ChecksumArg& from)
      : L4ChecksumArg(nullptr, from) {}
  L4ChecksumArg(L4ChecksumArg&& from) noexcept
    : L4ChecksumArg() {
    *this = ::std::move(from);
  }

  inline L4ChecksumArg& operator=(const L4ChecksumArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline L4ChecksumArg& operator=(L4ChecksumArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const L4ChecksumArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const L4ChecksumArg* internal_default_instance() {
    return reinterpret_cast<const L4ChecksumArg*>(
               &_L4ChecksumArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(L4ChecksumArg& a, L4ChecksumArg& b) {
    a.Swap(&b);
  }
  inline void Swap(L4ChecksumArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(L4ChecksumArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  L4ChecksumArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<L4ChecksumArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const L4ChecksumArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const L4ChecksumArg& from) {
    L4ChecksumArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(L4ChecksumArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.L4ChecksumArg";
  }
  protected:
  explicit L4ChecksumArg(::google::protobuf::Arena* arena);
  L4ChecksumArg(::google::protobuf::Arena* arena, const L4ChecksumArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVerifyFieldNumber = 1,
  };
  // bool verify = 1;
  void clear_verify() ;
  bool verify() const;
  void set_verify(bool value);

  private:
  bool _internal_verify() const;
  void _internal_set_verify(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.L4ChecksumArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool verify_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class L2ForwardCommandSetDefaultGateArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.L2ForwardCommandSetDefaultGateArg) */ {
 public:
  inline L2ForwardCommandSetDefaultGateArg() : L2ForwardCommandSetDefaultGateArg(nullptr) {}
  ~L2ForwardCommandSetDefaultGateArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR L2ForwardCommandSetDefaultGateArg(::google::protobuf::internal::ConstantInitialized);

  inline L2ForwardCommandSetDefaultGateArg(const L2ForwardCommandSetDefaultGateArg& from)
      : L2ForwardCommandSetDefaultGateArg(nullptr, from) {}
  L2ForwardCommandSetDefaultGateArg(L2ForwardCommandSetDefaultGateArg&& from) noexcept
    : L2ForwardCommandSetDefaultGateArg() {
    *this = ::std::move(from);
  }

  inline L2ForwardCommandSetDefaultGateArg& operator=(const L2ForwardCommandSetDefaultGateArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline L2ForwardCommandSetDefaultGateArg& operator=(L2ForwardCommandSetDefaultGateArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const L2ForwardCommandSetDefaultGateArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const L2ForwardCommandSetDefaultGateArg* internal_default_instance() {
    return reinterpret_cast<const L2ForwardCommandSetDefaultGateArg*>(
               &_L2ForwardCommandSetDefaultGateArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(L2ForwardCommandSetDefaultGateArg& a, L2ForwardCommandSetDefaultGateArg& b) {
    a.Swap(&b);
  }
  inline void Swap(L2ForwardCommandSetDefaultGateArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(L2ForwardCommandSetDefaultGateArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  L2ForwardCommandSetDefaultGateArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<L2ForwardCommandSetDefaultGateArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const L2ForwardCommandSetDefaultGateArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const L2ForwardCommandSetDefaultGateArg& from) {
    L2ForwardCommandSetDefaultGateArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(L2ForwardCommandSetDefaultGateArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.L2ForwardCommandSetDefaultGateArg";
  }
  protected:
  explicit L2ForwardCommandSetDefaultGateArg(::google::protobuf::Arena* arena);
  L2ForwardCommandSetDefaultGateArg(::google::protobuf::Arena* arena, const L2ForwardCommandSetDefaultGateArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGateFieldNumber = 1,
  };
  // int64 gate = 1;
  void clear_gate() ;
  ::int64_t gate() const;
  void set_gate(::int64_t value);

  private:
  ::int64_t _internal_gate() const;
  void _internal_set_gate(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.L2ForwardCommandSetDefaultGateArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t gate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class L2ForwardCommandPopulateArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.L2ForwardCommandPopulateArg) */ {
 public:
  inline L2ForwardCommandPopulateArg() : L2ForwardCommandPopulateArg(nullptr) {}
  ~L2ForwardCommandPopulateArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR L2ForwardCommandPopulateArg(::google::protobuf::internal::ConstantInitialized);

  inline L2ForwardCommandPopulateArg(const L2ForwardCommandPopulateArg& from)
      : L2ForwardCommandPopulateArg(nullptr, from) {}
  L2ForwardCommandPopulateArg(L2ForwardCommandPopulateArg&& from) noexcept
    : L2ForwardCommandPopulateArg() {
    *this = ::std::move(from);
  }

  inline L2ForwardCommandPopulateArg& operator=(const L2ForwardCommandPopulateArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline L2ForwardCommandPopulateArg& operator=(L2ForwardCommandPopulateArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const L2ForwardCommandPopulateArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const L2ForwardCommandPopulateArg* internal_default_instance() {
    return reinterpret_cast<const L2ForwardCommandPopulateArg*>(
               &_L2ForwardCommandPopulateArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(L2ForwardCommandPopulateArg& a, L2ForwardCommandPopulateArg& b) {
    a.Swap(&b);
  }
  inline void Swap(L2ForwardCommandPopulateArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(L2ForwardCommandPopulateArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  L2ForwardCommandPopulateArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<L2ForwardCommandPopulateArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const L2ForwardCommandPopulateArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const L2ForwardCommandPopulateArg& from) {
    L2ForwardCommandPopulateArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(L2ForwardCommandPopulateArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.L2ForwardCommandPopulateArg";
  }
  protected:
  explicit L2ForwardCommandPopulateArg(::google::protobuf::Arena* arena);
  L2ForwardCommandPopulateArg(::google::protobuf::Arena* arena, const L2ForwardCommandPopulateArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBaseFieldNumber = 1,
    kCountFieldNumber = 2,
    kGateCountFieldNumber = 3,
  };
  // string base = 1;
  void clear_base() ;
  const std::string& base() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_base(Arg_&& arg, Args_... args);
  std::string* mutable_base();
  PROTOBUF_NODISCARD std::string* release_base();
  void set_allocated_base(std::string* value);

  private:
  const std::string& _internal_base() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_base(
      const std::string& value);
  std::string* _internal_mutable_base();

  public:
  // int64 count = 2;
  void clear_count() ;
  ::int64_t count() const;
  void set_count(::int64_t value);

  private:
  ::int64_t _internal_count() const;
  void _internal_set_count(::int64_t value);

  public:
  // int64 gate_count = 3;
  void clear_gate_count() ;
  ::int64_t gate_count() const;
  void set_gate_count(::int64_t value);

  private:
  ::int64_t _internal_gate_count() const;
  void _internal_set_gate_count(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.L2ForwardCommandPopulateArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr base_;
    ::int64_t count_;
    ::int64_t gate_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class L2ForwardCommandLookupResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.L2ForwardCommandLookupResponse) */ {
 public:
  inline L2ForwardCommandLookupResponse() : L2ForwardCommandLookupResponse(nullptr) {}
  ~L2ForwardCommandLookupResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR L2ForwardCommandLookupResponse(::google::protobuf::internal::ConstantInitialized);

  inline L2ForwardCommandLookupResponse(const L2ForwardCommandLookupResponse& from)
      : L2ForwardCommandLookupResponse(nullptr, from) {}
  L2ForwardCommandLookupResponse(L2ForwardCommandLookupResponse&& from) noexcept
    : L2ForwardCommandLookupResponse() {
    *this = ::std::move(from);
  }

  inline L2ForwardCommandLookupResponse& operator=(const L2ForwardCommandLookupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline L2ForwardCommandLookupResponse& operator=(L2ForwardCommandLookupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const L2ForwardCommandLookupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const L2ForwardCommandLookupResponse* internal_default_instance() {
    return reinterpret_cast<const L2ForwardCommandLookupResponse*>(
               &_L2ForwardCommandLookupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(L2ForwardCommandLookupResponse& a, L2ForwardCommandLookupResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(L2ForwardCommandLookupResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(L2ForwardCommandLookupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  L2ForwardCommandLookupResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<L2ForwardCommandLookupResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const L2ForwardCommandLookupResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const L2ForwardCommandLookupResponse& from) {
    L2ForwardCommandLookupResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(L2ForwardCommandLookupResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.L2ForwardCommandLookupResponse";
  }
  protected:
  explicit L2ForwardCommandLookupResponse(::google::protobuf::Arena* arena);
  L2ForwardCommandLookupResponse(::google::protobuf::Arena* arena, const L2ForwardCommandLookupResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGatesFieldNumber = 1,
  };
  // repeated uint64 gates = 1;
  int gates_size() const;
  private:
  int _internal_gates_size() const;

  public:
  void clear_gates() ;
  ::uint64_t gates(int index) const;
  void set_gates(int index, ::uint64_t value);
  void add_gates(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& gates() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_gates();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_gates() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_gates();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.L2ForwardCommandLookupResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint64_t> gates_;
    mutable ::google::protobuf::internal::CachedSize _gates_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class L2ForwardCommandLookupArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.L2ForwardCommandLookupArg) */ {
 public:
  inline L2ForwardCommandLookupArg() : L2ForwardCommandLookupArg(nullptr) {}
  ~L2ForwardCommandLookupArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR L2ForwardCommandLookupArg(::google::protobuf::internal::ConstantInitialized);

  inline L2ForwardCommandLookupArg(const L2ForwardCommandLookupArg& from)
      : L2ForwardCommandLookupArg(nullptr, from) {}
  L2ForwardCommandLookupArg(L2ForwardCommandLookupArg&& from) noexcept
    : L2ForwardCommandLookupArg() {
    *this = ::std::move(from);
  }

  inline L2ForwardCommandLookupArg& operator=(const L2ForwardCommandLookupArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline L2ForwardCommandLookupArg& operator=(L2ForwardCommandLookupArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const L2ForwardCommandLookupArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const L2ForwardCommandLookupArg* internal_default_instance() {
    return reinterpret_cast<const L2ForwardCommandLookupArg*>(
               &_L2ForwardCommandLookupArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(L2ForwardCommandLookupArg& a, L2ForwardCommandLookupArg& b) {
    a.Swap(&b);
  }
  inline void Swap(L2ForwardCommandLookupArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(L2ForwardCommandLookupArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  L2ForwardCommandLookupArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<L2ForwardCommandLookupArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const L2ForwardCommandLookupArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const L2ForwardCommandLookupArg& from) {
    L2ForwardCommandLookupArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(L2ForwardCommandLookupArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.L2ForwardCommandLookupArg";
  }
  protected:
  explicit L2ForwardCommandLookupArg(::google::protobuf::Arena* arena);
  L2ForwardCommandLookupArg(::google::protobuf::Arena* arena, const L2ForwardCommandLookupArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddrsFieldNumber = 1,
  };
  // repeated string addrs = 1;
  int addrs_size() const;
  private:
  int _internal_addrs_size() const;

  public:
  void clear_addrs() ;
  const std::string& addrs(int index) const;
  std::string* mutable_addrs(int index);
  void set_addrs(int index, const std::string& value);
  void set_addrs(int index, std::string&& value);
  void set_addrs(int index, const char* value);
  void set_addrs(int index, const char* value, std::size_t size);
  void set_addrs(int index, absl::string_view value);
  std::string* add_addrs();
  void add_addrs(const std::string& value);
  void add_addrs(std::string&& value);
  void add_addrs(const char* value);
  void add_addrs(const char* value, std::size_t size);
  void add_addrs(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& addrs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_addrs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_addrs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_addrs();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.L2ForwardCommandLookupArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> addrs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class L2ForwardCommandDeleteArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.L2ForwardCommandDeleteArg) */ {
 public:
  inline L2ForwardCommandDeleteArg() : L2ForwardCommandDeleteArg(nullptr) {}
  ~L2ForwardCommandDeleteArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR L2ForwardCommandDeleteArg(::google::protobuf::internal::ConstantInitialized);

  inline L2ForwardCommandDeleteArg(const L2ForwardCommandDeleteArg& from)
      : L2ForwardCommandDeleteArg(nullptr, from) {}
  L2ForwardCommandDeleteArg(L2ForwardCommandDeleteArg&& from) noexcept
    : L2ForwardCommandDeleteArg() {
    *this = ::std::move(from);
  }

  inline L2ForwardCommandDeleteArg& operator=(const L2ForwardCommandDeleteArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline L2ForwardCommandDeleteArg& operator=(L2ForwardCommandDeleteArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const L2ForwardCommandDeleteArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const L2ForwardCommandDeleteArg* internal_default_instance() {
    return reinterpret_cast<const L2ForwardCommandDeleteArg*>(
               &_L2ForwardCommandDeleteArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(L2ForwardCommandDeleteArg& a, L2ForwardCommandDeleteArg& b) {
    a.Swap(&b);
  }
  inline void Swap(L2ForwardCommandDeleteArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(L2ForwardCommandDeleteArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  L2ForwardCommandDeleteArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<L2ForwardCommandDeleteArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const L2ForwardCommandDeleteArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const L2ForwardCommandDeleteArg& from) {
    L2ForwardCommandDeleteArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(L2ForwardCommandDeleteArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.L2ForwardCommandDeleteArg";
  }
  protected:
  explicit L2ForwardCommandDeleteArg(::google::protobuf::Arena* arena);
  L2ForwardCommandDeleteArg(::google::protobuf::Arena* arena, const L2ForwardCommandDeleteArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddrsFieldNumber = 1,
  };
  // repeated string addrs = 1;
  int addrs_size() const;
  private:
  int _internal_addrs_size() const;

  public:
  void clear_addrs() ;
  const std::string& addrs(int index) const;
  std::string* mutable_addrs(int index);
  void set_addrs(int index, const std::string& value);
  void set_addrs(int index, std::string&& value);
  void set_addrs(int index, const char* value);
  void set_addrs(int index, const char* value, std::size_t size);
  void set_addrs(int index, absl::string_view value);
  std::string* add_addrs();
  void add_addrs(const std::string& value);
  void add_addrs(std::string&& value);
  void add_addrs(const char* value);
  void add_addrs(const char* value, std::size_t size);
  void add_addrs(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& addrs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_addrs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_addrs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_addrs();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.L2ForwardCommandDeleteArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> addrs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class L2ForwardCommandAddArg_Entry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.L2ForwardCommandAddArg.Entry) */ {
 public:
  inline L2ForwardCommandAddArg_Entry() : L2ForwardCommandAddArg_Entry(nullptr) {}
  ~L2ForwardCommandAddArg_Entry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR L2ForwardCommandAddArg_Entry(::google::protobuf::internal::ConstantInitialized);

  inline L2ForwardCommandAddArg_Entry(const L2ForwardCommandAddArg_Entry& from)
      : L2ForwardCommandAddArg_Entry(nullptr, from) {}
  L2ForwardCommandAddArg_Entry(L2ForwardCommandAddArg_Entry&& from) noexcept
    : L2ForwardCommandAddArg_Entry() {
    *this = ::std::move(from);
  }

  inline L2ForwardCommandAddArg_Entry& operator=(const L2ForwardCommandAddArg_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline L2ForwardCommandAddArg_Entry& operator=(L2ForwardCommandAddArg_Entry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const L2ForwardCommandAddArg_Entry& default_instance() {
    return *internal_default_instance();
  }
  static inline const L2ForwardCommandAddArg_Entry* internal_default_instance() {
    return reinterpret_cast<const L2ForwardCommandAddArg_Entry*>(
               &_L2ForwardCommandAddArg_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(L2ForwardCommandAddArg_Entry& a, L2ForwardCommandAddArg_Entry& b) {
    a.Swap(&b);
  }
  inline void Swap(L2ForwardCommandAddArg_Entry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(L2ForwardCommandAddArg_Entry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  L2ForwardCommandAddArg_Entry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<L2ForwardCommandAddArg_Entry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const L2ForwardCommandAddArg_Entry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const L2ForwardCommandAddArg_Entry& from) {
    L2ForwardCommandAddArg_Entry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(L2ForwardCommandAddArg_Entry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.L2ForwardCommandAddArg.Entry";
  }
  protected:
  explicit L2ForwardCommandAddArg_Entry(::google::protobuf::Arena* arena);
  L2ForwardCommandAddArg_Entry(::google::protobuf::Arena* arena, const L2ForwardCommandAddArg_Entry& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddrFieldNumber = 1,
    kGateFieldNumber = 2,
  };
  // string addr = 1;
  void clear_addr() ;
  const std::string& addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addr(Arg_&& arg, Args_... args);
  std::string* mutable_addr();
  PROTOBUF_NODISCARD std::string* release_addr();
  void set_allocated_addr(std::string* value);

  private:
  const std::string& _internal_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_addr(
      const std::string& value);
  std::string* _internal_mutable_addr();

  public:
  // int64 gate = 2;
  void clear_gate() ;
  ::int64_t gate() const;
  void set_gate(::int64_t value);

  private:
  ::int64_t _internal_gate() const;
  void _internal_set_gate(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.L2ForwardCommandAddArg.Entry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr addr_;
    ::int64_t gate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class L2ForwardArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.L2ForwardArg) */ {
 public:
  inline L2ForwardArg() : L2ForwardArg(nullptr) {}
  ~L2ForwardArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR L2ForwardArg(::google::protobuf::internal::ConstantInitialized);

  inline L2ForwardArg(const L2ForwardArg& from)
      : L2ForwardArg(nullptr, from) {}
  L2ForwardArg(L2ForwardArg&& from) noexcept
    : L2ForwardArg() {
    *this = ::std::move(from);
  }

  inline L2ForwardArg& operator=(const L2ForwardArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline L2ForwardArg& operator=(L2ForwardArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const L2ForwardArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const L2ForwardArg* internal_default_instance() {
    return reinterpret_cast<const L2ForwardArg*>(
               &_L2ForwardArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(L2ForwardArg& a, L2ForwardArg& b) {
    a.Swap(&b);
  }
  inline void Swap(L2ForwardArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(L2ForwardArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  L2ForwardArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<L2ForwardArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const L2ForwardArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const L2ForwardArg& from) {
    L2ForwardArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(L2ForwardArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.L2ForwardArg";
  }
  protected:
  explicit L2ForwardArg(::google::protobuf::Arena* arena);
  L2ForwardArg(::google::protobuf::Arena* arena, const L2ForwardArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSizeFieldNumber = 1,
    kBucketFieldNumber = 2,
  };
  // int64 size = 1;
  void clear_size() ;
  ::int64_t size() const;
  void set_size(::int64_t value);

  private:
  ::int64_t _internal_size() const;
  void _internal_set_size(::int64_t value);

  public:
  // int64 bucket = 2;
  void clear_bucket() ;
  ::int64_t bucket() const;
  void set_bucket(::int64_t value);

  private:
  ::int64_t _internal_bucket() const;
  void _internal_set_bucket(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.L2ForwardArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t size_;
    ::int64_t bucket_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class IPLookupCommandDeleteArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.IPLookupCommandDeleteArg) */ {
 public:
  inline IPLookupCommandDeleteArg() : IPLookupCommandDeleteArg(nullptr) {}
  ~IPLookupCommandDeleteArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IPLookupCommandDeleteArg(::google::protobuf::internal::ConstantInitialized);

  inline IPLookupCommandDeleteArg(const IPLookupCommandDeleteArg& from)
      : IPLookupCommandDeleteArg(nullptr, from) {}
  IPLookupCommandDeleteArg(IPLookupCommandDeleteArg&& from) noexcept
    : IPLookupCommandDeleteArg() {
    *this = ::std::move(from);
  }

  inline IPLookupCommandDeleteArg& operator=(const IPLookupCommandDeleteArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline IPLookupCommandDeleteArg& operator=(IPLookupCommandDeleteArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IPLookupCommandDeleteArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const IPLookupCommandDeleteArg* internal_default_instance() {
    return reinterpret_cast<const IPLookupCommandDeleteArg*>(
               &_IPLookupCommandDeleteArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(IPLookupCommandDeleteArg& a, IPLookupCommandDeleteArg& b) {
    a.Swap(&b);
  }
  inline void Swap(IPLookupCommandDeleteArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IPLookupCommandDeleteArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IPLookupCommandDeleteArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IPLookupCommandDeleteArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IPLookupCommandDeleteArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IPLookupCommandDeleteArg& from) {
    IPLookupCommandDeleteArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IPLookupCommandDeleteArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.IPLookupCommandDeleteArg";
  }
  protected:
  explicit IPLookupCommandDeleteArg(::google::protobuf::Arena* arena);
  IPLookupCommandDeleteArg(::google::protobuf::Arena* arena, const IPLookupCommandDeleteArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrefixFieldNumber = 1,
    kPrefixLenFieldNumber = 2,
  };
  // string prefix = 1;
  void clear_prefix() ;
  const std::string& prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_prefix();
  PROTOBUF_NODISCARD std::string* release_prefix();
  void set_allocated_prefix(std::string* value);

  private:
  const std::string& _internal_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prefix(
      const std::string& value);
  std::string* _internal_mutable_prefix();

  public:
  // uint64 prefix_len = 2;
  void clear_prefix_len() ;
  ::uint64_t prefix_len() const;
  void set_prefix_len(::uint64_t value);

  private:
  ::uint64_t _internal_prefix_len() const;
  void _internal_set_prefix_len(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.IPLookupCommandDeleteArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr prefix_;
    ::uint64_t prefix_len_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class IPLookupCommandClearArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.IPLookupCommandClearArg) */ {
 public:
  inline IPLookupCommandClearArg() : IPLookupCommandClearArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IPLookupCommandClearArg(::google::protobuf::internal::ConstantInitialized);

  inline IPLookupCommandClearArg(const IPLookupCommandClearArg& from)
      : IPLookupCommandClearArg(nullptr, from) {}
  IPLookupCommandClearArg(IPLookupCommandClearArg&& from) noexcept
    : IPLookupCommandClearArg() {
    *this = ::std::move(from);
  }

  inline IPLookupCommandClearArg& operator=(const IPLookupCommandClearArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline IPLookupCommandClearArg& operator=(IPLookupCommandClearArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IPLookupCommandClearArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const IPLookupCommandClearArg* internal_default_instance() {
    return reinterpret_cast<const IPLookupCommandClearArg*>(
               &_IPLookupCommandClearArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(IPLookupCommandClearArg& a, IPLookupCommandClearArg& b) {
    a.Swap(&b);
  }
  inline void Swap(IPLookupCommandClearArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IPLookupCommandClearArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IPLookupCommandClearArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IPLookupCommandClearArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const IPLookupCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const IPLookupCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.IPLookupCommandClearArg";
  }
  protected:
  explicit IPLookupCommandClearArg(::google::protobuf::Arena* arena);
  IPLookupCommandClearArg(::google::protobuf::Arena* arena, const IPLookupCommandClearArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.IPLookupCommandClearArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class IPLookupCommandAddArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.IPLookupCommandAddArg) */ {
 public:
  inline IPLookupCommandAddArg() : IPLookupCommandAddArg(nullptr) {}
  ~IPLookupCommandAddArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IPLookupCommandAddArg(::google::protobuf::internal::ConstantInitialized);

  inline IPLookupCommandAddArg(const IPLookupCommandAddArg& from)
      : IPLookupCommandAddArg(nullptr, from) {}
  IPLookupCommandAddArg(IPLookupCommandAddArg&& from) noexcept
    : IPLookupCommandAddArg() {
    *this = ::std::move(from);
  }

  inline IPLookupCommandAddArg& operator=(const IPLookupCommandAddArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline IPLookupCommandAddArg& operator=(IPLookupCommandAddArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IPLookupCommandAddArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const IPLookupCommandAddArg* internal_default_instance() {
    return reinterpret_cast<const IPLookupCommandAddArg*>(
               &_IPLookupCommandAddArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(IPLookupCommandAddArg& a, IPLookupCommandAddArg& b) {
    a.Swap(&b);
  }
  inline void Swap(IPLookupCommandAddArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IPLookupCommandAddArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IPLookupCommandAddArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IPLookupCommandAddArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IPLookupCommandAddArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IPLookupCommandAddArg& from) {
    IPLookupCommandAddArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IPLookupCommandAddArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.IPLookupCommandAddArg";
  }
  protected:
  explicit IPLookupCommandAddArg(::google::protobuf::Arena* arena);
  IPLookupCommandAddArg(::google::protobuf::Arena* arena, const IPLookupCommandAddArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrefixFieldNumber = 1,
    kPrefixLenFieldNumber = 2,
    kGateFieldNumber = 3,
  };
  // string prefix = 1;
  void clear_prefix() ;
  const std::string& prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_prefix();
  PROTOBUF_NODISCARD std::string* release_prefix();
  void set_allocated_prefix(std::string* value);

  private:
  const std::string& _internal_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_prefix(
      const std::string& value);
  std::string* _internal_mutable_prefix();

  public:
  // uint64 prefix_len = 2;
  void clear_prefix_len() ;
  ::uint64_t prefix_len() const;
  void set_prefix_len(::uint64_t value);

  private:
  ::uint64_t _internal_prefix_len() const;
  void _internal_set_prefix_len(::uint64_t value);

  public:
  // uint64 gate = 3;
  void clear_gate() ;
  ::uint64_t gate() const;
  void set_gate(::uint64_t value);

  private:
  ::uint64_t _internal_gate() const;
  void _internal_set_gate(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.IPLookupCommandAddArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr prefix_;
    ::uint64_t prefix_len_;
    ::uint64_t gate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class IPLookupArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.IPLookupArg) */ {
 public:
  inline IPLookupArg() : IPLookupArg(nullptr) {}
  ~IPLookupArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IPLookupArg(::google::protobuf::internal::ConstantInitialized);

  inline IPLookupArg(const IPLookupArg& from)
      : IPLookupArg(nullptr, from) {}
  IPLookupArg(IPLookupArg&& from) noexcept
    : IPLookupArg() {
    *this = ::std::move(from);
  }

  inline IPLookupArg& operator=(const IPLookupArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline IPLookupArg& operator=(IPLookupArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IPLookupArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const IPLookupArg* internal_default_instance() {
    return reinterpret_cast<const IPLookupArg*>(
               &_IPLookupArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(IPLookupArg& a, IPLookupArg& b) {
    a.Swap(&b);
  }
  inline void Swap(IPLookupArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IPLookupArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IPLookupArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IPLookupArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IPLookupArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IPLookupArg& from) {
    IPLookupArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IPLookupArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.IPLookupArg";
  }
  protected:
  explicit IPLookupArg(::google::protobuf::Arena* arena);
  IPLookupArg(::google::protobuf::Arena* arena, const IPLookupArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaxRulesFieldNumber = 1,
    kMaxTbl8SFieldNumber = 2,
  };
  // uint32 max_rules = 1;
  void clear_max_rules() ;
  ::uint32_t max_rules() const;
  void set_max_rules(::uint32_t value);

  private:
  ::uint32_t _internal_max_rules() const;
  void _internal_set_max_rules(::uint32_t value);

  public:
  // uint32 max_tbl8s = 2;
  void clear_max_tbl8s() ;
  ::uint32_t max_tbl8s() const;
  void set_max_tbl8s(::uint32_t value);

  private:
  ::uint32_t _internal_max_tbl8s() const;
  void _internal_set_max_tbl8s(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.IPLookupArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t max_rules_;
    ::uint32_t max_tbl8s_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class IPEncapArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.IPEncapArg) */ {
 public:
  inline IPEncapArg() : IPEncapArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IPEncapArg(::google::protobuf::internal::ConstantInitialized);

  inline IPEncapArg(const IPEncapArg& from)
      : IPEncapArg(nullptr, from) {}
  IPEncapArg(IPEncapArg&& from) noexcept
    : IPEncapArg() {
    *this = ::std::move(from);
  }

  inline IPEncapArg& operator=(const IPEncapArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline IPEncapArg& operator=(IPEncapArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IPEncapArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const IPEncapArg* internal_default_instance() {
    return reinterpret_cast<const IPEncapArg*>(
               &_IPEncapArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(IPEncapArg& a, IPEncapArg& b) {
    a.Swap(&b);
  }
  inline void Swap(IPEncapArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IPEncapArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IPEncapArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IPEncapArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const IPEncapArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const IPEncapArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.IPEncapArg";
  }
  protected:
  explicit IPEncapArg(::google::protobuf::Arena* arena);
  IPEncapArg(::google::protobuf::Arena* arena, const IPEncapArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.IPEncapArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class IPChecksumArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.IPChecksumArg) */ {
 public:
  inline IPChecksumArg() : IPChecksumArg(nullptr) {}
  ~IPChecksumArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IPChecksumArg(::google::protobuf::internal::ConstantInitialized);

  inline IPChecksumArg(const IPChecksumArg& from)
      : IPChecksumArg(nullptr, from) {}
  IPChecksumArg(IPChecksumArg&& from) noexcept
    : IPChecksumArg() {
    *this = ::std::move(from);
  }

  inline IPChecksumArg& operator=(const IPChecksumArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline IPChecksumArg& operator=(IPChecksumArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IPChecksumArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const IPChecksumArg* internal_default_instance() {
    return reinterpret_cast<const IPChecksumArg*>(
               &_IPChecksumArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(IPChecksumArg& a, IPChecksumArg& b) {
    a.Swap(&b);
  }
  inline void Swap(IPChecksumArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IPChecksumArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IPChecksumArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IPChecksumArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IPChecksumArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IPChecksumArg& from) {
    IPChecksumArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IPChecksumArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.IPChecksumArg";
  }
  protected:
  explicit IPChecksumArg(::google::protobuf::Arena* arena);
  IPChecksumArg(::google::protobuf::Arena* arena, const IPChecksumArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVerifyFieldNumber = 1,
  };
  // bool verify = 1;
  void clear_verify() ;
  bool verify() const;
  void set_verify(bool value);

  private:
  bool _internal_verify() const;
  void _internal_set_verify(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.IPChecksumArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool verify_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class HashLBCommandSetGatesArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.HashLBCommandSetGatesArg) */ {
 public:
  inline HashLBCommandSetGatesArg() : HashLBCommandSetGatesArg(nullptr) {}
  ~HashLBCommandSetGatesArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HashLBCommandSetGatesArg(::google::protobuf::internal::ConstantInitialized);

  inline HashLBCommandSetGatesArg(const HashLBCommandSetGatesArg& from)
      : HashLBCommandSetGatesArg(nullptr, from) {}
  HashLBCommandSetGatesArg(HashLBCommandSetGatesArg&& from) noexcept
    : HashLBCommandSetGatesArg() {
    *this = ::std::move(from);
  }

  inline HashLBCommandSetGatesArg& operator=(const HashLBCommandSetGatesArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline HashLBCommandSetGatesArg& operator=(HashLBCommandSetGatesArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HashLBCommandSetGatesArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const HashLBCommandSetGatesArg* internal_default_instance() {
    return reinterpret_cast<const HashLBCommandSetGatesArg*>(
               &_HashLBCommandSetGatesArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(HashLBCommandSetGatesArg& a, HashLBCommandSetGatesArg& b) {
    a.Swap(&b);
  }
  inline void Swap(HashLBCommandSetGatesArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HashLBCommandSetGatesArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HashLBCommandSetGatesArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HashLBCommandSetGatesArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HashLBCommandSetGatesArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HashLBCommandSetGatesArg& from) {
    HashLBCommandSetGatesArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HashLBCommandSetGatesArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.HashLBCommandSetGatesArg";
  }
  protected:
  explicit HashLBCommandSetGatesArg(::google::protobuf::Arena* arena);
  HashLBCommandSetGatesArg(::google::protobuf::Arena* arena, const HashLBCommandSetGatesArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGatesFieldNumber = 1,
  };
  // repeated int64 gates = 1;
  int gates_size() const;
  private:
  int _internal_gates_size() const;

  public:
  void clear_gates() ;
  ::int64_t gates(int index) const;
  void set_gates(int index, ::int64_t value);
  void add_gates(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_gates();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_gates();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.HashLBCommandSetGatesArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> gates_;
    mutable ::google::protobuf::internal::CachedSize _gates_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class GenericDecapArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GenericDecapArg) */ {
 public:
  inline GenericDecapArg() : GenericDecapArg(nullptr) {}
  ~GenericDecapArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GenericDecapArg(::google::protobuf::internal::ConstantInitialized);

  inline GenericDecapArg(const GenericDecapArg& from)
      : GenericDecapArg(nullptr, from) {}
  GenericDecapArg(GenericDecapArg&& from) noexcept
    : GenericDecapArg() {
    *this = ::std::move(from);
  }

  inline GenericDecapArg& operator=(const GenericDecapArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenericDecapArg& operator=(GenericDecapArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenericDecapArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenericDecapArg* internal_default_instance() {
    return reinterpret_cast<const GenericDecapArg*>(
               &_GenericDecapArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(GenericDecapArg& a, GenericDecapArg& b) {
    a.Swap(&b);
  }
  inline void Swap(GenericDecapArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenericDecapArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenericDecapArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenericDecapArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenericDecapArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GenericDecapArg& from) {
    GenericDecapArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GenericDecapArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.GenericDecapArg";
  }
  protected:
  explicit GenericDecapArg(::google::protobuf::Arena* arena);
  GenericDecapArg(::google::protobuf::Arena* arena, const GenericDecapArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBytesFieldNumber = 1,
  };
  // uint64 bytes = 1;
  void clear_bytes() ;
  ::uint64_t bytes() const;
  void set_bytes(::uint64_t value);

  private:
  ::uint64_t _internal_bytes() const;
  void _internal_set_bytes(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.GenericDecapArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t bytes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class FlowGenCommandSetBurstArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.FlowGenCommandSetBurstArg) */ {
 public:
  inline FlowGenCommandSetBurstArg() : FlowGenCommandSetBurstArg(nullptr) {}
  ~FlowGenCommandSetBurstArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FlowGenCommandSetBurstArg(::google::protobuf::internal::ConstantInitialized);

  inline FlowGenCommandSetBurstArg(const FlowGenCommandSetBurstArg& from)
      : FlowGenCommandSetBurstArg(nullptr, from) {}
  FlowGenCommandSetBurstArg(FlowGenCommandSetBurstArg&& from) noexcept
    : FlowGenCommandSetBurstArg() {
    *this = ::std::move(from);
  }

  inline FlowGenCommandSetBurstArg& operator=(const FlowGenCommandSetBurstArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowGenCommandSetBurstArg& operator=(FlowGenCommandSetBurstArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowGenCommandSetBurstArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowGenCommandSetBurstArg* internal_default_instance() {
    return reinterpret_cast<const FlowGenCommandSetBurstArg*>(
               &_FlowGenCommandSetBurstArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(FlowGenCommandSetBurstArg& a, FlowGenCommandSetBurstArg& b) {
    a.Swap(&b);
  }
  inline void Swap(FlowGenCommandSetBurstArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowGenCommandSetBurstArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowGenCommandSetBurstArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FlowGenCommandSetBurstArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowGenCommandSetBurstArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FlowGenCommandSetBurstArg& from) {
    FlowGenCommandSetBurstArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FlowGenCommandSetBurstArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.FlowGenCommandSetBurstArg";
  }
  protected:
  explicit FlowGenCommandSetBurstArg(::google::protobuf::Arena* arena);
  FlowGenCommandSetBurstArg(::google::protobuf::Arena* arena, const FlowGenCommandSetBurstArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBurstFieldNumber = 1,
  };
  // uint64 burst = 1;
  void clear_burst() ;
  ::uint64_t burst() const;
  void set_burst(::uint64_t value);

  private:
  ::uint64_t _internal_burst() const;
  void _internal_set_burst(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.FlowGenCommandSetBurstArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t burst_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class FlowGenArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.FlowGenArg) */ {
 public:
  inline FlowGenArg() : FlowGenArg(nullptr) {}
  ~FlowGenArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FlowGenArg(::google::protobuf::internal::ConstantInitialized);

  inline FlowGenArg(const FlowGenArg& from)
      : FlowGenArg(nullptr, from) {}
  FlowGenArg(FlowGenArg&& from) noexcept
    : FlowGenArg() {
    *this = ::std::move(from);
  }

  inline FlowGenArg& operator=(const FlowGenArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowGenArg& operator=(FlowGenArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowGenArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowGenArg* internal_default_instance() {
    return reinterpret_cast<const FlowGenArg*>(
               &_FlowGenArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(FlowGenArg& a, FlowGenArg& b) {
    a.Swap(&b);
  }
  inline void Swap(FlowGenArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowGenArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowGenArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FlowGenArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowGenArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FlowGenArg& from) {
    FlowGenArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FlowGenArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.FlowGenArg";
  }
  protected:
  explicit FlowGenArg(::google::protobuf::Arena* arena);
  FlowGenArg(::google::protobuf::Arena* arena, const FlowGenArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTemplateFieldNumber = 1,
    kArrivalFieldNumber = 5,
    kDurationFieldNumber = 6,
    kPpsFieldNumber = 2,
    kFlowRateFieldNumber = 3,
    kFlowDurationFieldNumber = 4,
    kQuickRampupFieldNumber = 7,
    kIpSrcRangeFieldNumber = 8,
    kIpDstRangeFieldNumber = 9,
    kPortSrcRangeFieldNumber = 10,
    kPortDstRangeFieldNumber = 11,
  };
  // bytes template = 1;
  void clear_template_() ;
  const std::string& template_() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_template_(Arg_&& arg, Args_... args);
  std::string* mutable_template_();
  PROTOBUF_NODISCARD std::string* release_template_();
  void set_allocated_template_(std::string* value);

  private:
  const std::string& _internal_template_() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_template_(
      const std::string& value);
  std::string* _internal_mutable_template_();

  public:
  // string arrival = 5;
  void clear_arrival() ;
  const std::string& arrival() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_arrival(Arg_&& arg, Args_... args);
  std::string* mutable_arrival();
  PROTOBUF_NODISCARD std::string* release_arrival();
  void set_allocated_arrival(std::string* value);

  private:
  const std::string& _internal_arrival() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_arrival(
      const std::string& value);
  std::string* _internal_mutable_arrival();

  public:
  // string duration = 6;
  void clear_duration() ;
  const std::string& duration() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_duration(Arg_&& arg, Args_... args);
  std::string* mutable_duration();
  PROTOBUF_NODISCARD std::string* release_duration();
  void set_allocated_duration(std::string* value);

  private:
  const std::string& _internal_duration() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_duration(
      const std::string& value);
  std::string* _internal_mutable_duration();

  public:
  // double pps = 2;
  void clear_pps() ;
  double pps() const;
  void set_pps(double value);

  private:
  double _internal_pps() const;
  void _internal_set_pps(double value);

  public:
  // double flow_rate = 3;
  void clear_flow_rate() ;
  double flow_rate() const;
  void set_flow_rate(double value);

  private:
  double _internal_flow_rate() const;
  void _internal_set_flow_rate(double value);

  public:
  // double flow_duration = 4;
  void clear_flow_duration() ;
  double flow_duration() const;
  void set_flow_duration(double value);

  private:
  double _internal_flow_duration() const;
  void _internal_set_flow_duration(double value);

  public:
  // bool quick_rampup = 7;
  void clear_quick_rampup() ;
  bool quick_rampup() const;
  void set_quick_rampup(bool value);

  private:
  bool _internal_quick_rampup() const;
  void _internal_set_quick_rampup(bool value);

  public:
  // uint32 ip_src_range = 8;
  void clear_ip_src_range() ;
  ::uint32_t ip_src_range() const;
  void set_ip_src_range(::uint32_t value);

  private:
  ::uint32_t _internal_ip_src_range() const;
  void _internal_set_ip_src_range(::uint32_t value);

  public:
  // uint32 ip_dst_range = 9;
  void clear_ip_dst_range() ;
  ::uint32_t ip_dst_range() const;
  void set_ip_dst_range(::uint32_t value);

  private:
  ::uint32_t _internal_ip_dst_range() const;
  void _internal_set_ip_dst_range(::uint32_t value);

  public:
  // uint32 port_src_range = 10;
  void clear_port_src_range() ;
  ::uint32_t port_src_range() const;
  void set_port_src_range(::uint32_t value);

  private:
  ::uint32_t _internal_port_src_range() const;
  void _internal_set_port_src_range(::uint32_t value);

  public:
  // uint32 port_dst_range = 11;
  void clear_port_dst_range() ;
  ::uint32_t port_dst_range() const;
  void set_port_dst_range(::uint32_t value);

  private:
  ::uint32_t _internal_port_dst_range() const;
  void _internal_set_port_dst_range(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.FlowGenArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr template__;
    ::google::protobuf::internal::ArenaStringPtr arrival_;
    ::google::protobuf::internal::ArenaStringPtr duration_;
    double pps_;
    double flow_rate_;
    double flow_duration_;
    bool quick_rampup_;
    ::uint32_t ip_src_range_;
    ::uint32_t ip_dst_range_;
    ::uint32_t port_src_range_;
    ::uint32_t port_dst_range_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ExactMatchCommandSetDefaultGateArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ExactMatchCommandSetDefaultGateArg) */ {
 public:
  inline ExactMatchCommandSetDefaultGateArg() : ExactMatchCommandSetDefaultGateArg(nullptr) {}
  ~ExactMatchCommandSetDefaultGateArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExactMatchCommandSetDefaultGateArg(::google::protobuf::internal::ConstantInitialized);

  inline ExactMatchCommandSetDefaultGateArg(const ExactMatchCommandSetDefaultGateArg& from)
      : ExactMatchCommandSetDefaultGateArg(nullptr, from) {}
  ExactMatchCommandSetDefaultGateArg(ExactMatchCommandSetDefaultGateArg&& from) noexcept
    : ExactMatchCommandSetDefaultGateArg() {
    *this = ::std::move(from);
  }

  inline ExactMatchCommandSetDefaultGateArg& operator=(const ExactMatchCommandSetDefaultGateArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExactMatchCommandSetDefaultGateArg& operator=(ExactMatchCommandSetDefaultGateArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExactMatchCommandSetDefaultGateArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExactMatchCommandSetDefaultGateArg* internal_default_instance() {
    return reinterpret_cast<const ExactMatchCommandSetDefaultGateArg*>(
               &_ExactMatchCommandSetDefaultGateArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ExactMatchCommandSetDefaultGateArg& a, ExactMatchCommandSetDefaultGateArg& b) {
    a.Swap(&b);
  }
  inline void Swap(ExactMatchCommandSetDefaultGateArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExactMatchCommandSetDefaultGateArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExactMatchCommandSetDefaultGateArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExactMatchCommandSetDefaultGateArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExactMatchCommandSetDefaultGateArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExactMatchCommandSetDefaultGateArg& from) {
    ExactMatchCommandSetDefaultGateArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExactMatchCommandSetDefaultGateArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ExactMatchCommandSetDefaultGateArg";
  }
  protected:
  explicit ExactMatchCommandSetDefaultGateArg(::google::protobuf::Arena* arena);
  ExactMatchCommandSetDefaultGateArg(::google::protobuf::Arena* arena, const ExactMatchCommandSetDefaultGateArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGateFieldNumber = 1,
  };
  // uint64 gate = 1;
  void clear_gate() ;
  ::uint64_t gate() const;
  void set_gate(::uint64_t value);

  private:
  ::uint64_t _internal_gate() const;
  void _internal_set_gate(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.ExactMatchCommandSetDefaultGateArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t gate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ExactMatchCommandClearArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.ExactMatchCommandClearArg) */ {
 public:
  inline ExactMatchCommandClearArg() : ExactMatchCommandClearArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExactMatchCommandClearArg(::google::protobuf::internal::ConstantInitialized);

  inline ExactMatchCommandClearArg(const ExactMatchCommandClearArg& from)
      : ExactMatchCommandClearArg(nullptr, from) {}
  ExactMatchCommandClearArg(ExactMatchCommandClearArg&& from) noexcept
    : ExactMatchCommandClearArg() {
    *this = ::std::move(from);
  }

  inline ExactMatchCommandClearArg& operator=(const ExactMatchCommandClearArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExactMatchCommandClearArg& operator=(ExactMatchCommandClearArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExactMatchCommandClearArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExactMatchCommandClearArg* internal_default_instance() {
    return reinterpret_cast<const ExactMatchCommandClearArg*>(
               &_ExactMatchCommandClearArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ExactMatchCommandClearArg& a, ExactMatchCommandClearArg& b) {
    a.Swap(&b);
  }
  inline void Swap(ExactMatchCommandClearArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExactMatchCommandClearArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExactMatchCommandClearArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExactMatchCommandClearArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ExactMatchCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ExactMatchCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ExactMatchCommandClearArg";
  }
  protected:
  explicit ExactMatchCommandClearArg(::google::protobuf::Arena* arena);
  ExactMatchCommandClearArg(::google::protobuf::Arena* arena, const ExactMatchCommandClearArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.ExactMatchCommandClearArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class EtherEncapArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.EtherEncapArg) */ {
 public:
  inline EtherEncapArg() : EtherEncapArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EtherEncapArg(::google::protobuf::internal::ConstantInitialized);

  inline EtherEncapArg(const EtherEncapArg& from)
      : EtherEncapArg(nullptr, from) {}
  EtherEncapArg(EtherEncapArg&& from) noexcept
    : EtherEncapArg() {
    *this = ::std::move(from);
  }

  inline EtherEncapArg& operator=(const EtherEncapArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline EtherEncapArg& operator=(EtherEncapArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EtherEncapArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const EtherEncapArg* internal_default_instance() {
    return reinterpret_cast<const EtherEncapArg*>(
               &_EtherEncapArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(EtherEncapArg& a, EtherEncapArg& b) {
    a.Swap(&b);
  }
  inline void Swap(EtherEncapArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EtherEncapArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EtherEncapArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EtherEncapArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EtherEncapArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EtherEncapArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.EtherEncapArg";
  }
  protected:
  explicit EtherEncapArg(::google::protobuf::Arena* arena);
  EtherEncapArg(::google::protobuf::Arena* arena, const EtherEncapArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.EtherEncapArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class EmptyArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.EmptyArg) */ {
 public:
  inline EmptyArg() : EmptyArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmptyArg(::google::protobuf::internal::ConstantInitialized);

  inline EmptyArg(const EmptyArg& from)
      : EmptyArg(nullptr, from) {}
  EmptyArg(EmptyArg&& from) noexcept
    : EmptyArg() {
    *this = ::std::move(from);
  }

  inline EmptyArg& operator=(const EmptyArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmptyArg& operator=(EmptyArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmptyArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmptyArg* internal_default_instance() {
    return reinterpret_cast<const EmptyArg*>(
               &_EmptyArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EmptyArg& a, EmptyArg& b) {
    a.Swap(&b);
  }
  inline void Swap(EmptyArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmptyArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmptyArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmptyArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EmptyArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EmptyArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.EmptyArg";
  }
  protected:
  explicit EmptyArg(::google::protobuf::Arena* arena);
  EmptyArg(::google::protobuf::Arena* arena, const EmptyArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.EmptyArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class DumpArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.DumpArg) */ {
 public:
  inline DumpArg() : DumpArg(nullptr) {}
  ~DumpArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DumpArg(::google::protobuf::internal::ConstantInitialized);

  inline DumpArg(const DumpArg& from)
      : DumpArg(nullptr, from) {}
  DumpArg(DumpArg&& from) noexcept
    : DumpArg() {
    *this = ::std::move(from);
  }

  inline DumpArg& operator=(const DumpArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline DumpArg& operator=(DumpArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DumpArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const DumpArg* internal_default_instance() {
    return reinterpret_cast<const DumpArg*>(
               &_DumpArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(DumpArg& a, DumpArg& b) {
    a.Swap(&b);
  }
  inline void Swap(DumpArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DumpArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DumpArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DumpArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DumpArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DumpArg& from) {
    DumpArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DumpArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.DumpArg";
  }
  protected:
  explicit DumpArg(::google::protobuf::Arena* arena);
  DumpArg(::google::protobuf::Arena* arena, const DumpArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntervalFieldNumber = 1,
  };
  // double interval = 1;
  void clear_interval() ;
  double interval() const;
  void set_interval(double value);

  private:
  double _internal_interval() const;
  void _internal_set_interval(double value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.DumpArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double interval_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class DRRQuantumArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.DRRQuantumArg) */ {
 public:
  inline DRRQuantumArg() : DRRQuantumArg(nullptr) {}
  ~DRRQuantumArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRRQuantumArg(::google::protobuf::internal::ConstantInitialized);

  inline DRRQuantumArg(const DRRQuantumArg& from)
      : DRRQuantumArg(nullptr, from) {}
  DRRQuantumArg(DRRQuantumArg&& from) noexcept
    : DRRQuantumArg() {
    *this = ::std::move(from);
  }

  inline DRRQuantumArg& operator=(const DRRQuantumArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRRQuantumArg& operator=(DRRQuantumArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRRQuantumArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRRQuantumArg* internal_default_instance() {
    return reinterpret_cast<const DRRQuantumArg*>(
               &_DRRQuantumArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(DRRQuantumArg& a, DRRQuantumArg& b) {
    a.Swap(&b);
  }
  inline void Swap(DRRQuantumArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRRQuantumArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRRQuantumArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRRQuantumArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRRQuantumArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRRQuantumArg& from) {
    DRRQuantumArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRRQuantumArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.DRRQuantumArg";
  }
  protected:
  explicit DRRQuantumArg(::google::protobuf::Arena* arena);
  DRRQuantumArg(::google::protobuf::Arena* arena, const DRRQuantumArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuantumFieldNumber = 1,
  };
  // uint32 quantum = 1;
  void clear_quantum() ;
  ::uint32_t quantum() const;
  void set_quantum(::uint32_t value);

  private:
  ::uint32_t _internal_quantum() const;
  void _internal_set_quantum(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.DRRQuantumArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t quantum_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class DRRMaxFlowQueueSizeArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.DRRMaxFlowQueueSizeArg) */ {
 public:
  inline DRRMaxFlowQueueSizeArg() : DRRMaxFlowQueueSizeArg(nullptr) {}
  ~DRRMaxFlowQueueSizeArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRRMaxFlowQueueSizeArg(::google::protobuf::internal::ConstantInitialized);

  inline DRRMaxFlowQueueSizeArg(const DRRMaxFlowQueueSizeArg& from)
      : DRRMaxFlowQueueSizeArg(nullptr, from) {}
  DRRMaxFlowQueueSizeArg(DRRMaxFlowQueueSizeArg&& from) noexcept
    : DRRMaxFlowQueueSizeArg() {
    *this = ::std::move(from);
  }

  inline DRRMaxFlowQueueSizeArg& operator=(const DRRMaxFlowQueueSizeArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRRMaxFlowQueueSizeArg& operator=(DRRMaxFlowQueueSizeArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRRMaxFlowQueueSizeArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRRMaxFlowQueueSizeArg* internal_default_instance() {
    return reinterpret_cast<const DRRMaxFlowQueueSizeArg*>(
               &_DRRMaxFlowQueueSizeArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(DRRMaxFlowQueueSizeArg& a, DRRMaxFlowQueueSizeArg& b) {
    a.Swap(&b);
  }
  inline void Swap(DRRMaxFlowQueueSizeArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRRMaxFlowQueueSizeArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRRMaxFlowQueueSizeArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRRMaxFlowQueueSizeArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRRMaxFlowQueueSizeArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRRMaxFlowQueueSizeArg& from) {
    DRRMaxFlowQueueSizeArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRRMaxFlowQueueSizeArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.DRRMaxFlowQueueSizeArg";
  }
  protected:
  explicit DRRMaxFlowQueueSizeArg(::google::protobuf::Arena* arena);
  DRRMaxFlowQueueSizeArg(::google::protobuf::Arena* arena, const DRRMaxFlowQueueSizeArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaxQueueSizeFieldNumber = 1,
  };
  // uint32 max_queue_size = 1;
  void clear_max_queue_size() ;
  ::uint32_t max_queue_size() const;
  void set_max_queue_size(::uint32_t value);

  private:
  ::uint32_t _internal_max_queue_size() const;
  void _internal_set_max_queue_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.DRRMaxFlowQueueSizeArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t max_queue_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class DRRArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.DRRArg) */ {
 public:
  inline DRRArg() : DRRArg(nullptr) {}
  ~DRRArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DRRArg(::google::protobuf::internal::ConstantInitialized);

  inline DRRArg(const DRRArg& from)
      : DRRArg(nullptr, from) {}
  DRRArg(DRRArg&& from) noexcept
    : DRRArg() {
    *this = ::std::move(from);
  }

  inline DRRArg& operator=(const DRRArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline DRRArg& operator=(DRRArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DRRArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const DRRArg* internal_default_instance() {
    return reinterpret_cast<const DRRArg*>(
               &_DRRArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(DRRArg& a, DRRArg& b) {
    a.Swap(&b);
  }
  inline void Swap(DRRArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DRRArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DRRArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DRRArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DRRArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DRRArg& from) {
    DRRArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DRRArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.DRRArg";
  }
  protected:
  explicit DRRArg(::google::protobuf::Arena* arena);
  DRRArg(::google::protobuf::Arena* arena, const DRRArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuantumFieldNumber = 2,
    kNumFlowsFieldNumber = 1,
    kMaxFlowQueueSizeFieldNumber = 3,
  };
  // uint64 quantum = 2;
  void clear_quantum() ;
  ::uint64_t quantum() const;
  void set_quantum(::uint64_t value);

  private:
  ::uint64_t _internal_quantum() const;
  void _internal_set_quantum(::uint64_t value);

  public:
  // uint32 num_flows = 1;
  void clear_num_flows() ;
  ::uint32_t num_flows() const;
  void set_num_flows(::uint32_t value);

  private:
  ::uint32_t _internal_num_flows() const;
  void _internal_set_num_flows(::uint32_t value);

  public:
  // uint32 max_flow_queue_size = 3;
  void clear_max_flow_queue_size() ;
  ::uint32_t max_flow_queue_size() const;
  void set_max_flow_queue_size(::uint32_t value);

  private:
  ::uint32_t _internal_max_flow_queue_size() const;
  void _internal_set_max_flow_queue_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.DRRArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t quantum_;
    ::uint32_t num_flows_;
    ::uint32_t max_flow_queue_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class BypassArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.BypassArg) */ {
 public:
  inline BypassArg() : BypassArg(nullptr) {}
  ~BypassArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BypassArg(::google::protobuf::internal::ConstantInitialized);

  inline BypassArg(const BypassArg& from)
      : BypassArg(nullptr, from) {}
  BypassArg(BypassArg&& from) noexcept
    : BypassArg() {
    *this = ::std::move(from);
  }

  inline BypassArg& operator=(const BypassArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline BypassArg& operator=(BypassArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BypassArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const BypassArg* internal_default_instance() {
    return reinterpret_cast<const BypassArg*>(
               &_BypassArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(BypassArg& a, BypassArg& b) {
    a.Swap(&b);
  }
  inline void Swap(BypassArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BypassArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BypassArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BypassArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BypassArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BypassArg& from) {
    BypassArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BypassArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.BypassArg";
  }
  protected:
  explicit BypassArg(::google::protobuf::Arena* arena);
  BypassArg(::google::protobuf::Arena* arena, const BypassArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCyclesPerBatchFieldNumber = 1,
    kCyclesPerPacketFieldNumber = 2,
    kCyclesPerByteFieldNumber = 3,
  };
  // uint32 cycles_per_batch = 1;
  void clear_cycles_per_batch() ;
  ::uint32_t cycles_per_batch() const;
  void set_cycles_per_batch(::uint32_t value);

  private:
  ::uint32_t _internal_cycles_per_batch() const;
  void _internal_set_cycles_per_batch(::uint32_t value);

  public:
  // uint32 cycles_per_packet = 2;
  void clear_cycles_per_packet() ;
  ::uint32_t cycles_per_packet() const;
  void set_cycles_per_packet(::uint32_t value);

  private:
  ::uint32_t _internal_cycles_per_packet() const;
  void _internal_set_cycles_per_packet(::uint32_t value);

  public:
  // uint32 cycles_per_byte = 3;
  void clear_cycles_per_byte() ;
  ::uint32_t cycles_per_byte() const;
  void set_cycles_per_byte(::uint32_t value);

  private:
  ::uint32_t _internal_cycles_per_byte() const;
  void _internal_set_cycles_per_byte(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.BypassArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t cycles_per_batch_;
    ::uint32_t cycles_per_packet_;
    ::uint32_t cycles_per_byte_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class BufferArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.BufferArg) */ {
 public:
  inline BufferArg() : BufferArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BufferArg(::google::protobuf::internal::ConstantInitialized);

  inline BufferArg(const BufferArg& from)
      : BufferArg(nullptr, from) {}
  BufferArg(BufferArg&& from) noexcept
    : BufferArg() {
    *this = ::std::move(from);
  }

  inline BufferArg& operator=(const BufferArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline BufferArg& operator=(BufferArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BufferArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const BufferArg* internal_default_instance() {
    return reinterpret_cast<const BufferArg*>(
               &_BufferArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(BufferArg& a, BufferArg& b) {
    a.Swap(&b);
  }
  inline void Swap(BufferArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BufferArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BufferArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BufferArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const BufferArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const BufferArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.BufferArg";
  }
  protected:
  explicit BufferArg(::google::protobuf::Arena* arena);
  BufferArg(::google::protobuf::Arena* arena, const BufferArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.BufferArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class BPFCommandClearArg final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:bess.pb.BPFCommandClearArg) */ {
 public:
  inline BPFCommandClearArg() : BPFCommandClearArg(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BPFCommandClearArg(::google::protobuf::internal::ConstantInitialized);

  inline BPFCommandClearArg(const BPFCommandClearArg& from)
      : BPFCommandClearArg(nullptr, from) {}
  BPFCommandClearArg(BPFCommandClearArg&& from) noexcept
    : BPFCommandClearArg() {
    *this = ::std::move(from);
  }

  inline BPFCommandClearArg& operator=(const BPFCommandClearArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline BPFCommandClearArg& operator=(BPFCommandClearArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BPFCommandClearArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const BPFCommandClearArg* internal_default_instance() {
    return reinterpret_cast<const BPFCommandClearArg*>(
               &_BPFCommandClearArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BPFCommandClearArg& a, BPFCommandClearArg& b) {
    a.Swap(&b);
  }
  inline void Swap(BPFCommandClearArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BPFCommandClearArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BPFCommandClearArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BPFCommandClearArg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const BPFCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const BPFCommandClearArg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.BPFCommandClearArg";
  }
  protected:
  explicit BPFCommandClearArg(::google::protobuf::Arena* arena);
  BPFCommandClearArg(::google::protobuf::Arena* arena, const BPFCommandClearArg& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bess.pb.BPFCommandClearArg)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class BPFArg_Filter final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.BPFArg.Filter) */ {
 public:
  inline BPFArg_Filter() : BPFArg_Filter(nullptr) {}
  ~BPFArg_Filter() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BPFArg_Filter(::google::protobuf::internal::ConstantInitialized);

  inline BPFArg_Filter(const BPFArg_Filter& from)
      : BPFArg_Filter(nullptr, from) {}
  BPFArg_Filter(BPFArg_Filter&& from) noexcept
    : BPFArg_Filter() {
    *this = ::std::move(from);
  }

  inline BPFArg_Filter& operator=(const BPFArg_Filter& from) {
    CopyFrom(from);
    return *this;
  }
  inline BPFArg_Filter& operator=(BPFArg_Filter&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BPFArg_Filter& default_instance() {
    return *internal_default_instance();
  }
  static inline const BPFArg_Filter* internal_default_instance() {
    return reinterpret_cast<const BPFArg_Filter*>(
               &_BPFArg_Filter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(BPFArg_Filter& a, BPFArg_Filter& b) {
    a.Swap(&b);
  }
  inline void Swap(BPFArg_Filter* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BPFArg_Filter* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BPFArg_Filter* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BPFArg_Filter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BPFArg_Filter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BPFArg_Filter& from) {
    BPFArg_Filter::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BPFArg_Filter* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.BPFArg.Filter";
  }
  protected:
  explicit BPFArg_Filter(::google::protobuf::Arena* arena);
  BPFArg_Filter(::google::protobuf::Arena* arena, const BPFArg_Filter& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilterFieldNumber = 2,
    kPriorityFieldNumber = 1,
    kGateFieldNumber = 3,
  };
  // string filter = 2;
  void clear_filter() ;
  const std::string& filter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filter(Arg_&& arg, Args_... args);
  std::string* mutable_filter();
  PROTOBUF_NODISCARD std::string* release_filter();
  void set_allocated_filter(std::string* value);

  private:
  const std::string& _internal_filter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filter(
      const std::string& value);
  std::string* _internal_mutable_filter();

  public:
  // int64 priority = 1;
  void clear_priority() ;
  ::int64_t priority() const;
  void set_priority(::int64_t value);

  private:
  ::int64_t _internal_priority() const;
  void _internal_set_priority(::int64_t value);

  public:
  // int64 gate = 3;
  void clear_gate() ;
  ::int64_t gate() const;
  void set_gate(::int64_t value);

  private:
  ::int64_t _internal_gate() const;
  void _internal_set_gate(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.BPFArg.Filter)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      36, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr filter_;
    ::int64_t priority_;
    ::int64_t gate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ArpResponderArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ArpResponderArg) */ {
 public:
  inline ArpResponderArg() : ArpResponderArg(nullptr) {}
  ~ArpResponderArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ArpResponderArg(::google::protobuf::internal::ConstantInitialized);

  inline ArpResponderArg(const ArpResponderArg& from)
      : ArpResponderArg(nullptr, from) {}
  ArpResponderArg(ArpResponderArg&& from) noexcept
    : ArpResponderArg() {
    *this = ::std::move(from);
  }

  inline ArpResponderArg& operator=(const ArpResponderArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArpResponderArg& operator=(ArpResponderArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArpResponderArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArpResponderArg* internal_default_instance() {
    return reinterpret_cast<const ArpResponderArg*>(
               &_ArpResponderArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  friend void swap(ArpResponderArg& a, ArpResponderArg& b) {
    a.Swap(&b);
  }
  inline void Swap(ArpResponderArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArpResponderArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArpResponderArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArpResponderArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ArpResponderArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ArpResponderArg& from) {
    ArpResponderArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ArpResponderArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ArpResponderArg";
  }
  protected:
  explicit ArpResponderArg(::google::protobuf::Arena* arena);
  ArpResponderArg(::google::protobuf::Arena* arena, const ArpResponderArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIpFieldNumber = 1,
    kMacAddrFieldNumber = 2,
  };
  // string ip = 1;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // string mac_addr = 2;
  void clear_mac_addr() ;
  const std::string& mac_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mac_addr(Arg_&& arg, Args_... args);
  std::string* mutable_mac_addr();
  PROTOBUF_NODISCARD std::string* release_mac_addr();
  void set_allocated_mac_addr(std::string* value);

  private:
  const std::string& _internal_mac_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mac_addr(
      const std::string& value);
  std::string* _internal_mutable_mac_addr();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.ArpResponderArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      42, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::google::protobuf::internal::ArenaStringPtr mac_addr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ACLArg_Rule final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ACLArg.Rule) */ {
 public:
  inline ACLArg_Rule() : ACLArg_Rule(nullptr) {}
  ~ACLArg_Rule() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ACLArg_Rule(::google::protobuf::internal::ConstantInitialized);

  inline ACLArg_Rule(const ACLArg_Rule& from)
      : ACLArg_Rule(nullptr, from) {}
  ACLArg_Rule(ACLArg_Rule&& from) noexcept
    : ACLArg_Rule() {
    *this = ::std::move(from);
  }

  inline ACLArg_Rule& operator=(const ACLArg_Rule& from) {
    CopyFrom(from);
    return *this;
  }
  inline ACLArg_Rule& operator=(ACLArg_Rule&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ACLArg_Rule& default_instance() {
    return *internal_default_instance();
  }
  static inline const ACLArg_Rule* internal_default_instance() {
    return reinterpret_cast<const ACLArg_Rule*>(
               &_ACLArg_Rule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(ACLArg_Rule& a, ACLArg_Rule& b) {
    a.Swap(&b);
  }
  inline void Swap(ACLArg_Rule* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ACLArg_Rule* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ACLArg_Rule* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ACLArg_Rule>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ACLArg_Rule& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ACLArg_Rule& from) {
    ACLArg_Rule::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ACLArg_Rule* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ACLArg.Rule";
  }
  protected:
  explicit ACLArg_Rule(::google::protobuf::Arena* arena);
  ACLArg_Rule(::google::protobuf::Arena* arena, const ACLArg_Rule& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcIpFieldNumber = 1,
    kDstIpFieldNumber = 2,
    kSrcPortFieldNumber = 3,
    kDstPortFieldNumber = 4,
    kEstablishedFieldNumber = 5,
    kDropFieldNumber = 6,
  };
  // string src_ip = 1;
  void clear_src_ip() ;
  const std::string& src_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_src_ip(Arg_&& arg, Args_... args);
  std::string* mutable_src_ip();
  PROTOBUF_NODISCARD std::string* release_src_ip();
  void set_allocated_src_ip(std::string* value);

  private:
  const std::string& _internal_src_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_src_ip(
      const std::string& value);
  std::string* _internal_mutable_src_ip();

  public:
  // string dst_ip = 2;
  void clear_dst_ip() ;
  const std::string& dst_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dst_ip(Arg_&& arg, Args_... args);
  std::string* mutable_dst_ip();
  PROTOBUF_NODISCARD std::string* release_dst_ip();
  void set_allocated_dst_ip(std::string* value);

  private:
  const std::string& _internal_dst_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dst_ip(
      const std::string& value);
  std::string* _internal_mutable_dst_ip();

  public:
  // uint32 src_port = 3;
  void clear_src_port() ;
  ::uint32_t src_port() const;
  void set_src_port(::uint32_t value);

  private:
  ::uint32_t _internal_src_port() const;
  void _internal_set_src_port(::uint32_t value);

  public:
  // uint32 dst_port = 4;
  void clear_dst_port() ;
  ::uint32_t dst_port() const;
  void set_dst_port(::uint32_t value);

  private:
  ::uint32_t _internal_dst_port() const;
  void _internal_set_dst_port(::uint32_t value);

  public:
  // bool established = 5;
  void clear_established() ;
  bool established() const;
  void set_established(bool value);

  private:
  bool _internal_established() const;
  void _internal_set_established(bool value);

  public:
  // bool drop = 6;
  void clear_drop() ;
  bool drop() const;
  void set_drop(bool value);

  private:
  bool _internal_drop() const;
  void _internal_set_drop(bool value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.ACLArg.Rule)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      40, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr src_ip_;
    ::google::protobuf::internal::ArenaStringPtr dst_ip_;
    ::uint32_t src_port_;
    ::uint32_t dst_port_;
    bool established_;
    bool drop_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class WorkerSplitArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.WorkerSplitArg) */ {
 public:
  inline WorkerSplitArg() : WorkerSplitArg(nullptr) {}
  ~WorkerSplitArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WorkerSplitArg(::google::protobuf::internal::ConstantInitialized);

  inline WorkerSplitArg(const WorkerSplitArg& from)
      : WorkerSplitArg(nullptr, from) {}
  WorkerSplitArg(WorkerSplitArg&& from) noexcept
    : WorkerSplitArg() {
    *this = ::std::move(from);
  }

  inline WorkerSplitArg& operator=(const WorkerSplitArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkerSplitArg& operator=(WorkerSplitArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WorkerSplitArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const WorkerSplitArg* internal_default_instance() {
    return reinterpret_cast<const WorkerSplitArg*>(
               &_WorkerSplitArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  friend void swap(WorkerSplitArg& a, WorkerSplitArg& b) {
    a.Swap(&b);
  }
  inline void Swap(WorkerSplitArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WorkerSplitArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WorkerSplitArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WorkerSplitArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WorkerSplitArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WorkerSplitArg& from) {
    WorkerSplitArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WorkerSplitArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.WorkerSplitArg";
  }
  protected:
  explicit WorkerSplitArg(::google::protobuf::Arena* arena);
  WorkerSplitArg(::google::protobuf::Arena* arena, const WorkerSplitArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kWorkerGatesFieldNumber = 1,
  };
  // map<uint32, uint32> worker_gates = 1;
  int worker_gates_size() const;
  private:
  int _internal_worker_gates_size() const;

  public:
  void clear_worker_gates() ;
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& worker_gates() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* mutable_worker_gates();

  private:
  const ::google::protobuf::Map<::uint32_t, ::uint32_t>& _internal_worker_gates() const;
  ::google::protobuf::Map<::uint32_t, ::uint32_t>* _internal_mutable_worker_gates();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.WorkerSplitArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<WorkerSplitArg_WorkerGatesEntry_DoNotUse, ::uint32_t, ::uint32_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>
        worker_gates_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class WildcardMatchCommandDeleteArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.WildcardMatchCommandDeleteArg) */ {
 public:
  inline WildcardMatchCommandDeleteArg() : WildcardMatchCommandDeleteArg(nullptr) {}
  ~WildcardMatchCommandDeleteArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WildcardMatchCommandDeleteArg(::google::protobuf::internal::ConstantInitialized);

  inline WildcardMatchCommandDeleteArg(const WildcardMatchCommandDeleteArg& from)
      : WildcardMatchCommandDeleteArg(nullptr, from) {}
  WildcardMatchCommandDeleteArg(WildcardMatchCommandDeleteArg&& from) noexcept
    : WildcardMatchCommandDeleteArg() {
    *this = ::std::move(from);
  }

  inline WildcardMatchCommandDeleteArg& operator=(const WildcardMatchCommandDeleteArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline WildcardMatchCommandDeleteArg& operator=(WildcardMatchCommandDeleteArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WildcardMatchCommandDeleteArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const WildcardMatchCommandDeleteArg* internal_default_instance() {
    return reinterpret_cast<const WildcardMatchCommandDeleteArg*>(
               &_WildcardMatchCommandDeleteArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(WildcardMatchCommandDeleteArg& a, WildcardMatchCommandDeleteArg& b) {
    a.Swap(&b);
  }
  inline void Swap(WildcardMatchCommandDeleteArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WildcardMatchCommandDeleteArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WildcardMatchCommandDeleteArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WildcardMatchCommandDeleteArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WildcardMatchCommandDeleteArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WildcardMatchCommandDeleteArg& from) {
    WildcardMatchCommandDeleteArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WildcardMatchCommandDeleteArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.WildcardMatchCommandDeleteArg";
  }
  protected:
  explicit WildcardMatchCommandDeleteArg(::google::protobuf::Arena* arena);
  WildcardMatchCommandDeleteArg(::google::protobuf::Arena* arena, const WildcardMatchCommandDeleteArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 1,
    kMasksFieldNumber = 2,
  };
  // repeated .bess.pb.FieldData values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  ::bess::pb::FieldData* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >*
      mutable_values();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& _internal_values() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* _internal_mutable_values();
  public:
  const ::bess::pb::FieldData& values(int index) const;
  ::bess::pb::FieldData* add_values();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >&
      values() const;
  // repeated .bess.pb.FieldData masks = 2;
  int masks_size() const;
  private:
  int _internal_masks_size() const;

  public:
  void clear_masks() ;
  ::bess::pb::FieldData* mutable_masks(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >*
      mutable_masks();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& _internal_masks() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* _internal_mutable_masks();
  public:
  const ::bess::pb::FieldData& masks(int index) const;
  ::bess::pb::FieldData* add_masks();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >&
      masks() const;
  // @@protoc_insertion_point(class_scope:bess.pb.WildcardMatchCommandDeleteArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData > values_;
    ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData > masks_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class WildcardMatchCommandAddArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.WildcardMatchCommandAddArg) */ {
 public:
  inline WildcardMatchCommandAddArg() : WildcardMatchCommandAddArg(nullptr) {}
  ~WildcardMatchCommandAddArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WildcardMatchCommandAddArg(::google::protobuf::internal::ConstantInitialized);

  inline WildcardMatchCommandAddArg(const WildcardMatchCommandAddArg& from)
      : WildcardMatchCommandAddArg(nullptr, from) {}
  WildcardMatchCommandAddArg(WildcardMatchCommandAddArg&& from) noexcept
    : WildcardMatchCommandAddArg() {
    *this = ::std::move(from);
  }

  inline WildcardMatchCommandAddArg& operator=(const WildcardMatchCommandAddArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline WildcardMatchCommandAddArg& operator=(WildcardMatchCommandAddArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WildcardMatchCommandAddArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const WildcardMatchCommandAddArg* internal_default_instance() {
    return reinterpret_cast<const WildcardMatchCommandAddArg*>(
               &_WildcardMatchCommandAddArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(WildcardMatchCommandAddArg& a, WildcardMatchCommandAddArg& b) {
    a.Swap(&b);
  }
  inline void Swap(WildcardMatchCommandAddArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WildcardMatchCommandAddArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WildcardMatchCommandAddArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WildcardMatchCommandAddArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WildcardMatchCommandAddArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WildcardMatchCommandAddArg& from) {
    WildcardMatchCommandAddArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WildcardMatchCommandAddArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.WildcardMatchCommandAddArg";
  }
  protected:
  explicit WildcardMatchCommandAddArg(::google::protobuf::Arena* arena);
  WildcardMatchCommandAddArg(::google::protobuf::Arena* arena, const WildcardMatchCommandAddArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 3,
    kMasksFieldNumber = 4,
    kGateFieldNumber = 1,
    kPriorityFieldNumber = 2,
  };
  // repeated .bess.pb.FieldData values = 3;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  ::bess::pb::FieldData* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >*
      mutable_values();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& _internal_values() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* _internal_mutable_values();
  public:
  const ::bess::pb::FieldData& values(int index) const;
  ::bess::pb::FieldData* add_values();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >&
      values() const;
  // repeated .bess.pb.FieldData masks = 4;
  int masks_size() const;
  private:
  int _internal_masks_size() const;

  public:
  void clear_masks() ;
  ::bess::pb::FieldData* mutable_masks(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >*
      mutable_masks();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& _internal_masks() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* _internal_mutable_masks();
  public:
  const ::bess::pb::FieldData& masks(int index) const;
  ::bess::pb::FieldData* add_masks();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >&
      masks() const;
  // uint64 gate = 1;
  void clear_gate() ;
  ::uint64_t gate() const;
  void set_gate(::uint64_t value);

  private:
  ::uint64_t _internal_gate() const;
  void _internal_set_gate(::uint64_t value);

  public:
  // int64 priority = 2;
  void clear_priority() ;
  ::int64_t priority() const;
  void set_priority(::int64_t value);

  private:
  ::int64_t _internal_priority() const;
  void _internal_set_priority(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.WildcardMatchCommandAddArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData > values_;
    ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData > masks_;
    ::uint64_t gate_;
    ::int64_t priority_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class WildcardMatchArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.WildcardMatchArg) */ {
 public:
  inline WildcardMatchArg() : WildcardMatchArg(nullptr) {}
  ~WildcardMatchArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WildcardMatchArg(::google::protobuf::internal::ConstantInitialized);

  inline WildcardMatchArg(const WildcardMatchArg& from)
      : WildcardMatchArg(nullptr, from) {}
  WildcardMatchArg(WildcardMatchArg&& from) noexcept
    : WildcardMatchArg() {
    *this = ::std::move(from);
  }

  inline WildcardMatchArg& operator=(const WildcardMatchArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline WildcardMatchArg& operator=(WildcardMatchArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WildcardMatchArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const WildcardMatchArg* internal_default_instance() {
    return reinterpret_cast<const WildcardMatchArg*>(
               &_WildcardMatchArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  friend void swap(WildcardMatchArg& a, WildcardMatchArg& b) {
    a.Swap(&b);
  }
  inline void Swap(WildcardMatchArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WildcardMatchArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WildcardMatchArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WildcardMatchArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WildcardMatchArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WildcardMatchArg& from) {
    WildcardMatchArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WildcardMatchArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.WildcardMatchArg";
  }
  protected:
  explicit WildcardMatchArg(::google::protobuf::Arena* arena);
  WildcardMatchArg(::google::protobuf::Arena* arena, const WildcardMatchArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldsFieldNumber = 1,
  };
  // repeated .bess.pb.Field fields = 1;
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::bess::pb::Field* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::Field >*
      mutable_fields();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::Field>* _internal_mutable_fields();
  public:
  const ::bess::pb::Field& fields(int index) const;
  ::bess::pb::Field* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::Field >&
      fields() const;
  // @@protoc_insertion_point(class_scope:bess.pb.WildcardMatchArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::Field > fields_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class UrlFilterConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.UrlFilterConfig) */ {
 public:
  inline UrlFilterConfig() : UrlFilterConfig(nullptr) {}
  ~UrlFilterConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UrlFilterConfig(::google::protobuf::internal::ConstantInitialized);

  inline UrlFilterConfig(const UrlFilterConfig& from)
      : UrlFilterConfig(nullptr, from) {}
  UrlFilterConfig(UrlFilterConfig&& from) noexcept
    : UrlFilterConfig() {
    *this = ::std::move(from);
  }

  inline UrlFilterConfig& operator=(const UrlFilterConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline UrlFilterConfig& operator=(UrlFilterConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UrlFilterConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const UrlFilterConfig* internal_default_instance() {
    return reinterpret_cast<const UrlFilterConfig*>(
               &_UrlFilterConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(UrlFilterConfig& a, UrlFilterConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(UrlFilterConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UrlFilterConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UrlFilterConfig* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UrlFilterConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UrlFilterConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UrlFilterConfig& from) {
    UrlFilterConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UrlFilterConfig* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.UrlFilterConfig";
  }
  protected:
  explicit UrlFilterConfig(::google::protobuf::Arena* arena);
  UrlFilterConfig(::google::protobuf::Arena* arena, const UrlFilterConfig& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlacklistFieldNumber = 1,
  };
  // repeated .bess.pb.UrlFilterArg.Url blacklist = 1;
  int blacklist_size() const;
  private:
  int _internal_blacklist_size() const;

  public:
  void clear_blacklist() ;
  ::bess::pb::UrlFilterArg_Url* mutable_blacklist(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::UrlFilterArg_Url >*
      mutable_blacklist();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>& _internal_blacklist() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>* _internal_mutable_blacklist();
  public:
  const ::bess::pb::UrlFilterArg_Url& blacklist(int index) const;
  ::bess::pb::UrlFilterArg_Url* add_blacklist();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::UrlFilterArg_Url >&
      blacklist() const;
  // @@protoc_insertion_point(class_scope:bess.pb.UrlFilterConfig)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::UrlFilterArg_Url > blacklist_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class UrlFilterArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.UrlFilterArg) */ {
 public:
  inline UrlFilterArg() : UrlFilterArg(nullptr) {}
  ~UrlFilterArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UrlFilterArg(::google::protobuf::internal::ConstantInitialized);

  inline UrlFilterArg(const UrlFilterArg& from)
      : UrlFilterArg(nullptr, from) {}
  UrlFilterArg(UrlFilterArg&& from) noexcept
    : UrlFilterArg() {
    *this = ::std::move(from);
  }

  inline UrlFilterArg& operator=(const UrlFilterArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline UrlFilterArg& operator=(UrlFilterArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UrlFilterArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const UrlFilterArg* internal_default_instance() {
    return reinterpret_cast<const UrlFilterArg*>(
               &_UrlFilterArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(UrlFilterArg& a, UrlFilterArg& b) {
    a.Swap(&b);
  }
  inline void Swap(UrlFilterArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UrlFilterArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UrlFilterArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UrlFilterArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UrlFilterArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UrlFilterArg& from) {
    UrlFilterArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UrlFilterArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.UrlFilterArg";
  }
  protected:
  explicit UrlFilterArg(::google::protobuf::Arena* arena);
  UrlFilterArg(::google::protobuf::Arena* arena, const UrlFilterArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Url = UrlFilterArg_Url;

  // accessors -------------------------------------------------------

  enum : int {
    kBlacklistFieldNumber = 1,
  };
  // repeated .bess.pb.UrlFilterArg.Url blacklist = 1;
  int blacklist_size() const;
  private:
  int _internal_blacklist_size() const;

  public:
  void clear_blacklist() ;
  ::bess::pb::UrlFilterArg_Url* mutable_blacklist(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::UrlFilterArg_Url >*
      mutable_blacklist();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>& _internal_blacklist() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>* _internal_mutable_blacklist();
  public:
  const ::bess::pb::UrlFilterArg_Url& blacklist(int index) const;
  ::bess::pb::UrlFilterArg_Url* add_blacklist();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::UrlFilterArg_Url >&
      blacklist() const;
  // @@protoc_insertion_point(class_scope:bess.pb.UrlFilterArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::UrlFilterArg_Url > blacklist_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class UpdateArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.UpdateArg) */ {
 public:
  inline UpdateArg() : UpdateArg(nullptr) {}
  ~UpdateArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateArg(::google::protobuf::internal::ConstantInitialized);

  inline UpdateArg(const UpdateArg& from)
      : UpdateArg(nullptr, from) {}
  UpdateArg(UpdateArg&& from) noexcept
    : UpdateArg() {
    *this = ::std::move(from);
  }

  inline UpdateArg& operator=(const UpdateArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateArg& operator=(UpdateArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateArg* internal_default_instance() {
    return reinterpret_cast<const UpdateArg*>(
               &_UpdateArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(UpdateArg& a, UpdateArg& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpdateArg& from) {
    UpdateArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.UpdateArg";
  }
  protected:
  explicit UpdateArg(::google::protobuf::Arena* arena);
  UpdateArg(::google::protobuf::Arena* arena, const UpdateArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Field = UpdateArg_Field;

  // accessors -------------------------------------------------------

  enum : int {
    kFieldsFieldNumber = 1,
  };
  // repeated .bess.pb.UpdateArg.Field fields = 1;
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::bess::pb::UpdateArg_Field* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::UpdateArg_Field >*
      mutable_fields();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::UpdateArg_Field>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::UpdateArg_Field>* _internal_mutable_fields();
  public:
  const ::bess::pb::UpdateArg_Field& fields(int index) const;
  ::bess::pb::UpdateArg_Field* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::UpdateArg_Field >&
      fields() const;
  // @@protoc_insertion_point(class_scope:bess.pb.UpdateArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::UpdateArg_Field > fields_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class StaticNATArg_AddressRangePair final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.StaticNATArg.AddressRangePair) */ {
 public:
  inline StaticNATArg_AddressRangePair() : StaticNATArg_AddressRangePair(nullptr) {}
  ~StaticNATArg_AddressRangePair() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StaticNATArg_AddressRangePair(::google::protobuf::internal::ConstantInitialized);

  inline StaticNATArg_AddressRangePair(const StaticNATArg_AddressRangePair& from)
      : StaticNATArg_AddressRangePair(nullptr, from) {}
  StaticNATArg_AddressRangePair(StaticNATArg_AddressRangePair&& from) noexcept
    : StaticNATArg_AddressRangePair() {
    *this = ::std::move(from);
  }

  inline StaticNATArg_AddressRangePair& operator=(const StaticNATArg_AddressRangePair& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticNATArg_AddressRangePair& operator=(StaticNATArg_AddressRangePair&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticNATArg_AddressRangePair& default_instance() {
    return *internal_default_instance();
  }
  static inline const StaticNATArg_AddressRangePair* internal_default_instance() {
    return reinterpret_cast<const StaticNATArg_AddressRangePair*>(
               &_StaticNATArg_AddressRangePair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(StaticNATArg_AddressRangePair& a, StaticNATArg_AddressRangePair& b) {
    a.Swap(&b);
  }
  inline void Swap(StaticNATArg_AddressRangePair* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticNATArg_AddressRangePair* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticNATArg_AddressRangePair* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StaticNATArg_AddressRangePair>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticNATArg_AddressRangePair& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StaticNATArg_AddressRangePair& from) {
    StaticNATArg_AddressRangePair::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StaticNATArg_AddressRangePair* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.StaticNATArg.AddressRangePair";
  }
  protected:
  explicit StaticNATArg_AddressRangePair(::google::protobuf::Arena* arena);
  StaticNATArg_AddressRangePair(::google::protobuf::Arena* arena, const StaticNATArg_AddressRangePair& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntRangeFieldNumber = 1,
    kExtRangeFieldNumber = 2,
  };
  // .bess.pb.StaticNATArg.AddressRange int_range = 1;
  bool has_int_range() const;
  void clear_int_range() ;
  const ::bess::pb::StaticNATArg_AddressRange& int_range() const;
  PROTOBUF_NODISCARD ::bess::pb::StaticNATArg_AddressRange* release_int_range();
  ::bess::pb::StaticNATArg_AddressRange* mutable_int_range();
  void set_allocated_int_range(::bess::pb::StaticNATArg_AddressRange* value);
  void unsafe_arena_set_allocated_int_range(::bess::pb::StaticNATArg_AddressRange* value);
  ::bess::pb::StaticNATArg_AddressRange* unsafe_arena_release_int_range();

  private:
  const ::bess::pb::StaticNATArg_AddressRange& _internal_int_range() const;
  ::bess::pb::StaticNATArg_AddressRange* _internal_mutable_int_range();

  public:
  // .bess.pb.StaticNATArg.AddressRange ext_range = 2;
  bool has_ext_range() const;
  void clear_ext_range() ;
  const ::bess::pb::StaticNATArg_AddressRange& ext_range() const;
  PROTOBUF_NODISCARD ::bess::pb::StaticNATArg_AddressRange* release_ext_range();
  ::bess::pb::StaticNATArg_AddressRange* mutable_ext_range();
  void set_allocated_ext_range(::bess::pb::StaticNATArg_AddressRange* value);
  void unsafe_arena_set_allocated_ext_range(::bess::pb::StaticNATArg_AddressRange* value);
  ::bess::pb::StaticNATArg_AddressRange* unsafe_arena_release_ext_range();

  private:
  const ::bess::pb::StaticNATArg_AddressRange& _internal_ext_range() const;
  ::bess::pb::StaticNATArg_AddressRange* _internal_mutable_ext_range();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.StaticNATArg.AddressRangePair)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::bess::pb::StaticNATArg_AddressRange* int_range_;
    ::bess::pb::StaticNATArg_AddressRange* ext_range_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class SetMetadataArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.SetMetadataArg) */ {
 public:
  inline SetMetadataArg() : SetMetadataArg(nullptr) {}
  ~SetMetadataArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetMetadataArg(::google::protobuf::internal::ConstantInitialized);

  inline SetMetadataArg(const SetMetadataArg& from)
      : SetMetadataArg(nullptr, from) {}
  SetMetadataArg(SetMetadataArg&& from) noexcept
    : SetMetadataArg() {
    *this = ::std::move(from);
  }

  inline SetMetadataArg& operator=(const SetMetadataArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMetadataArg& operator=(SetMetadataArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMetadataArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMetadataArg* internal_default_instance() {
    return reinterpret_cast<const SetMetadataArg*>(
               &_SetMetadataArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(SetMetadataArg& a, SetMetadataArg& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMetadataArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMetadataArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMetadataArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMetadataArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetMetadataArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetMetadataArg& from) {
    SetMetadataArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetMetadataArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.SetMetadataArg";
  }
  protected:
  explicit SetMetadataArg(::google::protobuf::Arena* arena);
  SetMetadataArg(::google::protobuf::Arena* arena, const SetMetadataArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Attribute = SetMetadataArg_Attribute;

  // accessors -------------------------------------------------------

  enum : int {
    kAttrsFieldNumber = 1,
  };
  // repeated .bess.pb.SetMetadataArg.Attribute attrs = 1;
  int attrs_size() const;
  private:
  int _internal_attrs_size() const;

  public:
  void clear_attrs() ;
  ::bess::pb::SetMetadataArg_Attribute* mutable_attrs(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::SetMetadataArg_Attribute >*
      mutable_attrs();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::SetMetadataArg_Attribute>& _internal_attrs() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::SetMetadataArg_Attribute>* _internal_mutable_attrs();
  public:
  const ::bess::pb::SetMetadataArg_Attribute& attrs(int index) const;
  ::bess::pb::SetMetadataArg_Attribute* add_attrs();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::SetMetadataArg_Attribute >&
      attrs() const;
  // @@protoc_insertion_point(class_scope:bess.pb.SetMetadataArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::SetMetadataArg_Attribute > attrs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class RandomUpdateArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.RandomUpdateArg) */ {
 public:
  inline RandomUpdateArg() : RandomUpdateArg(nullptr) {}
  ~RandomUpdateArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RandomUpdateArg(::google::protobuf::internal::ConstantInitialized);

  inline RandomUpdateArg(const RandomUpdateArg& from)
      : RandomUpdateArg(nullptr, from) {}
  RandomUpdateArg(RandomUpdateArg&& from) noexcept
    : RandomUpdateArg() {
    *this = ::std::move(from);
  }

  inline RandomUpdateArg& operator=(const RandomUpdateArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline RandomUpdateArg& operator=(RandomUpdateArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RandomUpdateArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const RandomUpdateArg* internal_default_instance() {
    return reinterpret_cast<const RandomUpdateArg*>(
               &_RandomUpdateArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(RandomUpdateArg& a, RandomUpdateArg& b) {
    a.Swap(&b);
  }
  inline void Swap(RandomUpdateArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RandomUpdateArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RandomUpdateArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RandomUpdateArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RandomUpdateArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RandomUpdateArg& from) {
    RandomUpdateArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RandomUpdateArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.RandomUpdateArg";
  }
  protected:
  explicit RandomUpdateArg(::google::protobuf::Arena* arena);
  RandomUpdateArg(::google::protobuf::Arena* arena, const RandomUpdateArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Field = RandomUpdateArg_Field;

  // accessors -------------------------------------------------------

  enum : int {
    kFieldsFieldNumber = 1,
  };
  // repeated .bess.pb.RandomUpdateArg.Field fields = 1;
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::bess::pb::RandomUpdateArg_Field* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::RandomUpdateArg_Field >*
      mutable_fields();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::RandomUpdateArg_Field>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::RandomUpdateArg_Field>* _internal_mutable_fields();
  public:
  const ::bess::pb::RandomUpdateArg_Field& fields(int index) const;
  ::bess::pb::RandomUpdateArg_Field* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::RandomUpdateArg_Field >&
      fields() const;
  // @@protoc_insertion_point(class_scope:bess.pb.RandomUpdateArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::RandomUpdateArg_Field > fields_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class NATArg_ExternalAddress final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.NATArg.ExternalAddress) */ {
 public:
  inline NATArg_ExternalAddress() : NATArg_ExternalAddress(nullptr) {}
  ~NATArg_ExternalAddress() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NATArg_ExternalAddress(::google::protobuf::internal::ConstantInitialized);

  inline NATArg_ExternalAddress(const NATArg_ExternalAddress& from)
      : NATArg_ExternalAddress(nullptr, from) {}
  NATArg_ExternalAddress(NATArg_ExternalAddress&& from) noexcept
    : NATArg_ExternalAddress() {
    *this = ::std::move(from);
  }

  inline NATArg_ExternalAddress& operator=(const NATArg_ExternalAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline NATArg_ExternalAddress& operator=(NATArg_ExternalAddress&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NATArg_ExternalAddress& default_instance() {
    return *internal_default_instance();
  }
  static inline const NATArg_ExternalAddress* internal_default_instance() {
    return reinterpret_cast<const NATArg_ExternalAddress*>(
               &_NATArg_ExternalAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(NATArg_ExternalAddress& a, NATArg_ExternalAddress& b) {
    a.Swap(&b);
  }
  inline void Swap(NATArg_ExternalAddress* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NATArg_ExternalAddress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NATArg_ExternalAddress* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NATArg_ExternalAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NATArg_ExternalAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NATArg_ExternalAddress& from) {
    NATArg_ExternalAddress::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NATArg_ExternalAddress* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.NATArg.ExternalAddress";
  }
  protected:
  explicit NATArg_ExternalAddress(::google::protobuf::Arena* arena);
  NATArg_ExternalAddress(::google::protobuf::Arena* arena, const NATArg_ExternalAddress& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPortRangesFieldNumber = 2,
    kExtAddrFieldNumber = 1,
  };
  // repeated .bess.pb.NATArg.PortRange port_ranges = 2;
  int port_ranges_size() const;
  private:
  int _internal_port_ranges_size() const;

  public:
  void clear_port_ranges() ;
  ::bess::pb::NATArg_PortRange* mutable_port_ranges(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::NATArg_PortRange >*
      mutable_port_ranges();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_PortRange>& _internal_port_ranges() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_PortRange>* _internal_mutable_port_ranges();
  public:
  const ::bess::pb::NATArg_PortRange& port_ranges(int index) const;
  ::bess::pb::NATArg_PortRange* add_port_ranges();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::NATArg_PortRange >&
      port_ranges() const;
  // string ext_addr = 1;
  void clear_ext_addr() ;
  const std::string& ext_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ext_addr(Arg_&& arg, Args_... args);
  std::string* mutable_ext_addr();
  PROTOBUF_NODISCARD std::string* release_ext_addr();
  void set_allocated_ext_addr(std::string* value);

  private:
  const std::string& _internal_ext_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ext_addr(
      const std::string& value);
  std::string* _internal_mutable_ext_addr();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.NATArg.ExternalAddress)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::NATArg_PortRange > port_ranges_;
    ::google::protobuf::internal::ArenaStringPtr ext_addr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class MetadataTestArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.MetadataTestArg) */ {
 public:
  inline MetadataTestArg() : MetadataTestArg(nullptr) {}
  ~MetadataTestArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MetadataTestArg(::google::protobuf::internal::ConstantInitialized);

  inline MetadataTestArg(const MetadataTestArg& from)
      : MetadataTestArg(nullptr, from) {}
  MetadataTestArg(MetadataTestArg&& from) noexcept
    : MetadataTestArg() {
    *this = ::std::move(from);
  }

  inline MetadataTestArg& operator=(const MetadataTestArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetadataTestArg& operator=(MetadataTestArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetadataTestArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetadataTestArg* internal_default_instance() {
    return reinterpret_cast<const MetadataTestArg*>(
               &_MetadataTestArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(MetadataTestArg& a, MetadataTestArg& b) {
    a.Swap(&b);
  }
  inline void Swap(MetadataTestArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetadataTestArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetadataTestArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MetadataTestArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MetadataTestArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MetadataTestArg& from) {
    MetadataTestArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MetadataTestArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.MetadataTestArg";
  }
  protected:
  explicit MetadataTestArg(::google::protobuf::Arena* arena);
  MetadataTestArg(::google::protobuf::Arena* arena, const MetadataTestArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kReadFieldNumber = 1,
    kWriteFieldNumber = 2,
    kUpdateFieldNumber = 3,
  };
  // map<string, int64> read = 1;
  int read_size() const;
  private:
  int _internal_read_size() const;

  public:
  void clear_read() ;
  const ::google::protobuf::Map<std::string, ::int64_t>& read() const;
  ::google::protobuf::Map<std::string, ::int64_t>* mutable_read();

  private:
  const ::google::protobuf::Map<std::string, ::int64_t>& _internal_read() const;
  ::google::protobuf::Map<std::string, ::int64_t>* _internal_mutable_read();

  public:
  // map<string, int64> write = 2;
  int write_size() const;
  private:
  int _internal_write_size() const;

  public:
  void clear_write() ;
  const ::google::protobuf::Map<std::string, ::int64_t>& write() const;
  ::google::protobuf::Map<std::string, ::int64_t>* mutable_write();

  private:
  const ::google::protobuf::Map<std::string, ::int64_t>& _internal_write() const;
  ::google::protobuf::Map<std::string, ::int64_t>* _internal_mutable_write();

  public:
  // map<string, int64> update = 3;
  int update_size() const;
  private:
  int _internal_update_size() const;

  public:
  void clear_update() ;
  const ::google::protobuf::Map<std::string, ::int64_t>& update() const;
  ::google::protobuf::Map<std::string, ::int64_t>* mutable_update();

  private:
  const ::google::protobuf::Map<std::string, ::int64_t>& _internal_update() const;
  ::google::protobuf::Map<std::string, ::int64_t>* _internal_mutable_update();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.MetadataTestArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<MetadataTestArg_ReadEntry_DoNotUse, std::string, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>
        read_;
    ::google::protobuf::internal::MapField<MetadataTestArg_WriteEntry_DoNotUse, std::string, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>
        write_;
    ::google::protobuf::internal::MapField<MetadataTestArg_UpdateEntry_DoNotUse, std::string, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>
        update_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class MeasureCommandGetSummaryResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.MeasureCommandGetSummaryResponse) */ {
 public:
  inline MeasureCommandGetSummaryResponse() : MeasureCommandGetSummaryResponse(nullptr) {}
  ~MeasureCommandGetSummaryResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MeasureCommandGetSummaryResponse(::google::protobuf::internal::ConstantInitialized);

  inline MeasureCommandGetSummaryResponse(const MeasureCommandGetSummaryResponse& from)
      : MeasureCommandGetSummaryResponse(nullptr, from) {}
  MeasureCommandGetSummaryResponse(MeasureCommandGetSummaryResponse&& from) noexcept
    : MeasureCommandGetSummaryResponse() {
    *this = ::std::move(from);
  }

  inline MeasureCommandGetSummaryResponse& operator=(const MeasureCommandGetSummaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeasureCommandGetSummaryResponse& operator=(MeasureCommandGetSummaryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeasureCommandGetSummaryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MeasureCommandGetSummaryResponse* internal_default_instance() {
    return reinterpret_cast<const MeasureCommandGetSummaryResponse*>(
               &_MeasureCommandGetSummaryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MeasureCommandGetSummaryResponse& a, MeasureCommandGetSummaryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MeasureCommandGetSummaryResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeasureCommandGetSummaryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeasureCommandGetSummaryResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MeasureCommandGetSummaryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MeasureCommandGetSummaryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MeasureCommandGetSummaryResponse& from) {
    MeasureCommandGetSummaryResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MeasureCommandGetSummaryResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.MeasureCommandGetSummaryResponse";
  }
  protected:
  explicit MeasureCommandGetSummaryResponse(::google::protobuf::Arena* arena);
  MeasureCommandGetSummaryResponse(::google::protobuf::Arena* arena, const MeasureCommandGetSummaryResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Histogram = MeasureCommandGetSummaryResponse_Histogram;

  // accessors -------------------------------------------------------

  enum : int {
    kLatencyFieldNumber = 4,
    kJitterFieldNumber = 5,
    kTimestampFieldNumber = 1,
    kPacketsFieldNumber = 2,
    kBitsFieldNumber = 3,
  };
  // .bess.pb.MeasureCommandGetSummaryResponse.Histogram latency = 4;
  bool has_latency() const;
  void clear_latency() ;
  const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram& latency() const;
  PROTOBUF_NODISCARD ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* release_latency();
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* mutable_latency();
  void set_allocated_latency(::bess::pb::MeasureCommandGetSummaryResponse_Histogram* value);
  void unsafe_arena_set_allocated_latency(::bess::pb::MeasureCommandGetSummaryResponse_Histogram* value);
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* unsafe_arena_release_latency();

  private:
  const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram& _internal_latency() const;
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* _internal_mutable_latency();

  public:
  // .bess.pb.MeasureCommandGetSummaryResponse.Histogram jitter = 5;
  bool has_jitter() const;
  void clear_jitter() ;
  const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram& jitter() const;
  PROTOBUF_NODISCARD ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* release_jitter();
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* mutable_jitter();
  void set_allocated_jitter(::bess::pb::MeasureCommandGetSummaryResponse_Histogram* value);
  void unsafe_arena_set_allocated_jitter(::bess::pb::MeasureCommandGetSummaryResponse_Histogram* value);
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* unsafe_arena_release_jitter();

  private:
  const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram& _internal_jitter() const;
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* _internal_mutable_jitter();

  public:
  // double timestamp = 1;
  void clear_timestamp() ;
  double timestamp() const;
  void set_timestamp(double value);

  private:
  double _internal_timestamp() const;
  void _internal_set_timestamp(double value);

  public:
  // uint64 packets = 2;
  void clear_packets() ;
  ::uint64_t packets() const;
  void set_packets(::uint64_t value);

  private:
  ::uint64_t _internal_packets() const;
  void _internal_set_packets(::uint64_t value);

  public:
  // uint64 bits = 3;
  void clear_bits() ;
  ::uint64_t bits() const;
  void set_bits(::uint64_t value);

  private:
  ::uint64_t _internal_bits() const;
  void _internal_set_bits(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.MeasureCommandGetSummaryResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* latency_;
    ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* jitter_;
    double timestamp_;
    ::uint64_t packets_;
    ::uint64_t bits_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class L2ForwardCommandAddArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.L2ForwardCommandAddArg) */ {
 public:
  inline L2ForwardCommandAddArg() : L2ForwardCommandAddArg(nullptr) {}
  ~L2ForwardCommandAddArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR L2ForwardCommandAddArg(::google::protobuf::internal::ConstantInitialized);

  inline L2ForwardCommandAddArg(const L2ForwardCommandAddArg& from)
      : L2ForwardCommandAddArg(nullptr, from) {}
  L2ForwardCommandAddArg(L2ForwardCommandAddArg&& from) noexcept
    : L2ForwardCommandAddArg() {
    *this = ::std::move(from);
  }

  inline L2ForwardCommandAddArg& operator=(const L2ForwardCommandAddArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline L2ForwardCommandAddArg& operator=(L2ForwardCommandAddArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const L2ForwardCommandAddArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const L2ForwardCommandAddArg* internal_default_instance() {
    return reinterpret_cast<const L2ForwardCommandAddArg*>(
               &_L2ForwardCommandAddArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(L2ForwardCommandAddArg& a, L2ForwardCommandAddArg& b) {
    a.Swap(&b);
  }
  inline void Swap(L2ForwardCommandAddArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(L2ForwardCommandAddArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  L2ForwardCommandAddArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<L2ForwardCommandAddArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const L2ForwardCommandAddArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const L2ForwardCommandAddArg& from) {
    L2ForwardCommandAddArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(L2ForwardCommandAddArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.L2ForwardCommandAddArg";
  }
  protected:
  explicit L2ForwardCommandAddArg(::google::protobuf::Arena* arena);
  L2ForwardCommandAddArg(::google::protobuf::Arena* arena, const L2ForwardCommandAddArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Entry = L2ForwardCommandAddArg_Entry;

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .bess.pb.L2ForwardCommandAddArg.Entry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::bess::pb::L2ForwardCommandAddArg_Entry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::L2ForwardCommandAddArg_Entry >*
      mutable_entries();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::L2ForwardCommandAddArg_Entry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::L2ForwardCommandAddArg_Entry>* _internal_mutable_entries();
  public:
  const ::bess::pb::L2ForwardCommandAddArg_Entry& entries(int index) const;
  ::bess::pb::L2ForwardCommandAddArg_Entry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::L2ForwardCommandAddArg_Entry >&
      entries() const;
  // @@protoc_insertion_point(class_scope:bess.pb.L2ForwardCommandAddArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::L2ForwardCommandAddArg_Entry > entries_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class HashLBCommandSetModeArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.HashLBCommandSetModeArg) */ {
 public:
  inline HashLBCommandSetModeArg() : HashLBCommandSetModeArg(nullptr) {}
  ~HashLBCommandSetModeArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HashLBCommandSetModeArg(::google::protobuf::internal::ConstantInitialized);

  inline HashLBCommandSetModeArg(const HashLBCommandSetModeArg& from)
      : HashLBCommandSetModeArg(nullptr, from) {}
  HashLBCommandSetModeArg(HashLBCommandSetModeArg&& from) noexcept
    : HashLBCommandSetModeArg() {
    *this = ::std::move(from);
  }

  inline HashLBCommandSetModeArg& operator=(const HashLBCommandSetModeArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline HashLBCommandSetModeArg& operator=(HashLBCommandSetModeArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HashLBCommandSetModeArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const HashLBCommandSetModeArg* internal_default_instance() {
    return reinterpret_cast<const HashLBCommandSetModeArg*>(
               &_HashLBCommandSetModeArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(HashLBCommandSetModeArg& a, HashLBCommandSetModeArg& b) {
    a.Swap(&b);
  }
  inline void Swap(HashLBCommandSetModeArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HashLBCommandSetModeArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HashLBCommandSetModeArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HashLBCommandSetModeArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HashLBCommandSetModeArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HashLBCommandSetModeArg& from) {
    HashLBCommandSetModeArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HashLBCommandSetModeArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.HashLBCommandSetModeArg";
  }
  protected:
  explicit HashLBCommandSetModeArg(::google::protobuf::Arena* arena);
  HashLBCommandSetModeArg(::google::protobuf::Arena* arena, const HashLBCommandSetModeArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldsFieldNumber = 2,
    kModeFieldNumber = 1,
  };
  // repeated .bess.pb.Field fields = 2;
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::bess::pb::Field* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::Field >*
      mutable_fields();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::Field>* _internal_mutable_fields();
  public:
  const ::bess::pb::Field& fields(int index) const;
  ::bess::pb::Field* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::Field >&
      fields() const;
  // string mode = 1;
  void clear_mode() ;
  const std::string& mode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mode(Arg_&& arg, Args_... args);
  std::string* mutable_mode();
  PROTOBUF_NODISCARD std::string* release_mode();
  void set_allocated_mode(std::string* value);

  private:
  const std::string& _internal_mode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mode(
      const std::string& value);
  std::string* _internal_mutable_mode();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.HashLBCommandSetModeArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::Field > fields_;
    ::google::protobuf::internal::ArenaStringPtr mode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class HashLBArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.HashLBArg) */ {
 public:
  inline HashLBArg() : HashLBArg(nullptr) {}
  ~HashLBArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HashLBArg(::google::protobuf::internal::ConstantInitialized);

  inline HashLBArg(const HashLBArg& from)
      : HashLBArg(nullptr, from) {}
  HashLBArg(HashLBArg&& from) noexcept
    : HashLBArg() {
    *this = ::std::move(from);
  }

  inline HashLBArg& operator=(const HashLBArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline HashLBArg& operator=(HashLBArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HashLBArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const HashLBArg* internal_default_instance() {
    return reinterpret_cast<const HashLBArg*>(
               &_HashLBArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(HashLBArg& a, HashLBArg& b) {
    a.Swap(&b);
  }
  inline void Swap(HashLBArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HashLBArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HashLBArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HashLBArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HashLBArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HashLBArg& from) {
    HashLBArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HashLBArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.HashLBArg";
  }
  protected:
  explicit HashLBArg(::google::protobuf::Arena* arena);
  HashLBArg(::google::protobuf::Arena* arena, const HashLBArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGatesFieldNumber = 1,
    kFieldsFieldNumber = 3,
    kModeFieldNumber = 2,
  };
  // repeated int64 gates = 1;
  int gates_size() const;
  private:
  int _internal_gates_size() const;

  public:
  void clear_gates() ;
  ::int64_t gates(int index) const;
  void set_gates(int index, ::int64_t value);
  void add_gates(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_gates();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_gates() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_gates();

  public:
  // repeated .bess.pb.Field fields = 3;
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::bess::pb::Field* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::Field >*
      mutable_fields();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::Field>* _internal_mutable_fields();
  public:
  const ::bess::pb::Field& fields(int index) const;
  ::bess::pb::Field* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::Field >&
      fields() const;
  // string mode = 2;
  void clear_mode() ;
  const std::string& mode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mode(Arg_&& arg, Args_... args);
  std::string* mutable_mode();
  PROTOBUF_NODISCARD std::string* release_mode();
  void set_allocated_mode(std::string* value);

  private:
  const std::string& _internal_mode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mode(
      const std::string& value);
  std::string* _internal_mutable_mode();

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.HashLBArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      30, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> gates_;
    mutable ::google::protobuf::internal::CachedSize _gates_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::bess::pb::Field > fields_;
    ::google::protobuf::internal::ArenaStringPtr mode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class GenericEncapArg_EncapField final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GenericEncapArg.EncapField) */ {
 public:
  inline GenericEncapArg_EncapField() : GenericEncapArg_EncapField(nullptr) {}
  ~GenericEncapArg_EncapField() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GenericEncapArg_EncapField(::google::protobuf::internal::ConstantInitialized);

  inline GenericEncapArg_EncapField(const GenericEncapArg_EncapField& from)
      : GenericEncapArg_EncapField(nullptr, from) {}
  GenericEncapArg_EncapField(GenericEncapArg_EncapField&& from) noexcept
    : GenericEncapArg_EncapField() {
    *this = ::std::move(from);
  }

  inline GenericEncapArg_EncapField& operator=(const GenericEncapArg_EncapField& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenericEncapArg_EncapField& operator=(GenericEncapArg_EncapField&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenericEncapArg_EncapField& default_instance() {
    return *internal_default_instance();
  }
  enum InsertionCase {
    kAttribute = 2,
    kValue = 3,
    INSERTION_NOT_SET = 0,
  };

  static inline const GenericEncapArg_EncapField* internal_default_instance() {
    return reinterpret_cast<const GenericEncapArg_EncapField*>(
               &_GenericEncapArg_EncapField_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(GenericEncapArg_EncapField& a, GenericEncapArg_EncapField& b) {
    a.Swap(&b);
  }
  inline void Swap(GenericEncapArg_EncapField* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenericEncapArg_EncapField* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenericEncapArg_EncapField* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenericEncapArg_EncapField>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenericEncapArg_EncapField& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GenericEncapArg_EncapField& from) {
    GenericEncapArg_EncapField::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GenericEncapArg_EncapField* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.GenericEncapArg.EncapField";
  }
  protected:
  explicit GenericEncapArg_EncapField(::google::protobuf::Arena* arena);
  GenericEncapArg_EncapField(::google::protobuf::Arena* arena, const GenericEncapArg_EncapField& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSizeFieldNumber = 1,
    kAttributeFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // uint64 size = 1;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // string attribute = 2;
  bool has_attribute() const;
  void clear_attribute() ;
  const std::string& attribute() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attribute(Arg_&& arg, Args_... args);
  std::string* mutable_attribute();
  PROTOBUF_NODISCARD std::string* release_attribute();
  void set_allocated_attribute(std::string* value);

  private:
  const std::string& _internal_attribute() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attribute(
      const std::string& value);
  std::string* _internal_mutable_attribute();

  public:
  // .bess.pb.FieldData value = 3;
  bool has_value() const;
  private:
  bool _internal_has_value() const;

  public:
  void clear_value() ;
  const ::bess::pb::FieldData& value() const;
  PROTOBUF_NODISCARD ::bess::pb::FieldData* release_value();
  ::bess::pb::FieldData* mutable_value();
  void set_allocated_value(::bess::pb::FieldData* value);
  void unsafe_arena_set_allocated_value(::bess::pb::FieldData* value);
  ::bess::pb::FieldData* unsafe_arena_release_value();

  private:
  const ::bess::pb::FieldData& _internal_value() const;
  ::bess::pb::FieldData* _internal_mutable_value();

  public:
  void clear_insertion();
  InsertionCase insertion_case() const;
  // @@protoc_insertion_point(class_scope:bess.pb.GenericEncapArg.EncapField)
 private:
  class _Internal;
  void set_has_attribute();
  void set_has_value();

  inline bool has_insertion() const;
  inline void clear_has_insertion();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 1,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t size_;
    union InsertionUnion {
      constexpr InsertionUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr attribute_;
      ::bess::pb::FieldData* value_;
    } insertion_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ExactMatchCommandDeleteArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ExactMatchCommandDeleteArg) */ {
 public:
  inline ExactMatchCommandDeleteArg() : ExactMatchCommandDeleteArg(nullptr) {}
  ~ExactMatchCommandDeleteArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExactMatchCommandDeleteArg(::google::protobuf::internal::ConstantInitialized);

  inline ExactMatchCommandDeleteArg(const ExactMatchCommandDeleteArg& from)
      : ExactMatchCommandDeleteArg(nullptr, from) {}
  ExactMatchCommandDeleteArg(ExactMatchCommandDeleteArg&& from) noexcept
    : ExactMatchCommandDeleteArg() {
    *this = ::std::move(from);
  }

  inline ExactMatchCommandDeleteArg& operator=(const ExactMatchCommandDeleteArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExactMatchCommandDeleteArg& operator=(ExactMatchCommandDeleteArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExactMatchCommandDeleteArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExactMatchCommandDeleteArg* internal_default_instance() {
    return reinterpret_cast<const ExactMatchCommandDeleteArg*>(
               &_ExactMatchCommandDeleteArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ExactMatchCommandDeleteArg& a, ExactMatchCommandDeleteArg& b) {
    a.Swap(&b);
  }
  inline void Swap(ExactMatchCommandDeleteArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExactMatchCommandDeleteArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExactMatchCommandDeleteArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExactMatchCommandDeleteArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExactMatchCommandDeleteArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExactMatchCommandDeleteArg& from) {
    ExactMatchCommandDeleteArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExactMatchCommandDeleteArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ExactMatchCommandDeleteArg";
  }
  protected:
  explicit ExactMatchCommandDeleteArg(::google::protobuf::Arena* arena);
  ExactMatchCommandDeleteArg(::google::protobuf::Arena* arena, const ExactMatchCommandDeleteArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldsFieldNumber = 2,
  };
  // repeated .bess.pb.FieldData fields = 2;
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::bess::pb::FieldData* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >*
      mutable_fields();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* _internal_mutable_fields();
  public:
  const ::bess::pb::FieldData& fields(int index) const;
  ::bess::pb::FieldData* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >&
      fields() const;
  // @@protoc_insertion_point(class_scope:bess.pb.ExactMatchCommandDeleteArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData > fields_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ExactMatchCommandAddArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ExactMatchCommandAddArg) */ {
 public:
  inline ExactMatchCommandAddArg() : ExactMatchCommandAddArg(nullptr) {}
  ~ExactMatchCommandAddArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExactMatchCommandAddArg(::google::protobuf::internal::ConstantInitialized);

  inline ExactMatchCommandAddArg(const ExactMatchCommandAddArg& from)
      : ExactMatchCommandAddArg(nullptr, from) {}
  ExactMatchCommandAddArg(ExactMatchCommandAddArg&& from) noexcept
    : ExactMatchCommandAddArg() {
    *this = ::std::move(from);
  }

  inline ExactMatchCommandAddArg& operator=(const ExactMatchCommandAddArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExactMatchCommandAddArg& operator=(ExactMatchCommandAddArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExactMatchCommandAddArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExactMatchCommandAddArg* internal_default_instance() {
    return reinterpret_cast<const ExactMatchCommandAddArg*>(
               &_ExactMatchCommandAddArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ExactMatchCommandAddArg& a, ExactMatchCommandAddArg& b) {
    a.Swap(&b);
  }
  inline void Swap(ExactMatchCommandAddArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExactMatchCommandAddArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExactMatchCommandAddArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExactMatchCommandAddArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExactMatchCommandAddArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExactMatchCommandAddArg& from) {
    ExactMatchCommandAddArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExactMatchCommandAddArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ExactMatchCommandAddArg";
  }
  protected:
  explicit ExactMatchCommandAddArg(::google::protobuf::Arena* arena);
  ExactMatchCommandAddArg(::google::protobuf::Arena* arena, const ExactMatchCommandAddArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldsFieldNumber = 2,
    kGateFieldNumber = 1,
  };
  // repeated .bess.pb.FieldData fields = 2;
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::bess::pb::FieldData* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >*
      mutable_fields();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* _internal_mutable_fields();
  public:
  const ::bess::pb::FieldData& fields(int index) const;
  ::bess::pb::FieldData* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >&
      fields() const;
  // uint64 gate = 1;
  void clear_gate() ;
  ::uint64_t gate() const;
  void set_gate(::uint64_t value);

  private:
  ::uint64_t _internal_gate() const;
  void _internal_set_gate(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.ExactMatchCommandAddArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData > fields_;
    ::uint64_t gate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ExactMatchArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ExactMatchArg) */ {
 public:
  inline ExactMatchArg() : ExactMatchArg(nullptr) {}
  ~ExactMatchArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExactMatchArg(::google::protobuf::internal::ConstantInitialized);

  inline ExactMatchArg(const ExactMatchArg& from)
      : ExactMatchArg(nullptr, from) {}
  ExactMatchArg(ExactMatchArg&& from) noexcept
    : ExactMatchArg() {
    *this = ::std::move(from);
  }

  inline ExactMatchArg& operator=(const ExactMatchArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExactMatchArg& operator=(ExactMatchArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExactMatchArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExactMatchArg* internal_default_instance() {
    return reinterpret_cast<const ExactMatchArg*>(
               &_ExactMatchArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(ExactMatchArg& a, ExactMatchArg& b) {
    a.Swap(&b);
  }
  inline void Swap(ExactMatchArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExactMatchArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExactMatchArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExactMatchArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExactMatchArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExactMatchArg& from) {
    ExactMatchArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExactMatchArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ExactMatchArg";
  }
  protected:
  explicit ExactMatchArg(::google::protobuf::Arena* arena);
  ExactMatchArg(::google::protobuf::Arena* arena, const ExactMatchArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldsFieldNumber = 1,
    kMasksFieldNumber = 2,
  };
  // repeated .bess.pb.Field fields = 1;
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::bess::pb::Field* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::Field >*
      mutable_fields();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::Field>* _internal_mutable_fields();
  public:
  const ::bess::pb::Field& fields(int index) const;
  ::bess::pb::Field* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::Field >&
      fields() const;
  // repeated .bess.pb.FieldData masks = 2;
  int masks_size() const;
  private:
  int _internal_masks_size() const;

  public:
  void clear_masks() ;
  ::bess::pb::FieldData* mutable_masks(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >*
      mutable_masks();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& _internal_masks() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* _internal_mutable_masks();
  public:
  const ::bess::pb::FieldData& masks(int index) const;
  ::bess::pb::FieldData* add_masks();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData >&
      masks() const;
  // @@protoc_insertion_point(class_scope:bess.pb.ExactMatchArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::Field > fields_;
    ::google::protobuf::RepeatedPtrField< ::bess::pb::FieldData > masks_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class BPFArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.BPFArg) */ {
 public:
  inline BPFArg() : BPFArg(nullptr) {}
  ~BPFArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BPFArg(::google::protobuf::internal::ConstantInitialized);

  inline BPFArg(const BPFArg& from)
      : BPFArg(nullptr, from) {}
  BPFArg(BPFArg&& from) noexcept
    : BPFArg() {
    *this = ::std::move(from);
  }

  inline BPFArg& operator=(const BPFArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline BPFArg& operator=(BPFArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BPFArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const BPFArg* internal_default_instance() {
    return reinterpret_cast<const BPFArg*>(
               &_BPFArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(BPFArg& a, BPFArg& b) {
    a.Swap(&b);
  }
  inline void Swap(BPFArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BPFArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BPFArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BPFArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BPFArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BPFArg& from) {
    BPFArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BPFArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.BPFArg";
  }
  protected:
  explicit BPFArg(::google::protobuf::Arena* arena);
  BPFArg(::google::protobuf::Arena* arena, const BPFArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Filter = BPFArg_Filter;

  // accessors -------------------------------------------------------

  enum : int {
    kFiltersFieldNumber = 1,
  };
  // repeated .bess.pb.BPFArg.Filter filters = 1;
  int filters_size() const;
  private:
  int _internal_filters_size() const;

  public:
  void clear_filters() ;
  ::bess::pb::BPFArg_Filter* mutable_filters(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::BPFArg_Filter >*
      mutable_filters();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::BPFArg_Filter>& _internal_filters() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::BPFArg_Filter>* _internal_mutable_filters();
  public:
  const ::bess::pb::BPFArg_Filter& filters(int index) const;
  ::bess::pb::BPFArg_Filter* add_filters();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::BPFArg_Filter >&
      filters() const;
  // @@protoc_insertion_point(class_scope:bess.pb.BPFArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::BPFArg_Filter > filters_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ACLArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ACLArg) */ {
 public:
  inline ACLArg() : ACLArg(nullptr) {}
  ~ACLArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ACLArg(::google::protobuf::internal::ConstantInitialized);

  inline ACLArg(const ACLArg& from)
      : ACLArg(nullptr, from) {}
  ACLArg(ACLArg&& from) noexcept
    : ACLArg() {
    *this = ::std::move(from);
  }

  inline ACLArg& operator=(const ACLArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ACLArg& operator=(ACLArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ACLArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ACLArg* internal_default_instance() {
    return reinterpret_cast<const ACLArg*>(
               &_ACLArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(ACLArg& a, ACLArg& b) {
    a.Swap(&b);
  }
  inline void Swap(ACLArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ACLArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ACLArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ACLArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ACLArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ACLArg& from) {
    ACLArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ACLArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ACLArg";
  }
  protected:
  explicit ACLArg(::google::protobuf::Arena* arena);
  ACLArg(::google::protobuf::Arena* arena, const ACLArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Rule = ACLArg_Rule;

  // accessors -------------------------------------------------------

  enum : int {
    kRulesFieldNumber = 1,
  };
  // repeated .bess.pb.ACLArg.Rule rules = 1;
  int rules_size() const;
  private:
  int _internal_rules_size() const;

  public:
  void clear_rules() ;
  ::bess::pb::ACLArg_Rule* mutable_rules(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::ACLArg_Rule >*
      mutable_rules();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::ACLArg_Rule>& _internal_rules() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::ACLArg_Rule>* _internal_mutable_rules();
  public:
  const ::bess::pb::ACLArg_Rule& rules(int index) const;
  ::bess::pb::ACLArg_Rule* add_rules();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::ACLArg_Rule >&
      rules() const;
  // @@protoc_insertion_point(class_scope:bess.pb.ACLArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::ACLArg_Rule > rules_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class WildcardMatchConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.WildcardMatchConfig) */ {
 public:
  inline WildcardMatchConfig() : WildcardMatchConfig(nullptr) {}
  ~WildcardMatchConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WildcardMatchConfig(::google::protobuf::internal::ConstantInitialized);

  inline WildcardMatchConfig(const WildcardMatchConfig& from)
      : WildcardMatchConfig(nullptr, from) {}
  WildcardMatchConfig(WildcardMatchConfig&& from) noexcept
    : WildcardMatchConfig() {
    *this = ::std::move(from);
  }

  inline WildcardMatchConfig& operator=(const WildcardMatchConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline WildcardMatchConfig& operator=(WildcardMatchConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WildcardMatchConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const WildcardMatchConfig* internal_default_instance() {
    return reinterpret_cast<const WildcardMatchConfig*>(
               &_WildcardMatchConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  friend void swap(WildcardMatchConfig& a, WildcardMatchConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(WildcardMatchConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WildcardMatchConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WildcardMatchConfig* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WildcardMatchConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WildcardMatchConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WildcardMatchConfig& from) {
    WildcardMatchConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WildcardMatchConfig* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.WildcardMatchConfig";
  }
  protected:
  explicit WildcardMatchConfig(::google::protobuf::Arena* arena);
  WildcardMatchConfig(::google::protobuf::Arena* arena, const WildcardMatchConfig& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRulesFieldNumber = 2,
    kDefaultGateFieldNumber = 1,
  };
  // repeated .bess.pb.WildcardMatchCommandAddArg rules = 2;
  int rules_size() const;
  private:
  int _internal_rules_size() const;

  public:
  void clear_rules() ;
  ::bess::pb::WildcardMatchCommandAddArg* mutable_rules(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::WildcardMatchCommandAddArg >*
      mutable_rules();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::WildcardMatchCommandAddArg>& _internal_rules() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::WildcardMatchCommandAddArg>* _internal_mutable_rules();
  public:
  const ::bess::pb::WildcardMatchCommandAddArg& rules(int index) const;
  ::bess::pb::WildcardMatchCommandAddArg* add_rules();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::WildcardMatchCommandAddArg >&
      rules() const;
  // uint64 default_gate = 1;
  void clear_default_gate() ;
  ::uint64_t default_gate() const;
  void set_default_gate(::uint64_t value);

  private:
  ::uint64_t _internal_default_gate() const;
  void _internal_set_default_gate(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.WildcardMatchConfig)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::WildcardMatchCommandAddArg > rules_;
    ::uint64_t default_gate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class StaticNATArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.StaticNATArg) */ {
 public:
  inline StaticNATArg() : StaticNATArg(nullptr) {}
  ~StaticNATArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StaticNATArg(::google::protobuf::internal::ConstantInitialized);

  inline StaticNATArg(const StaticNATArg& from)
      : StaticNATArg(nullptr, from) {}
  StaticNATArg(StaticNATArg&& from) noexcept
    : StaticNATArg() {
    *this = ::std::move(from);
  }

  inline StaticNATArg& operator=(const StaticNATArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline StaticNATArg& operator=(StaticNATArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StaticNATArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const StaticNATArg* internal_default_instance() {
    return reinterpret_cast<const StaticNATArg*>(
               &_StaticNATArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(StaticNATArg& a, StaticNATArg& b) {
    a.Swap(&b);
  }
  inline void Swap(StaticNATArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StaticNATArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StaticNATArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StaticNATArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StaticNATArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StaticNATArg& from) {
    StaticNATArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StaticNATArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.StaticNATArg";
  }
  protected:
  explicit StaticNATArg(::google::protobuf::Arena* arena);
  StaticNATArg(::google::protobuf::Arena* arena, const StaticNATArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using AddressRange = StaticNATArg_AddressRange;
  using AddressRangePair = StaticNATArg_AddressRangePair;

  // accessors -------------------------------------------------------

  enum : int {
    kPairsFieldNumber = 1,
  };
  // repeated .bess.pb.StaticNATArg.AddressRangePair pairs = 1;
  int pairs_size() const;
  private:
  int _internal_pairs_size() const;

  public:
  void clear_pairs() ;
  ::bess::pb::StaticNATArg_AddressRangePair* mutable_pairs(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::StaticNATArg_AddressRangePair >*
      mutable_pairs();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::StaticNATArg_AddressRangePair>& _internal_pairs() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::StaticNATArg_AddressRangePair>* _internal_mutable_pairs();
  public:
  const ::bess::pb::StaticNATArg_AddressRangePair& pairs(int index) const;
  ::bess::pb::StaticNATArg_AddressRangePair* add_pairs();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::StaticNATArg_AddressRangePair >&
      pairs() const;
  // @@protoc_insertion_point(class_scope:bess.pb.StaticNATArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::StaticNATArg_AddressRangePair > pairs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class NATArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.NATArg) */ {
 public:
  inline NATArg() : NATArg(nullptr) {}
  ~NATArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR NATArg(::google::protobuf::internal::ConstantInitialized);

  inline NATArg(const NATArg& from)
      : NATArg(nullptr, from) {}
  NATArg(NATArg&& from) noexcept
    : NATArg() {
    *this = ::std::move(from);
  }

  inline NATArg& operator=(const NATArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline NATArg& operator=(NATArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NATArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const NATArg* internal_default_instance() {
    return reinterpret_cast<const NATArg*>(
               &_NATArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(NATArg& a, NATArg& b) {
    a.Swap(&b);
  }
  inline void Swap(NATArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NATArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NATArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NATArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NATArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const NATArg& from) {
    NATArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NATArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.NATArg";
  }
  protected:
  explicit NATArg(::google::protobuf::Arena* arena);
  NATArg(::google::protobuf::Arena* arena, const NATArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using PortRange = NATArg_PortRange;
  using ExternalAddress = NATArg_ExternalAddress;

  // accessors -------------------------------------------------------

  enum : int {
    kExtAddrsFieldNumber = 1,
  };
  // repeated .bess.pb.NATArg.ExternalAddress ext_addrs = 1;
  int ext_addrs_size() const;
  private:
  int _internal_ext_addrs_size() const;

  public:
  void clear_ext_addrs() ;
  ::bess::pb::NATArg_ExternalAddress* mutable_ext_addrs(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::NATArg_ExternalAddress >*
      mutable_ext_addrs();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_ExternalAddress>& _internal_ext_addrs() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_ExternalAddress>* _internal_mutable_ext_addrs();
  public:
  const ::bess::pb::NATArg_ExternalAddress& ext_addrs(int index) const;
  ::bess::pb::NATArg_ExternalAddress* add_ext_addrs();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::NATArg_ExternalAddress >&
      ext_addrs() const;
  // @@protoc_insertion_point(class_scope:bess.pb.NATArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::NATArg_ExternalAddress > ext_addrs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class GenericEncapArg final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.GenericEncapArg) */ {
 public:
  inline GenericEncapArg() : GenericEncapArg(nullptr) {}
  ~GenericEncapArg() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GenericEncapArg(::google::protobuf::internal::ConstantInitialized);

  inline GenericEncapArg(const GenericEncapArg& from)
      : GenericEncapArg(nullptr, from) {}
  GenericEncapArg(GenericEncapArg&& from) noexcept
    : GenericEncapArg() {
    *this = ::std::move(from);
  }

  inline GenericEncapArg& operator=(const GenericEncapArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenericEncapArg& operator=(GenericEncapArg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenericEncapArg& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenericEncapArg* internal_default_instance() {
    return reinterpret_cast<const GenericEncapArg*>(
               &_GenericEncapArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(GenericEncapArg& a, GenericEncapArg& b) {
    a.Swap(&b);
  }
  inline void Swap(GenericEncapArg* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenericEncapArg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenericEncapArg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GenericEncapArg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenericEncapArg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GenericEncapArg& from) {
    GenericEncapArg::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GenericEncapArg* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.GenericEncapArg";
  }
  protected:
  explicit GenericEncapArg(::google::protobuf::Arena* arena);
  GenericEncapArg(::google::protobuf::Arena* arena, const GenericEncapArg& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using EncapField = GenericEncapArg_EncapField;

  // accessors -------------------------------------------------------

  enum : int {
    kFieldsFieldNumber = 1,
  };
  // repeated .bess.pb.GenericEncapArg.EncapField fields = 1;
  int fields_size() const;
  private:
  int _internal_fields_size() const;

  public:
  void clear_fields() ;
  ::bess::pb::GenericEncapArg_EncapField* mutable_fields(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::GenericEncapArg_EncapField >*
      mutable_fields();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::GenericEncapArg_EncapField>& _internal_fields() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::GenericEncapArg_EncapField>* _internal_mutable_fields();
  public:
  const ::bess::pb::GenericEncapArg_EncapField& fields(int index) const;
  ::bess::pb::GenericEncapArg_EncapField* add_fields();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::GenericEncapArg_EncapField >&
      fields() const;
  // @@protoc_insertion_point(class_scope:bess.pb.GenericEncapArg)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::GenericEncapArg_EncapField > fields_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};// -------------------------------------------------------------------

class ExactMatchConfig final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bess.pb.ExactMatchConfig) */ {
 public:
  inline ExactMatchConfig() : ExactMatchConfig(nullptr) {}
  ~ExactMatchConfig() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExactMatchConfig(::google::protobuf::internal::ConstantInitialized);

  inline ExactMatchConfig(const ExactMatchConfig& from)
      : ExactMatchConfig(nullptr, from) {}
  ExactMatchConfig(ExactMatchConfig&& from) noexcept
    : ExactMatchConfig() {
    *this = ::std::move(from);
  }

  inline ExactMatchConfig& operator=(const ExactMatchConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExactMatchConfig& operator=(ExactMatchConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExactMatchConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExactMatchConfig* internal_default_instance() {
    return reinterpret_cast<const ExactMatchConfig*>(
               &_ExactMatchConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(ExactMatchConfig& a, ExactMatchConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(ExactMatchConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExactMatchConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExactMatchConfig* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExactMatchConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExactMatchConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExactMatchConfig& from) {
    ExactMatchConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExactMatchConfig* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "bess.pb.ExactMatchConfig";
  }
  protected:
  explicit ExactMatchConfig(::google::protobuf::Arena* arena);
  ExactMatchConfig(::google::protobuf::Arena* arena, const ExactMatchConfig& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRulesFieldNumber = 2,
    kDefaultGateFieldNumber = 1,
  };
  // repeated .bess.pb.ExactMatchCommandAddArg rules = 2;
  int rules_size() const;
  private:
  int _internal_rules_size() const;

  public:
  void clear_rules() ;
  ::bess::pb::ExactMatchCommandAddArg* mutable_rules(int index);
  ::google::protobuf::RepeatedPtrField< ::bess::pb::ExactMatchCommandAddArg >*
      mutable_rules();
  private:
  const ::google::protobuf::RepeatedPtrField<::bess::pb::ExactMatchCommandAddArg>& _internal_rules() const;
  ::google::protobuf::RepeatedPtrField<::bess::pb::ExactMatchCommandAddArg>* _internal_mutable_rules();
  public:
  const ::bess::pb::ExactMatchCommandAddArg& rules(int index) const;
  ::bess::pb::ExactMatchCommandAddArg* add_rules();
  const ::google::protobuf::RepeatedPtrField< ::bess::pb::ExactMatchCommandAddArg >&
      rules() const;
  // uint64 default_gate = 1;
  void clear_default_gate() ;
  ::uint64_t default_gate() const;
  void set_default_gate(::uint64_t value);

  private:
  ::uint64_t _internal_default_gate() const;
  void _internal_set_default_gate(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:bess.pb.ExactMatchConfig)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::bess::pb::ExactMatchCommandAddArg > rules_;
    ::uint64_t default_gate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_module_5fmsg_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EmptyArg

// -------------------------------------------------------------------

// BPFCommandClearArg

// -------------------------------------------------------------------

// ExactMatchCommandAddArg

// uint64 gate = 1;
inline void ExactMatchCommandAddArg::clear_gate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gate_ = ::uint64_t{0u};
}
inline ::uint64_t ExactMatchCommandAddArg::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.ExactMatchCommandAddArg.gate)
  return _internal_gate();
}
inline void ExactMatchCommandAddArg::set_gate(::uint64_t value) {
  _internal_set_gate(value);
  // @@protoc_insertion_point(field_set:bess.pb.ExactMatchCommandAddArg.gate)
}
inline ::uint64_t ExactMatchCommandAddArg::_internal_gate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gate_;
}
inline void ExactMatchCommandAddArg::_internal_set_gate(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gate_ = value;
}

// repeated .bess.pb.FieldData fields = 2;
inline int ExactMatchCommandAddArg::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int ExactMatchCommandAddArg::fields_size() const {
  return _internal_fields_size();
}
inline ::bess::pb::FieldData* ExactMatchCommandAddArg::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.ExactMatchCommandAddArg.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* ExactMatchCommandAddArg::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ExactMatchCommandAddArg.fields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_fields();
}
inline const ::bess::pb::FieldData& ExactMatchCommandAddArg::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.ExactMatchCommandAddArg.fields)
  return _internal_fields().Get(index);
}
inline ::bess::pb::FieldData* ExactMatchCommandAddArg::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::FieldData* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.ExactMatchCommandAddArg.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& ExactMatchCommandAddArg::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.ExactMatchCommandAddArg.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>&
ExactMatchCommandAddArg::_internal_fields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>*
ExactMatchCommandAddArg::_internal_mutable_fields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.fields_;
}

// -------------------------------------------------------------------

// ExactMatchCommandDeleteArg

// repeated .bess.pb.FieldData fields = 2;
inline int ExactMatchCommandDeleteArg::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int ExactMatchCommandDeleteArg::fields_size() const {
  return _internal_fields_size();
}
inline ::bess::pb::FieldData* ExactMatchCommandDeleteArg::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.ExactMatchCommandDeleteArg.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* ExactMatchCommandDeleteArg::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ExactMatchCommandDeleteArg.fields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_fields();
}
inline const ::bess::pb::FieldData& ExactMatchCommandDeleteArg::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.ExactMatchCommandDeleteArg.fields)
  return _internal_fields().Get(index);
}
inline ::bess::pb::FieldData* ExactMatchCommandDeleteArg::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::FieldData* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.ExactMatchCommandDeleteArg.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& ExactMatchCommandDeleteArg::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.ExactMatchCommandDeleteArg.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>&
ExactMatchCommandDeleteArg::_internal_fields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>*
ExactMatchCommandDeleteArg::_internal_mutable_fields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.fields_;
}

// -------------------------------------------------------------------

// ExactMatchCommandClearArg

// -------------------------------------------------------------------

// ExactMatchCommandSetDefaultGateArg

// uint64 gate = 1;
inline void ExactMatchCommandSetDefaultGateArg::clear_gate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gate_ = ::uint64_t{0u};
}
inline ::uint64_t ExactMatchCommandSetDefaultGateArg::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.ExactMatchCommandSetDefaultGateArg.gate)
  return _internal_gate();
}
inline void ExactMatchCommandSetDefaultGateArg::set_gate(::uint64_t value) {
  _internal_set_gate(value);
  // @@protoc_insertion_point(field_set:bess.pb.ExactMatchCommandSetDefaultGateArg.gate)
}
inline ::uint64_t ExactMatchCommandSetDefaultGateArg::_internal_gate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gate_;
}
inline void ExactMatchCommandSetDefaultGateArg::_internal_set_gate(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gate_ = value;
}

// -------------------------------------------------------------------

// FlowGenCommandSetBurstArg

// uint64 burst = 1;
inline void FlowGenCommandSetBurstArg::clear_burst() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.burst_ = ::uint64_t{0u};
}
inline ::uint64_t FlowGenCommandSetBurstArg::burst() const {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenCommandSetBurstArg.burst)
  return _internal_burst();
}
inline void FlowGenCommandSetBurstArg::set_burst(::uint64_t value) {
  _internal_set_burst(value);
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenCommandSetBurstArg.burst)
}
inline ::uint64_t FlowGenCommandSetBurstArg::_internal_burst() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.burst_;
}
inline void FlowGenCommandSetBurstArg::_internal_set_burst(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.burst_ = value;
}

// -------------------------------------------------------------------

// HashLBCommandSetModeArg

// string mode = 1;
inline void HashLBCommandSetModeArg::clear_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_.ClearToEmpty();
}
inline const std::string& HashLBCommandSetModeArg::mode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.HashLBCommandSetModeArg.mode)
  return _internal_mode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HashLBCommandSetModeArg::set_mode(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.HashLBCommandSetModeArg.mode)
}
inline std::string* HashLBCommandSetModeArg::mutable_mode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mode();
  // @@protoc_insertion_point(field_mutable:bess.pb.HashLBCommandSetModeArg.mode)
  return _s;
}
inline const std::string& HashLBCommandSetModeArg::_internal_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mode_.Get();
}
inline void HashLBCommandSetModeArg::_internal_set_mode(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_.Set(value, GetArena());
}
inline std::string* HashLBCommandSetModeArg::_internal_mutable_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mode_.Mutable( GetArena());
}
inline std::string* HashLBCommandSetModeArg::release_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.HashLBCommandSetModeArg.mode)
  return _impl_.mode_.Release();
}
inline void HashLBCommandSetModeArg::set_allocated_mode(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mode_.IsDefault()) {
          _impl_.mode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.HashLBCommandSetModeArg.mode)
}

// repeated .bess.pb.Field fields = 2;
inline int HashLBCommandSetModeArg::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int HashLBCommandSetModeArg::fields_size() const {
  return _internal_fields_size();
}
inline ::bess::pb::Field* HashLBCommandSetModeArg::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.HashLBCommandSetModeArg.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::Field>* HashLBCommandSetModeArg::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.HashLBCommandSetModeArg.fields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_fields();
}
inline const ::bess::pb::Field& HashLBCommandSetModeArg::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.HashLBCommandSetModeArg.fields)
  return _internal_fields().Get(index);
}
inline ::bess::pb::Field* HashLBCommandSetModeArg::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::Field* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.HashLBCommandSetModeArg.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>& HashLBCommandSetModeArg::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.HashLBCommandSetModeArg.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>&
HashLBCommandSetModeArg::_internal_fields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::Field>*
HashLBCommandSetModeArg::_internal_mutable_fields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.fields_;
}

// -------------------------------------------------------------------

// HashLBCommandSetGatesArg

// repeated int64 gates = 1;
inline int HashLBCommandSetGatesArg::_internal_gates_size() const {
  return _internal_gates().size();
}
inline int HashLBCommandSetGatesArg::gates_size() const {
  return _internal_gates_size();
}
inline void HashLBCommandSetGatesArg::clear_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gates_.Clear();
}
inline ::int64_t HashLBCommandSetGatesArg::gates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.HashLBCommandSetGatesArg.gates)
  return _internal_gates().Get(index);
}
inline void HashLBCommandSetGatesArg::set_gates(int index, ::int64_t value) {
  _internal_mutable_gates()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.HashLBCommandSetGatesArg.gates)
}
inline void HashLBCommandSetGatesArg::add_gates(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gates()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.HashLBCommandSetGatesArg.gates)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& HashLBCommandSetGatesArg::gates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.HashLBCommandSetGatesArg.gates)
  return _internal_gates();
}
inline ::google::protobuf::RepeatedField<::int64_t>* HashLBCommandSetGatesArg::mutable_gates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.HashLBCommandSetGatesArg.gates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gates();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& HashLBCommandSetGatesArg::_internal_gates()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gates_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* HashLBCommandSetGatesArg::_internal_mutable_gates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gates_;
}

// -------------------------------------------------------------------

// IPLookupCommandAddArg

// string prefix = 1;
inline void IPLookupCommandAddArg::clear_prefix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefix_.ClearToEmpty();
}
inline const std::string& IPLookupCommandAddArg::prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.IPLookupCommandAddArg.prefix)
  return _internal_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IPLookupCommandAddArg::set_prefix(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefix_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.IPLookupCommandAddArg.prefix)
}
inline std::string* IPLookupCommandAddArg::mutable_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prefix();
  // @@protoc_insertion_point(field_mutable:bess.pb.IPLookupCommandAddArg.prefix)
  return _s;
}
inline const std::string& IPLookupCommandAddArg::_internal_prefix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prefix_.Get();
}
inline void IPLookupCommandAddArg::_internal_set_prefix(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefix_.Set(value, GetArena());
}
inline std::string* IPLookupCommandAddArg::_internal_mutable_prefix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.prefix_.Mutable( GetArena());
}
inline std::string* IPLookupCommandAddArg::release_prefix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.IPLookupCommandAddArg.prefix)
  return _impl_.prefix_.Release();
}
inline void IPLookupCommandAddArg::set_allocated_prefix(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefix_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.prefix_.IsDefault()) {
          _impl_.prefix_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.IPLookupCommandAddArg.prefix)
}

// uint64 prefix_len = 2;
inline void IPLookupCommandAddArg::clear_prefix_len() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefix_len_ = ::uint64_t{0u};
}
inline ::uint64_t IPLookupCommandAddArg::prefix_len() const {
  // @@protoc_insertion_point(field_get:bess.pb.IPLookupCommandAddArg.prefix_len)
  return _internal_prefix_len();
}
inline void IPLookupCommandAddArg::set_prefix_len(::uint64_t value) {
  _internal_set_prefix_len(value);
  // @@protoc_insertion_point(field_set:bess.pb.IPLookupCommandAddArg.prefix_len)
}
inline ::uint64_t IPLookupCommandAddArg::_internal_prefix_len() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prefix_len_;
}
inline void IPLookupCommandAddArg::_internal_set_prefix_len(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefix_len_ = value;
}

// uint64 gate = 3;
inline void IPLookupCommandAddArg::clear_gate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gate_ = ::uint64_t{0u};
}
inline ::uint64_t IPLookupCommandAddArg::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.IPLookupCommandAddArg.gate)
  return _internal_gate();
}
inline void IPLookupCommandAddArg::set_gate(::uint64_t value) {
  _internal_set_gate(value);
  // @@protoc_insertion_point(field_set:bess.pb.IPLookupCommandAddArg.gate)
}
inline ::uint64_t IPLookupCommandAddArg::_internal_gate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gate_;
}
inline void IPLookupCommandAddArg::_internal_set_gate(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gate_ = value;
}

// -------------------------------------------------------------------

// IPLookupCommandDeleteArg

// string prefix = 1;
inline void IPLookupCommandDeleteArg::clear_prefix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefix_.ClearToEmpty();
}
inline const std::string& IPLookupCommandDeleteArg::prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.IPLookupCommandDeleteArg.prefix)
  return _internal_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IPLookupCommandDeleteArg::set_prefix(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefix_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.IPLookupCommandDeleteArg.prefix)
}
inline std::string* IPLookupCommandDeleteArg::mutable_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prefix();
  // @@protoc_insertion_point(field_mutable:bess.pb.IPLookupCommandDeleteArg.prefix)
  return _s;
}
inline const std::string& IPLookupCommandDeleteArg::_internal_prefix() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prefix_.Get();
}
inline void IPLookupCommandDeleteArg::_internal_set_prefix(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefix_.Set(value, GetArena());
}
inline std::string* IPLookupCommandDeleteArg::_internal_mutable_prefix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.prefix_.Mutable( GetArena());
}
inline std::string* IPLookupCommandDeleteArg::release_prefix() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.IPLookupCommandDeleteArg.prefix)
  return _impl_.prefix_.Release();
}
inline void IPLookupCommandDeleteArg::set_allocated_prefix(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefix_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.prefix_.IsDefault()) {
          _impl_.prefix_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.IPLookupCommandDeleteArg.prefix)
}

// uint64 prefix_len = 2;
inline void IPLookupCommandDeleteArg::clear_prefix_len() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefix_len_ = ::uint64_t{0u};
}
inline ::uint64_t IPLookupCommandDeleteArg::prefix_len() const {
  // @@protoc_insertion_point(field_get:bess.pb.IPLookupCommandDeleteArg.prefix_len)
  return _internal_prefix_len();
}
inline void IPLookupCommandDeleteArg::set_prefix_len(::uint64_t value) {
  _internal_set_prefix_len(value);
  // @@protoc_insertion_point(field_set:bess.pb.IPLookupCommandDeleteArg.prefix_len)
}
inline ::uint64_t IPLookupCommandDeleteArg::_internal_prefix_len() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prefix_len_;
}
inline void IPLookupCommandDeleteArg::_internal_set_prefix_len(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefix_len_ = value;
}

// -------------------------------------------------------------------

// IPLookupCommandClearArg

// -------------------------------------------------------------------

// L2ForwardCommandAddArg_Entry

// string addr = 1;
inline void L2ForwardCommandAddArg_Entry::clear_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.addr_.ClearToEmpty();
}
inline const std::string& L2ForwardCommandAddArg_Entry::addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardCommandAddArg.Entry.addr)
  return _internal_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void L2ForwardCommandAddArg_Entry::set_addr(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandAddArg.Entry.addr)
}
inline std::string* L2ForwardCommandAddArg_Entry::mutable_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_addr();
  // @@protoc_insertion_point(field_mutable:bess.pb.L2ForwardCommandAddArg.Entry.addr)
  return _s;
}
inline const std::string& L2ForwardCommandAddArg_Entry::_internal_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.addr_.Get();
}
inline void L2ForwardCommandAddArg_Entry::_internal_set_addr(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.addr_.Set(value, GetArena());
}
inline std::string* L2ForwardCommandAddArg_Entry::_internal_mutable_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.addr_.Mutable( GetArena());
}
inline std::string* L2ForwardCommandAddArg_Entry::release_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.L2ForwardCommandAddArg.Entry.addr)
  return _impl_.addr_.Release();
}
inline void L2ForwardCommandAddArg_Entry::set_allocated_addr(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.addr_.IsDefault()) {
          _impl_.addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.L2ForwardCommandAddArg.Entry.addr)
}

// int64 gate = 2;
inline void L2ForwardCommandAddArg_Entry::clear_gate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gate_ = ::int64_t{0};
}
inline ::int64_t L2ForwardCommandAddArg_Entry::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardCommandAddArg.Entry.gate)
  return _internal_gate();
}
inline void L2ForwardCommandAddArg_Entry::set_gate(::int64_t value) {
  _internal_set_gate(value);
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandAddArg.Entry.gate)
}
inline ::int64_t L2ForwardCommandAddArg_Entry::_internal_gate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gate_;
}
inline void L2ForwardCommandAddArg_Entry::_internal_set_gate(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gate_ = value;
}

// -------------------------------------------------------------------

// L2ForwardCommandAddArg

// repeated .bess.pb.L2ForwardCommandAddArg.Entry entries = 1;
inline int L2ForwardCommandAddArg::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int L2ForwardCommandAddArg::entries_size() const {
  return _internal_entries_size();
}
inline void L2ForwardCommandAddArg::clear_entries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entries_.Clear();
}
inline ::bess::pb::L2ForwardCommandAddArg_Entry* L2ForwardCommandAddArg::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.L2ForwardCommandAddArg.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::L2ForwardCommandAddArg_Entry>* L2ForwardCommandAddArg::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.L2ForwardCommandAddArg.entries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_entries();
}
inline const ::bess::pb::L2ForwardCommandAddArg_Entry& L2ForwardCommandAddArg::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardCommandAddArg.entries)
  return _internal_entries().Get(index);
}
inline ::bess::pb::L2ForwardCommandAddArg_Entry* L2ForwardCommandAddArg::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::L2ForwardCommandAddArg_Entry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.L2ForwardCommandAddArg.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::L2ForwardCommandAddArg_Entry>& L2ForwardCommandAddArg::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.L2ForwardCommandAddArg.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::L2ForwardCommandAddArg_Entry>&
L2ForwardCommandAddArg::_internal_entries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::L2ForwardCommandAddArg_Entry>*
L2ForwardCommandAddArg::_internal_mutable_entries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.entries_;
}

// -------------------------------------------------------------------

// L2ForwardCommandDeleteArg

// repeated string addrs = 1;
inline int L2ForwardCommandDeleteArg::_internal_addrs_size() const {
  return _internal_addrs().size();
}
inline int L2ForwardCommandDeleteArg::addrs_size() const {
  return _internal_addrs_size();
}
inline void L2ForwardCommandDeleteArg::clear_addrs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.addrs_.Clear();
}
inline std::string* L2ForwardCommandDeleteArg::add_addrs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_addrs()->Add();
  // @@protoc_insertion_point(field_add_mutable:bess.pb.L2ForwardCommandDeleteArg.addrs)
  return _s;
}
inline const std::string& L2ForwardCommandDeleteArg::addrs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardCommandDeleteArg.addrs)
  return _internal_addrs().Get(index);
}
inline std::string* L2ForwardCommandDeleteArg::mutable_addrs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.L2ForwardCommandDeleteArg.addrs)
  return _internal_mutable_addrs()->Mutable(index);
}
inline void L2ForwardCommandDeleteArg::set_addrs(int index, const std::string& value) {
  _internal_mutable_addrs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandDeleteArg.addrs)
}
inline void L2ForwardCommandDeleteArg::set_addrs(int index, std::string&& value) {
  _internal_mutable_addrs()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandDeleteArg.addrs)
}
inline void L2ForwardCommandDeleteArg::set_addrs(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_addrs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bess.pb.L2ForwardCommandDeleteArg.addrs)
}
inline void L2ForwardCommandDeleteArg::set_addrs(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_addrs()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bess.pb.L2ForwardCommandDeleteArg.addrs)
}
inline void L2ForwardCommandDeleteArg::set_addrs(int index, absl::string_view value) {
  _internal_mutable_addrs()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:bess.pb.L2ForwardCommandDeleteArg.addrs)
}
inline void L2ForwardCommandDeleteArg::add_addrs(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_addrs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:bess.pb.L2ForwardCommandDeleteArg.addrs)
}
inline void L2ForwardCommandDeleteArg::add_addrs(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_addrs()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:bess.pb.L2ForwardCommandDeleteArg.addrs)
}
inline void L2ForwardCommandDeleteArg::add_addrs(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_addrs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bess.pb.L2ForwardCommandDeleteArg.addrs)
}
inline void L2ForwardCommandDeleteArg::add_addrs(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_addrs()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bess.pb.L2ForwardCommandDeleteArg.addrs)
}
inline void L2ForwardCommandDeleteArg::add_addrs(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_addrs()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:bess.pb.L2ForwardCommandDeleteArg.addrs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
L2ForwardCommandDeleteArg::addrs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.L2ForwardCommandDeleteArg.addrs)
  return _internal_addrs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
L2ForwardCommandDeleteArg::mutable_addrs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.L2ForwardCommandDeleteArg.addrs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_addrs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
L2ForwardCommandDeleteArg::_internal_addrs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.addrs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
L2ForwardCommandDeleteArg::_internal_mutable_addrs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.addrs_;
}

// -------------------------------------------------------------------

// L2ForwardCommandSetDefaultGateArg

// int64 gate = 1;
inline void L2ForwardCommandSetDefaultGateArg::clear_gate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gate_ = ::int64_t{0};
}
inline ::int64_t L2ForwardCommandSetDefaultGateArg::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardCommandSetDefaultGateArg.gate)
  return _internal_gate();
}
inline void L2ForwardCommandSetDefaultGateArg::set_gate(::int64_t value) {
  _internal_set_gate(value);
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandSetDefaultGateArg.gate)
}
inline ::int64_t L2ForwardCommandSetDefaultGateArg::_internal_gate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gate_;
}
inline void L2ForwardCommandSetDefaultGateArg::_internal_set_gate(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gate_ = value;
}

// -------------------------------------------------------------------

// L2ForwardCommandLookupArg

// repeated string addrs = 1;
inline int L2ForwardCommandLookupArg::_internal_addrs_size() const {
  return _internal_addrs().size();
}
inline int L2ForwardCommandLookupArg::addrs_size() const {
  return _internal_addrs_size();
}
inline void L2ForwardCommandLookupArg::clear_addrs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.addrs_.Clear();
}
inline std::string* L2ForwardCommandLookupArg::add_addrs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_addrs()->Add();
  // @@protoc_insertion_point(field_add_mutable:bess.pb.L2ForwardCommandLookupArg.addrs)
  return _s;
}
inline const std::string& L2ForwardCommandLookupArg::addrs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardCommandLookupArg.addrs)
  return _internal_addrs().Get(index);
}
inline std::string* L2ForwardCommandLookupArg::mutable_addrs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.L2ForwardCommandLookupArg.addrs)
  return _internal_mutable_addrs()->Mutable(index);
}
inline void L2ForwardCommandLookupArg::set_addrs(int index, const std::string& value) {
  _internal_mutable_addrs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandLookupArg.addrs)
}
inline void L2ForwardCommandLookupArg::set_addrs(int index, std::string&& value) {
  _internal_mutable_addrs()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandLookupArg.addrs)
}
inline void L2ForwardCommandLookupArg::set_addrs(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_addrs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bess.pb.L2ForwardCommandLookupArg.addrs)
}
inline void L2ForwardCommandLookupArg::set_addrs(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_addrs()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bess.pb.L2ForwardCommandLookupArg.addrs)
}
inline void L2ForwardCommandLookupArg::set_addrs(int index, absl::string_view value) {
  _internal_mutable_addrs()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:bess.pb.L2ForwardCommandLookupArg.addrs)
}
inline void L2ForwardCommandLookupArg::add_addrs(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_addrs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:bess.pb.L2ForwardCommandLookupArg.addrs)
}
inline void L2ForwardCommandLookupArg::add_addrs(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_addrs()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:bess.pb.L2ForwardCommandLookupArg.addrs)
}
inline void L2ForwardCommandLookupArg::add_addrs(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_addrs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bess.pb.L2ForwardCommandLookupArg.addrs)
}
inline void L2ForwardCommandLookupArg::add_addrs(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_addrs()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bess.pb.L2ForwardCommandLookupArg.addrs)
}
inline void L2ForwardCommandLookupArg::add_addrs(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_addrs()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:bess.pb.L2ForwardCommandLookupArg.addrs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
L2ForwardCommandLookupArg::addrs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.L2ForwardCommandLookupArg.addrs)
  return _internal_addrs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
L2ForwardCommandLookupArg::mutable_addrs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.L2ForwardCommandLookupArg.addrs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_addrs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
L2ForwardCommandLookupArg::_internal_addrs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.addrs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
L2ForwardCommandLookupArg::_internal_mutable_addrs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.addrs_;
}

// -------------------------------------------------------------------

// L2ForwardCommandLookupResponse

// repeated uint64 gates = 1;
inline int L2ForwardCommandLookupResponse::_internal_gates_size() const {
  return _internal_gates().size();
}
inline int L2ForwardCommandLookupResponse::gates_size() const {
  return _internal_gates_size();
}
inline void L2ForwardCommandLookupResponse::clear_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gates_.Clear();
}
inline ::uint64_t L2ForwardCommandLookupResponse::gates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardCommandLookupResponse.gates)
  return _internal_gates().Get(index);
}
inline void L2ForwardCommandLookupResponse::set_gates(int index, ::uint64_t value) {
  _internal_mutable_gates()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandLookupResponse.gates)
}
inline void L2ForwardCommandLookupResponse::add_gates(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gates()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.L2ForwardCommandLookupResponse.gates)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& L2ForwardCommandLookupResponse::gates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.L2ForwardCommandLookupResponse.gates)
  return _internal_gates();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* L2ForwardCommandLookupResponse::mutable_gates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.L2ForwardCommandLookupResponse.gates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gates();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& L2ForwardCommandLookupResponse::_internal_gates()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gates_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* L2ForwardCommandLookupResponse::_internal_mutable_gates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gates_;
}

// -------------------------------------------------------------------

// L2ForwardCommandPopulateArg

// string base = 1;
inline void L2ForwardCommandPopulateArg::clear_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.base_.ClearToEmpty();
}
inline const std::string& L2ForwardCommandPopulateArg::base() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardCommandPopulateArg.base)
  return _internal_base();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void L2ForwardCommandPopulateArg::set_base(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.base_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandPopulateArg.base)
}
inline std::string* L2ForwardCommandPopulateArg::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:bess.pb.L2ForwardCommandPopulateArg.base)
  return _s;
}
inline const std::string& L2ForwardCommandPopulateArg::_internal_base() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.base_.Get();
}
inline void L2ForwardCommandPopulateArg::_internal_set_base(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.base_.Set(value, GetArena());
}
inline std::string* L2ForwardCommandPopulateArg::_internal_mutable_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.base_.Mutable( GetArena());
}
inline std::string* L2ForwardCommandPopulateArg::release_base() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.L2ForwardCommandPopulateArg.base)
  return _impl_.base_.Release();
}
inline void L2ForwardCommandPopulateArg::set_allocated_base(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.base_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.base_.IsDefault()) {
          _impl_.base_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.L2ForwardCommandPopulateArg.base)
}

// int64 count = 2;
inline void L2ForwardCommandPopulateArg::clear_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.count_ = ::int64_t{0};
}
inline ::int64_t L2ForwardCommandPopulateArg::count() const {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardCommandPopulateArg.count)
  return _internal_count();
}
inline void L2ForwardCommandPopulateArg::set_count(::int64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandPopulateArg.count)
}
inline ::int64_t L2ForwardCommandPopulateArg::_internal_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.count_;
}
inline void L2ForwardCommandPopulateArg::_internal_set_count(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.count_ = value;
}

// int64 gate_count = 3;
inline void L2ForwardCommandPopulateArg::clear_gate_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gate_count_ = ::int64_t{0};
}
inline ::int64_t L2ForwardCommandPopulateArg::gate_count() const {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardCommandPopulateArg.gate_count)
  return _internal_gate_count();
}
inline void L2ForwardCommandPopulateArg::set_gate_count(::int64_t value) {
  _internal_set_gate_count(value);
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardCommandPopulateArg.gate_count)
}
inline ::int64_t L2ForwardCommandPopulateArg::_internal_gate_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gate_count_;
}
inline void L2ForwardCommandPopulateArg::_internal_set_gate_count(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gate_count_ = value;
}

// -------------------------------------------------------------------

// MeasureCommandGetSummaryArg

// bool clear = 1;
inline void MeasureCommandGetSummaryArg::clear_clear() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.clear_ = false;
}
inline bool MeasureCommandGetSummaryArg::clear() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryArg.clear)
  return _internal_clear();
}
inline void MeasureCommandGetSummaryArg::set_clear(bool value) {
  _internal_set_clear(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryArg.clear)
}
inline bool MeasureCommandGetSummaryArg::_internal_clear() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.clear_;
}
inline void MeasureCommandGetSummaryArg::_internal_set_clear(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.clear_ = value;
}

// repeated double latency_percentiles = 2;
inline int MeasureCommandGetSummaryArg::_internal_latency_percentiles_size() const {
  return _internal_latency_percentiles().size();
}
inline int MeasureCommandGetSummaryArg::latency_percentiles_size() const {
  return _internal_latency_percentiles_size();
}
inline void MeasureCommandGetSummaryArg::clear_latency_percentiles() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.latency_percentiles_.Clear();
}
inline double MeasureCommandGetSummaryArg::latency_percentiles(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryArg.latency_percentiles)
  return _internal_latency_percentiles().Get(index);
}
inline void MeasureCommandGetSummaryArg::set_latency_percentiles(int index, double value) {
  _internal_mutable_latency_percentiles()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryArg.latency_percentiles)
}
inline void MeasureCommandGetSummaryArg::add_latency_percentiles(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_latency_percentiles()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.MeasureCommandGetSummaryArg.latency_percentiles)
}
inline const ::google::protobuf::RepeatedField<double>& MeasureCommandGetSummaryArg::latency_percentiles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.MeasureCommandGetSummaryArg.latency_percentiles)
  return _internal_latency_percentiles();
}
inline ::google::protobuf::RepeatedField<double>* MeasureCommandGetSummaryArg::mutable_latency_percentiles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.MeasureCommandGetSummaryArg.latency_percentiles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_latency_percentiles();
}
inline const ::google::protobuf::RepeatedField<double>& MeasureCommandGetSummaryArg::_internal_latency_percentiles()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.latency_percentiles_;
}
inline ::google::protobuf::RepeatedField<double>* MeasureCommandGetSummaryArg::_internal_mutable_latency_percentiles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.latency_percentiles_;
}

// repeated double jitter_percentiles = 3;
inline int MeasureCommandGetSummaryArg::_internal_jitter_percentiles_size() const {
  return _internal_jitter_percentiles().size();
}
inline int MeasureCommandGetSummaryArg::jitter_percentiles_size() const {
  return _internal_jitter_percentiles_size();
}
inline void MeasureCommandGetSummaryArg::clear_jitter_percentiles() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.jitter_percentiles_.Clear();
}
inline double MeasureCommandGetSummaryArg::jitter_percentiles(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryArg.jitter_percentiles)
  return _internal_jitter_percentiles().Get(index);
}
inline void MeasureCommandGetSummaryArg::set_jitter_percentiles(int index, double value) {
  _internal_mutable_jitter_percentiles()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryArg.jitter_percentiles)
}
inline void MeasureCommandGetSummaryArg::add_jitter_percentiles(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_jitter_percentiles()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.MeasureCommandGetSummaryArg.jitter_percentiles)
}
inline const ::google::protobuf::RepeatedField<double>& MeasureCommandGetSummaryArg::jitter_percentiles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.MeasureCommandGetSummaryArg.jitter_percentiles)
  return _internal_jitter_percentiles();
}
inline ::google::protobuf::RepeatedField<double>* MeasureCommandGetSummaryArg::mutable_jitter_percentiles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.MeasureCommandGetSummaryArg.jitter_percentiles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_jitter_percentiles();
}
inline const ::google::protobuf::RepeatedField<double>& MeasureCommandGetSummaryArg::_internal_jitter_percentiles()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jitter_percentiles_;
}
inline ::google::protobuf::RepeatedField<double>* MeasureCommandGetSummaryArg::_internal_mutable_jitter_percentiles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.jitter_percentiles_;
}

// -------------------------------------------------------------------

// MeasureCommandGetSummaryResponse_Histogram

// uint64 count = 1;
inline void MeasureCommandGetSummaryResponse_Histogram::clear_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.count_ = ::uint64_t{0u};
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::count() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.Histogram.count)
  return _internal_count();
}
inline void MeasureCommandGetSummaryResponse_Histogram::set_count(::uint64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.Histogram.count)
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::_internal_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.count_;
}
inline void MeasureCommandGetSummaryResponse_Histogram::_internal_set_count(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.count_ = value;
}

// uint64 above_range = 2;
inline void MeasureCommandGetSummaryResponse_Histogram::clear_above_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.above_range_ = ::uint64_t{0u};
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::above_range() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.Histogram.above_range)
  return _internal_above_range();
}
inline void MeasureCommandGetSummaryResponse_Histogram::set_above_range(::uint64_t value) {
  _internal_set_above_range(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.Histogram.above_range)
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::_internal_above_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.above_range_;
}
inline void MeasureCommandGetSummaryResponse_Histogram::_internal_set_above_range(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.above_range_ = value;
}

// uint64 resolution_ns = 8;
inline void MeasureCommandGetSummaryResponse_Histogram::clear_resolution_ns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resolution_ns_ = ::uint64_t{0u};
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::resolution_ns() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.Histogram.resolution_ns)
  return _internal_resolution_ns();
}
inline void MeasureCommandGetSummaryResponse_Histogram::set_resolution_ns(::uint64_t value) {
  _internal_set_resolution_ns(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.Histogram.resolution_ns)
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::_internal_resolution_ns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resolution_ns_;
}
inline void MeasureCommandGetSummaryResponse_Histogram::_internal_set_resolution_ns(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resolution_ns_ = value;
}

// uint64 min_ns = 3;
inline void MeasureCommandGetSummaryResponse_Histogram::clear_min_ns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.min_ns_ = ::uint64_t{0u};
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::min_ns() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.Histogram.min_ns)
  return _internal_min_ns();
}
inline void MeasureCommandGetSummaryResponse_Histogram::set_min_ns(::uint64_t value) {
  _internal_set_min_ns(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.Histogram.min_ns)
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::_internal_min_ns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_ns_;
}
inline void MeasureCommandGetSummaryResponse_Histogram::_internal_set_min_ns(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.min_ns_ = value;
}

// uint64 avg_ns = 4;
inline void MeasureCommandGetSummaryResponse_Histogram::clear_avg_ns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avg_ns_ = ::uint64_t{0u};
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::avg_ns() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.Histogram.avg_ns)
  return _internal_avg_ns();
}
inline void MeasureCommandGetSummaryResponse_Histogram::set_avg_ns(::uint64_t value) {
  _internal_set_avg_ns(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.Histogram.avg_ns)
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::_internal_avg_ns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.avg_ns_;
}
inline void MeasureCommandGetSummaryResponse_Histogram::_internal_set_avg_ns(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.avg_ns_ = value;
}

// uint64 max_ns = 5;
inline void MeasureCommandGetSummaryResponse_Histogram::clear_max_ns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_ns_ = ::uint64_t{0u};
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::max_ns() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.Histogram.max_ns)
  return _internal_max_ns();
}
inline void MeasureCommandGetSummaryResponse_Histogram::set_max_ns(::uint64_t value) {
  _internal_set_max_ns(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.Histogram.max_ns)
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::_internal_max_ns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_ns_;
}
inline void MeasureCommandGetSummaryResponse_Histogram::_internal_set_max_ns(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_ns_ = value;
}

// uint64 total_ns = 6;
inline void MeasureCommandGetSummaryResponse_Histogram::clear_total_ns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_ns_ = ::uint64_t{0u};
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::total_ns() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.Histogram.total_ns)
  return _internal_total_ns();
}
inline void MeasureCommandGetSummaryResponse_Histogram::set_total_ns(::uint64_t value) {
  _internal_set_total_ns(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.Histogram.total_ns)
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::_internal_total_ns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_ns_;
}
inline void MeasureCommandGetSummaryResponse_Histogram::_internal_set_total_ns(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_ns_ = value;
}

// repeated uint64 percentile_values_ns = 7;
inline int MeasureCommandGetSummaryResponse_Histogram::_internal_percentile_values_ns_size() const {
  return _internal_percentile_values_ns().size();
}
inline int MeasureCommandGetSummaryResponse_Histogram::percentile_values_ns_size() const {
  return _internal_percentile_values_ns_size();
}
inline void MeasureCommandGetSummaryResponse_Histogram::clear_percentile_values_ns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.percentile_values_ns_.Clear();
}
inline ::uint64_t MeasureCommandGetSummaryResponse_Histogram::percentile_values_ns(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.Histogram.percentile_values_ns)
  return _internal_percentile_values_ns().Get(index);
}
inline void MeasureCommandGetSummaryResponse_Histogram::set_percentile_values_ns(int index, ::uint64_t value) {
  _internal_mutable_percentile_values_ns()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.Histogram.percentile_values_ns)
}
inline void MeasureCommandGetSummaryResponse_Histogram::add_percentile_values_ns(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_percentile_values_ns()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.MeasureCommandGetSummaryResponse.Histogram.percentile_values_ns)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& MeasureCommandGetSummaryResponse_Histogram::percentile_values_ns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.MeasureCommandGetSummaryResponse.Histogram.percentile_values_ns)
  return _internal_percentile_values_ns();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* MeasureCommandGetSummaryResponse_Histogram::mutable_percentile_values_ns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.MeasureCommandGetSummaryResponse.Histogram.percentile_values_ns)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_percentile_values_ns();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& MeasureCommandGetSummaryResponse_Histogram::_internal_percentile_values_ns()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.percentile_values_ns_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* MeasureCommandGetSummaryResponse_Histogram::_internal_mutable_percentile_values_ns() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.percentile_values_ns_;
}

// -------------------------------------------------------------------

// MeasureCommandGetSummaryResponse

// double timestamp = 1;
inline void MeasureCommandGetSummaryResponse::clear_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timestamp_ = 0;
}
inline double MeasureCommandGetSummaryResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.timestamp)
  return _internal_timestamp();
}
inline void MeasureCommandGetSummaryResponse::set_timestamp(double value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.timestamp)
}
inline double MeasureCommandGetSummaryResponse::_internal_timestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timestamp_;
}
inline void MeasureCommandGetSummaryResponse::_internal_set_timestamp(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timestamp_ = value;
}

// uint64 packets = 2;
inline void MeasureCommandGetSummaryResponse::clear_packets() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.packets_ = ::uint64_t{0u};
}
inline ::uint64_t MeasureCommandGetSummaryResponse::packets() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.packets)
  return _internal_packets();
}
inline void MeasureCommandGetSummaryResponse::set_packets(::uint64_t value) {
  _internal_set_packets(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.packets)
}
inline ::uint64_t MeasureCommandGetSummaryResponse::_internal_packets() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.packets_;
}
inline void MeasureCommandGetSummaryResponse::_internal_set_packets(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.packets_ = value;
}

// uint64 bits = 3;
inline void MeasureCommandGetSummaryResponse::clear_bits() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bits_ = ::uint64_t{0u};
}
inline ::uint64_t MeasureCommandGetSummaryResponse::bits() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.bits)
  return _internal_bits();
}
inline void MeasureCommandGetSummaryResponse::set_bits(::uint64_t value) {
  _internal_set_bits(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureCommandGetSummaryResponse.bits)
}
inline ::uint64_t MeasureCommandGetSummaryResponse::_internal_bits() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bits_;
}
inline void MeasureCommandGetSummaryResponse::_internal_set_bits(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bits_ = value;
}

// .bess.pb.MeasureCommandGetSummaryResponse.Histogram latency = 4;
inline bool MeasureCommandGetSummaryResponse::has_latency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.latency_ != nullptr);
  return value;
}
inline void MeasureCommandGetSummaryResponse::clear_latency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.latency_ != nullptr) _impl_.latency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram& MeasureCommandGetSummaryResponse::_internal_latency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* p = _impl_.latency_;
  return p != nullptr ? *p : reinterpret_cast<const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram&>(::bess::pb::_MeasureCommandGetSummaryResponse_Histogram_default_instance_);
}
inline const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram& MeasureCommandGetSummaryResponse::latency() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.latency)
  return _internal_latency();
}
inline void MeasureCommandGetSummaryResponse::unsafe_arena_set_allocated_latency(::bess::pb::MeasureCommandGetSummaryResponse_Histogram* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latency_);
  }
  _impl_.latency_ = reinterpret_cast<::bess::pb::MeasureCommandGetSummaryResponse_Histogram*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:bess.pb.MeasureCommandGetSummaryResponse.latency)
}
inline ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* MeasureCommandGetSummaryResponse::release_latency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* released = _impl_.latency_;
  _impl_.latency_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* MeasureCommandGetSummaryResponse::unsafe_arena_release_latency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.MeasureCommandGetSummaryResponse.latency)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* temp = _impl_.latency_;
  _impl_.latency_ = nullptr;
  return temp;
}
inline ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* MeasureCommandGetSummaryResponse::_internal_mutable_latency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.latency_ == nullptr) {
    auto* p = CreateMaybeMessage<::bess::pb::MeasureCommandGetSummaryResponse_Histogram>(GetArena());
    _impl_.latency_ = reinterpret_cast<::bess::pb::MeasureCommandGetSummaryResponse_Histogram*>(p);
  }
  return _impl_.latency_;
}
inline ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* MeasureCommandGetSummaryResponse::mutable_latency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* _msg = _internal_mutable_latency();
  // @@protoc_insertion_point(field_mutable:bess.pb.MeasureCommandGetSummaryResponse.latency)
  return _msg;
}
inline void MeasureCommandGetSummaryResponse::set_allocated_latency(::bess::pb::MeasureCommandGetSummaryResponse_Histogram* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::bess::pb::MeasureCommandGetSummaryResponse_Histogram*>(_impl_.latency_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::bess::pb::MeasureCommandGetSummaryResponse_Histogram*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.latency_ = reinterpret_cast<::bess::pb::MeasureCommandGetSummaryResponse_Histogram*>(value);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.MeasureCommandGetSummaryResponse.latency)
}

// .bess.pb.MeasureCommandGetSummaryResponse.Histogram jitter = 5;
inline bool MeasureCommandGetSummaryResponse::has_jitter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.jitter_ != nullptr);
  return value;
}
inline void MeasureCommandGetSummaryResponse::clear_jitter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.jitter_ != nullptr) _impl_.jitter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram& MeasureCommandGetSummaryResponse::_internal_jitter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* p = _impl_.jitter_;
  return p != nullptr ? *p : reinterpret_cast<const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram&>(::bess::pb::_MeasureCommandGetSummaryResponse_Histogram_default_instance_);
}
inline const ::bess::pb::MeasureCommandGetSummaryResponse_Histogram& MeasureCommandGetSummaryResponse::jitter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureCommandGetSummaryResponse.jitter)
  return _internal_jitter();
}
inline void MeasureCommandGetSummaryResponse::unsafe_arena_set_allocated_jitter(::bess::pb::MeasureCommandGetSummaryResponse_Histogram* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.jitter_);
  }
  _impl_.jitter_ = reinterpret_cast<::bess::pb::MeasureCommandGetSummaryResponse_Histogram*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:bess.pb.MeasureCommandGetSummaryResponse.jitter)
}
inline ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* MeasureCommandGetSummaryResponse::release_jitter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* released = _impl_.jitter_;
  _impl_.jitter_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* MeasureCommandGetSummaryResponse::unsafe_arena_release_jitter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.MeasureCommandGetSummaryResponse.jitter)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* temp = _impl_.jitter_;
  _impl_.jitter_ = nullptr;
  return temp;
}
inline ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* MeasureCommandGetSummaryResponse::_internal_mutable_jitter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.jitter_ == nullptr) {
    auto* p = CreateMaybeMessage<::bess::pb::MeasureCommandGetSummaryResponse_Histogram>(GetArena());
    _impl_.jitter_ = reinterpret_cast<::bess::pb::MeasureCommandGetSummaryResponse_Histogram*>(p);
  }
  return _impl_.jitter_;
}
inline ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* MeasureCommandGetSummaryResponse::mutable_jitter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::bess::pb::MeasureCommandGetSummaryResponse_Histogram* _msg = _internal_mutable_jitter();
  // @@protoc_insertion_point(field_mutable:bess.pb.MeasureCommandGetSummaryResponse.jitter)
  return _msg;
}
inline void MeasureCommandGetSummaryResponse::set_allocated_jitter(::bess::pb::MeasureCommandGetSummaryResponse_Histogram* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::bess::pb::MeasureCommandGetSummaryResponse_Histogram*>(_impl_.jitter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::bess::pb::MeasureCommandGetSummaryResponse_Histogram*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.jitter_ = reinterpret_cast<::bess::pb::MeasureCommandGetSummaryResponse_Histogram*>(value);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.MeasureCommandGetSummaryResponse.jitter)
}

// -------------------------------------------------------------------

// DRRArg

// uint32 num_flows = 1;
inline void DRRArg::clear_num_flows() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.num_flows_ = 0u;
}
inline ::uint32_t DRRArg::num_flows() const {
  // @@protoc_insertion_point(field_get:bess.pb.DRRArg.num_flows)
  return _internal_num_flows();
}
inline void DRRArg::set_num_flows(::uint32_t value) {
  _internal_set_num_flows(value);
  // @@protoc_insertion_point(field_set:bess.pb.DRRArg.num_flows)
}
inline ::uint32_t DRRArg::_internal_num_flows() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_flows_;
}
inline void DRRArg::_internal_set_num_flows(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_flows_ = value;
}

// uint64 quantum = 2;
inline void DRRArg::clear_quantum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.quantum_ = ::uint64_t{0u};
}
inline ::uint64_t DRRArg::quantum() const {
  // @@protoc_insertion_point(field_get:bess.pb.DRRArg.quantum)
  return _internal_quantum();
}
inline void DRRArg::set_quantum(::uint64_t value) {
  _internal_set_quantum(value);
  // @@protoc_insertion_point(field_set:bess.pb.DRRArg.quantum)
}
inline ::uint64_t DRRArg::_internal_quantum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.quantum_;
}
inline void DRRArg::_internal_set_quantum(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.quantum_ = value;
}

// uint32 max_flow_queue_size = 3;
inline void DRRArg::clear_max_flow_queue_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_flow_queue_size_ = 0u;
}
inline ::uint32_t DRRArg::max_flow_queue_size() const {
  // @@protoc_insertion_point(field_get:bess.pb.DRRArg.max_flow_queue_size)
  return _internal_max_flow_queue_size();
}
inline void DRRArg::set_max_flow_queue_size(::uint32_t value) {
  _internal_set_max_flow_queue_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.DRRArg.max_flow_queue_size)
}
inline ::uint32_t DRRArg::_internal_max_flow_queue_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_flow_queue_size_;
}
inline void DRRArg::_internal_set_max_flow_queue_size(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_flow_queue_size_ = value;
}

// -------------------------------------------------------------------

// DRRQuantumArg

// uint32 quantum = 1;
inline void DRRQuantumArg::clear_quantum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.quantum_ = 0u;
}
inline ::uint32_t DRRQuantumArg::quantum() const {
  // @@protoc_insertion_point(field_get:bess.pb.DRRQuantumArg.quantum)
  return _internal_quantum();
}
inline void DRRQuantumArg::set_quantum(::uint32_t value) {
  _internal_set_quantum(value);
  // @@protoc_insertion_point(field_set:bess.pb.DRRQuantumArg.quantum)
}
inline ::uint32_t DRRQuantumArg::_internal_quantum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.quantum_;
}
inline void DRRQuantumArg::_internal_set_quantum(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.quantum_ = value;
}

// -------------------------------------------------------------------

// DRRMaxFlowQueueSizeArg

// uint32 max_queue_size = 1;
inline void DRRMaxFlowQueueSizeArg::clear_max_queue_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_queue_size_ = 0u;
}
inline ::uint32_t DRRMaxFlowQueueSizeArg::max_queue_size() const {
  // @@protoc_insertion_point(field_get:bess.pb.DRRMaxFlowQueueSizeArg.max_queue_size)
  return _internal_max_queue_size();
}
inline void DRRMaxFlowQueueSizeArg::set_max_queue_size(::uint32_t value) {
  _internal_set_max_queue_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.DRRMaxFlowQueueSizeArg.max_queue_size)
}
inline ::uint32_t DRRMaxFlowQueueSizeArg::_internal_max_queue_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_queue_size_;
}
inline void DRRMaxFlowQueueSizeArg::_internal_set_max_queue_size(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_queue_size_ = value;
}

// -------------------------------------------------------------------

// PortIncCommandSetBurstArg

// uint64 burst = 1;
inline void PortIncCommandSetBurstArg::clear_burst() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.burst_ = ::uint64_t{0u};
}
inline ::uint64_t PortIncCommandSetBurstArg::burst() const {
  // @@protoc_insertion_point(field_get:bess.pb.PortIncCommandSetBurstArg.burst)
  return _internal_burst();
}
inline void PortIncCommandSetBurstArg::set_burst(::uint64_t value) {
  _internal_set_burst(value);
  // @@protoc_insertion_point(field_set:bess.pb.PortIncCommandSetBurstArg.burst)
}
inline ::uint64_t PortIncCommandSetBurstArg::_internal_burst() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.burst_;
}
inline void PortIncCommandSetBurstArg::_internal_set_burst(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.burst_ = value;
}

// -------------------------------------------------------------------

// QueueIncCommandSetBurstArg

// uint64 burst = 1;
inline void QueueIncCommandSetBurstArg::clear_burst() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.burst_ = ::uint64_t{0u};
}
inline ::uint64_t QueueIncCommandSetBurstArg::burst() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueIncCommandSetBurstArg.burst)
  return _internal_burst();
}
inline void QueueIncCommandSetBurstArg::set_burst(::uint64_t value) {
  _internal_set_burst(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueIncCommandSetBurstArg.burst)
}
inline ::uint64_t QueueIncCommandSetBurstArg::_internal_burst() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.burst_;
}
inline void QueueIncCommandSetBurstArg::_internal_set_burst(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.burst_ = value;
}

// -------------------------------------------------------------------

// QueueCommandSetBurstArg

// uint64 burst = 1;
inline void QueueCommandSetBurstArg::clear_burst() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.burst_ = ::uint64_t{0u};
}
inline ::uint64_t QueueCommandSetBurstArg::burst() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueCommandSetBurstArg.burst)
  return _internal_burst();
}
inline void QueueCommandSetBurstArg::set_burst(::uint64_t value) {
  _internal_set_burst(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueCommandSetBurstArg.burst)
}
inline ::uint64_t QueueCommandSetBurstArg::_internal_burst() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.burst_;
}
inline void QueueCommandSetBurstArg::_internal_set_burst(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.burst_ = value;
}

// -------------------------------------------------------------------

// QueueCommandSetSizeArg

// uint64 size = 1;
inline void QueueCommandSetSizeArg::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t QueueCommandSetSizeArg::size() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueCommandSetSizeArg.size)
  return _internal_size();
}
inline void QueueCommandSetSizeArg::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueCommandSetSizeArg.size)
}
inline ::uint64_t QueueCommandSetSizeArg::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void QueueCommandSetSizeArg::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// -------------------------------------------------------------------

// QueueCommandGetStatusArg

// -------------------------------------------------------------------

// QueueCommandGetStatusResponse

// uint64 count = 1;
inline void QueueCommandGetStatusResponse::clear_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.count_ = ::uint64_t{0u};
}
inline ::uint64_t QueueCommandGetStatusResponse::count() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueCommandGetStatusResponse.count)
  return _internal_count();
}
inline void QueueCommandGetStatusResponse::set_count(::uint64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueCommandGetStatusResponse.count)
}
inline ::uint64_t QueueCommandGetStatusResponse::_internal_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.count_;
}
inline void QueueCommandGetStatusResponse::_internal_set_count(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.count_ = value;
}

// uint64 size = 2;
inline void QueueCommandGetStatusResponse::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t QueueCommandGetStatusResponse::size() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueCommandGetStatusResponse.size)
  return _internal_size();
}
inline void QueueCommandGetStatusResponse::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueCommandGetStatusResponse.size)
}
inline ::uint64_t QueueCommandGetStatusResponse::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void QueueCommandGetStatusResponse::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// uint64 enqueued = 3;
inline void QueueCommandGetStatusResponse::clear_enqueued() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.enqueued_ = ::uint64_t{0u};
}
inline ::uint64_t QueueCommandGetStatusResponse::enqueued() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueCommandGetStatusResponse.enqueued)
  return _internal_enqueued();
}
inline void QueueCommandGetStatusResponse::set_enqueued(::uint64_t value) {
  _internal_set_enqueued(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueCommandGetStatusResponse.enqueued)
}
inline ::uint64_t QueueCommandGetStatusResponse::_internal_enqueued() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.enqueued_;
}
inline void QueueCommandGetStatusResponse::_internal_set_enqueued(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.enqueued_ = value;
}

// uint64 dequeued = 4;
inline void QueueCommandGetStatusResponse::clear_dequeued() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dequeued_ = ::uint64_t{0u};
}
inline ::uint64_t QueueCommandGetStatusResponse::dequeued() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueCommandGetStatusResponse.dequeued)
  return _internal_dequeued();
}
inline void QueueCommandGetStatusResponse::set_dequeued(::uint64_t value) {
  _internal_set_dequeued(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueCommandGetStatusResponse.dequeued)
}
inline ::uint64_t QueueCommandGetStatusResponse::_internal_dequeued() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dequeued_;
}
inline void QueueCommandGetStatusResponse::_internal_set_dequeued(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dequeued_ = value;
}

// uint64 dropped = 5;
inline void QueueCommandGetStatusResponse::clear_dropped() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dropped_ = ::uint64_t{0u};
}
inline ::uint64_t QueueCommandGetStatusResponse::dropped() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueCommandGetStatusResponse.dropped)
  return _internal_dropped();
}
inline void QueueCommandGetStatusResponse::set_dropped(::uint64_t value) {
  _internal_set_dropped(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueCommandGetStatusResponse.dropped)
}
inline ::uint64_t QueueCommandGetStatusResponse::_internal_dropped() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dropped_;
}
inline void QueueCommandGetStatusResponse::_internal_set_dropped(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dropped_ = value;
}

// -------------------------------------------------------------------

// RandomUpdateCommandClearArg

// -------------------------------------------------------------------

// RewriteCommandClearArg

// -------------------------------------------------------------------

// UpdateCommandClearArg

// -------------------------------------------------------------------

// WildcardMatchCommandAddArg

// uint64 gate = 1;
inline void WildcardMatchCommandAddArg::clear_gate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gate_ = ::uint64_t{0u};
}
inline ::uint64_t WildcardMatchCommandAddArg::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.WildcardMatchCommandAddArg.gate)
  return _internal_gate();
}
inline void WildcardMatchCommandAddArg::set_gate(::uint64_t value) {
  _internal_set_gate(value);
  // @@protoc_insertion_point(field_set:bess.pb.WildcardMatchCommandAddArg.gate)
}
inline ::uint64_t WildcardMatchCommandAddArg::_internal_gate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gate_;
}
inline void WildcardMatchCommandAddArg::_internal_set_gate(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gate_ = value;
}

// int64 priority = 2;
inline void WildcardMatchCommandAddArg::clear_priority() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.priority_ = ::int64_t{0};
}
inline ::int64_t WildcardMatchCommandAddArg::priority() const {
  // @@protoc_insertion_point(field_get:bess.pb.WildcardMatchCommandAddArg.priority)
  return _internal_priority();
}
inline void WildcardMatchCommandAddArg::set_priority(::int64_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:bess.pb.WildcardMatchCommandAddArg.priority)
}
inline ::int64_t WildcardMatchCommandAddArg::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void WildcardMatchCommandAddArg::_internal_set_priority(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// repeated .bess.pb.FieldData values = 3;
inline int WildcardMatchCommandAddArg::_internal_values_size() const {
  return _internal_values().size();
}
inline int WildcardMatchCommandAddArg::values_size() const {
  return _internal_values_size();
}
inline ::bess::pb::FieldData* WildcardMatchCommandAddArg::mutable_values(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.WildcardMatchCommandAddArg.values)
  return _internal_mutable_values()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* WildcardMatchCommandAddArg::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.WildcardMatchCommandAddArg.values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_values();
}
inline const ::bess::pb::FieldData& WildcardMatchCommandAddArg::values(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.WildcardMatchCommandAddArg.values)
  return _internal_values().Get(index);
}
inline ::bess::pb::FieldData* WildcardMatchCommandAddArg::add_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::FieldData* _add = _internal_mutable_values()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.WildcardMatchCommandAddArg.values)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& WildcardMatchCommandAddArg::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.WildcardMatchCommandAddArg.values)
  return _internal_values();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>&
WildcardMatchCommandAddArg::_internal_values() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>*
WildcardMatchCommandAddArg::_internal_mutable_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.values_;
}

// repeated .bess.pb.FieldData masks = 4;
inline int WildcardMatchCommandAddArg::_internal_masks_size() const {
  return _internal_masks().size();
}
inline int WildcardMatchCommandAddArg::masks_size() const {
  return _internal_masks_size();
}
inline ::bess::pb::FieldData* WildcardMatchCommandAddArg::mutable_masks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.WildcardMatchCommandAddArg.masks)
  return _internal_mutable_masks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* WildcardMatchCommandAddArg::mutable_masks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.WildcardMatchCommandAddArg.masks)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_masks();
}
inline const ::bess::pb::FieldData& WildcardMatchCommandAddArg::masks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.WildcardMatchCommandAddArg.masks)
  return _internal_masks().Get(index);
}
inline ::bess::pb::FieldData* WildcardMatchCommandAddArg::add_masks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::FieldData* _add = _internal_mutable_masks()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.WildcardMatchCommandAddArg.masks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& WildcardMatchCommandAddArg::masks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.WildcardMatchCommandAddArg.masks)
  return _internal_masks();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>&
WildcardMatchCommandAddArg::_internal_masks() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.masks_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>*
WildcardMatchCommandAddArg::_internal_mutable_masks() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.masks_;
}

// -------------------------------------------------------------------

// WildcardMatchCommandDeleteArg

// repeated .bess.pb.FieldData values = 1;
inline int WildcardMatchCommandDeleteArg::_internal_values_size() const {
  return _internal_values().size();
}
inline int WildcardMatchCommandDeleteArg::values_size() const {
  return _internal_values_size();
}
inline ::bess::pb::FieldData* WildcardMatchCommandDeleteArg::mutable_values(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.WildcardMatchCommandDeleteArg.values)
  return _internal_mutable_values()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* WildcardMatchCommandDeleteArg::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.WildcardMatchCommandDeleteArg.values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_values();
}
inline const ::bess::pb::FieldData& WildcardMatchCommandDeleteArg::values(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.WildcardMatchCommandDeleteArg.values)
  return _internal_values().Get(index);
}
inline ::bess::pb::FieldData* WildcardMatchCommandDeleteArg::add_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::FieldData* _add = _internal_mutable_values()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.WildcardMatchCommandDeleteArg.values)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& WildcardMatchCommandDeleteArg::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.WildcardMatchCommandDeleteArg.values)
  return _internal_values();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>&
WildcardMatchCommandDeleteArg::_internal_values() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>*
WildcardMatchCommandDeleteArg::_internal_mutable_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.values_;
}

// repeated .bess.pb.FieldData masks = 2;
inline int WildcardMatchCommandDeleteArg::_internal_masks_size() const {
  return _internal_masks().size();
}
inline int WildcardMatchCommandDeleteArg::masks_size() const {
  return _internal_masks_size();
}
inline ::bess::pb::FieldData* WildcardMatchCommandDeleteArg::mutable_masks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.WildcardMatchCommandDeleteArg.masks)
  return _internal_mutable_masks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* WildcardMatchCommandDeleteArg::mutable_masks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.WildcardMatchCommandDeleteArg.masks)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_masks();
}
inline const ::bess::pb::FieldData& WildcardMatchCommandDeleteArg::masks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.WildcardMatchCommandDeleteArg.masks)
  return _internal_masks().Get(index);
}
inline ::bess::pb::FieldData* WildcardMatchCommandDeleteArg::add_masks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::FieldData* _add = _internal_mutable_masks()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.WildcardMatchCommandDeleteArg.masks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& WildcardMatchCommandDeleteArg::masks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.WildcardMatchCommandDeleteArg.masks)
  return _internal_masks();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>&
WildcardMatchCommandDeleteArg::_internal_masks() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.masks_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>*
WildcardMatchCommandDeleteArg::_internal_mutable_masks() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.masks_;
}

// -------------------------------------------------------------------

// WildcardMatchCommandClearArg

// -------------------------------------------------------------------

// WildcardMatchCommandSetDefaultGateArg

// uint64 gate = 1;
inline void WildcardMatchCommandSetDefaultGateArg::clear_gate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gate_ = ::uint64_t{0u};
}
inline ::uint64_t WildcardMatchCommandSetDefaultGateArg::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.WildcardMatchCommandSetDefaultGateArg.gate)
  return _internal_gate();
}
inline void WildcardMatchCommandSetDefaultGateArg::set_gate(::uint64_t value) {
  _internal_set_gate(value);
  // @@protoc_insertion_point(field_set:bess.pb.WildcardMatchCommandSetDefaultGateArg.gate)
}
inline ::uint64_t WildcardMatchCommandSetDefaultGateArg::_internal_gate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gate_;
}
inline void WildcardMatchCommandSetDefaultGateArg::_internal_set_gate(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gate_ = value;
}

// -------------------------------------------------------------------

// ACLArg_Rule

// string src_ip = 1;
inline void ACLArg_Rule::clear_src_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_ip_.ClearToEmpty();
}
inline const std::string& ACLArg_Rule::src_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.ACLArg.Rule.src_ip)
  return _internal_src_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ACLArg_Rule::set_src_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.ACLArg.Rule.src_ip)
}
inline std::string* ACLArg_Rule::mutable_src_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_src_ip();
  // @@protoc_insertion_point(field_mutable:bess.pb.ACLArg.Rule.src_ip)
  return _s;
}
inline const std::string& ACLArg_Rule::_internal_src_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.src_ip_.Get();
}
inline void ACLArg_Rule::_internal_set_src_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_ip_.Set(value, GetArena());
}
inline std::string* ACLArg_Rule::_internal_mutable_src_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.src_ip_.Mutable( GetArena());
}
inline std::string* ACLArg_Rule::release_src_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.ACLArg.Rule.src_ip)
  return _impl_.src_ip_.Release();
}
inline void ACLArg_Rule::set_allocated_src_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.src_ip_.IsDefault()) {
          _impl_.src_ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ACLArg.Rule.src_ip)
}

// string dst_ip = 2;
inline void ACLArg_Rule::clear_dst_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_ip_.ClearToEmpty();
}
inline const std::string& ACLArg_Rule::dst_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.ACLArg.Rule.dst_ip)
  return _internal_dst_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ACLArg_Rule::set_dst_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.ACLArg.Rule.dst_ip)
}
inline std::string* ACLArg_Rule::mutable_dst_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dst_ip();
  // @@protoc_insertion_point(field_mutable:bess.pb.ACLArg.Rule.dst_ip)
  return _s;
}
inline const std::string& ACLArg_Rule::_internal_dst_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dst_ip_.Get();
}
inline void ACLArg_Rule::_internal_set_dst_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_ip_.Set(value, GetArena());
}
inline std::string* ACLArg_Rule::_internal_mutable_dst_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.dst_ip_.Mutable( GetArena());
}
inline std::string* ACLArg_Rule::release_dst_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.ACLArg.Rule.dst_ip)
  return _impl_.dst_ip_.Release();
}
inline void ACLArg_Rule::set_allocated_dst_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dst_ip_.IsDefault()) {
          _impl_.dst_ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ACLArg.Rule.dst_ip)
}

// uint32 src_port = 3;
inline void ACLArg_Rule::clear_src_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.src_port_ = 0u;
}
inline ::uint32_t ACLArg_Rule::src_port() const {
  // @@protoc_insertion_point(field_get:bess.pb.ACLArg.Rule.src_port)
  return _internal_src_port();
}
inline void ACLArg_Rule::set_src_port(::uint32_t value) {
  _internal_set_src_port(value);
  // @@protoc_insertion_point(field_set:bess.pb.ACLArg.Rule.src_port)
}
inline ::uint32_t ACLArg_Rule::_internal_src_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.src_port_;
}
inline void ACLArg_Rule::_internal_set_src_port(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.src_port_ = value;
}

// uint32 dst_port = 4;
inline void ACLArg_Rule::clear_dst_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dst_port_ = 0u;
}
inline ::uint32_t ACLArg_Rule::dst_port() const {
  // @@protoc_insertion_point(field_get:bess.pb.ACLArg.Rule.dst_port)
  return _internal_dst_port();
}
inline void ACLArg_Rule::set_dst_port(::uint32_t value) {
  _internal_set_dst_port(value);
  // @@protoc_insertion_point(field_set:bess.pb.ACLArg.Rule.dst_port)
}
inline ::uint32_t ACLArg_Rule::_internal_dst_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dst_port_;
}
inline void ACLArg_Rule::_internal_set_dst_port(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dst_port_ = value;
}

// bool established = 5;
inline void ACLArg_Rule::clear_established() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.established_ = false;
}
inline bool ACLArg_Rule::established() const {
  // @@protoc_insertion_point(field_get:bess.pb.ACLArg.Rule.established)
  return _internal_established();
}
inline void ACLArg_Rule::set_established(bool value) {
  _internal_set_established(value);
  // @@protoc_insertion_point(field_set:bess.pb.ACLArg.Rule.established)
}
inline bool ACLArg_Rule::_internal_established() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.established_;
}
inline void ACLArg_Rule::_internal_set_established(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.established_ = value;
}

// bool drop = 6;
inline void ACLArg_Rule::clear_drop() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.drop_ = false;
}
inline bool ACLArg_Rule::drop() const {
  // @@protoc_insertion_point(field_get:bess.pb.ACLArg.Rule.drop)
  return _internal_drop();
}
inline void ACLArg_Rule::set_drop(bool value) {
  _internal_set_drop(value);
  // @@protoc_insertion_point(field_set:bess.pb.ACLArg.Rule.drop)
}
inline bool ACLArg_Rule::_internal_drop() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.drop_;
}
inline void ACLArg_Rule::_internal_set_drop(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.drop_ = value;
}

// -------------------------------------------------------------------

// ACLArg

// repeated .bess.pb.ACLArg.Rule rules = 1;
inline int ACLArg::_internal_rules_size() const {
  return _internal_rules().size();
}
inline int ACLArg::rules_size() const {
  return _internal_rules_size();
}
inline void ACLArg::clear_rules() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rules_.Clear();
}
inline ::bess::pb::ACLArg_Rule* ACLArg::mutable_rules(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.ACLArg.rules)
  return _internal_mutable_rules()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::ACLArg_Rule>* ACLArg::mutable_rules()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ACLArg.rules)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_rules();
}
inline const ::bess::pb::ACLArg_Rule& ACLArg::rules(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.ACLArg.rules)
  return _internal_rules().Get(index);
}
inline ::bess::pb::ACLArg_Rule* ACLArg::add_rules() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::ACLArg_Rule* _add = _internal_mutable_rules()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.ACLArg.rules)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::ACLArg_Rule>& ACLArg::rules() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.ACLArg.rules)
  return _internal_rules();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::ACLArg_Rule>&
ACLArg::_internal_rules() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rules_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::ACLArg_Rule>*
ACLArg::_internal_mutable_rules() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.rules_;
}

// -------------------------------------------------------------------

// BPFArg_Filter

// int64 priority = 1;
inline void BPFArg_Filter::clear_priority() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.priority_ = ::int64_t{0};
}
inline ::int64_t BPFArg_Filter::priority() const {
  // @@protoc_insertion_point(field_get:bess.pb.BPFArg.Filter.priority)
  return _internal_priority();
}
inline void BPFArg_Filter::set_priority(::int64_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:bess.pb.BPFArg.Filter.priority)
}
inline ::int64_t BPFArg_Filter::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void BPFArg_Filter::_internal_set_priority(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// string filter = 2;
inline void BPFArg_Filter::clear_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.filter_.ClearToEmpty();
}
inline const std::string& BPFArg_Filter::filter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.BPFArg.Filter.filter)
  return _internal_filter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BPFArg_Filter::set_filter(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.filter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.BPFArg.Filter.filter)
}
inline std::string* BPFArg_Filter::mutable_filter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filter();
  // @@protoc_insertion_point(field_mutable:bess.pb.BPFArg.Filter.filter)
  return _s;
}
inline const std::string& BPFArg_Filter::_internal_filter() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.filter_.Get();
}
inline void BPFArg_Filter::_internal_set_filter(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.filter_.Set(value, GetArena());
}
inline std::string* BPFArg_Filter::_internal_mutable_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.filter_.Mutable( GetArena());
}
inline std::string* BPFArg_Filter::release_filter() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.BPFArg.Filter.filter)
  return _impl_.filter_.Release();
}
inline void BPFArg_Filter::set_allocated_filter(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.filter_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.filter_.IsDefault()) {
          _impl_.filter_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.BPFArg.Filter.filter)
}

// int64 gate = 3;
inline void BPFArg_Filter::clear_gate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gate_ = ::int64_t{0};
}
inline ::int64_t BPFArg_Filter::gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.BPFArg.Filter.gate)
  return _internal_gate();
}
inline void BPFArg_Filter::set_gate(::int64_t value) {
  _internal_set_gate(value);
  // @@protoc_insertion_point(field_set:bess.pb.BPFArg.Filter.gate)
}
inline ::int64_t BPFArg_Filter::_internal_gate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gate_;
}
inline void BPFArg_Filter::_internal_set_gate(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gate_ = value;
}

// -------------------------------------------------------------------

// BPFArg

// repeated .bess.pb.BPFArg.Filter filters = 1;
inline int BPFArg::_internal_filters_size() const {
  return _internal_filters().size();
}
inline int BPFArg::filters_size() const {
  return _internal_filters_size();
}
inline void BPFArg::clear_filters() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.filters_.Clear();
}
inline ::bess::pb::BPFArg_Filter* BPFArg::mutable_filters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.BPFArg.filters)
  return _internal_mutable_filters()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::BPFArg_Filter>* BPFArg::mutable_filters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.BPFArg.filters)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_filters();
}
inline const ::bess::pb::BPFArg_Filter& BPFArg::filters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.BPFArg.filters)
  return _internal_filters().Get(index);
}
inline ::bess::pb::BPFArg_Filter* BPFArg::add_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::BPFArg_Filter* _add = _internal_mutable_filters()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.BPFArg.filters)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::BPFArg_Filter>& BPFArg::filters() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.BPFArg.filters)
  return _internal_filters();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::BPFArg_Filter>&
BPFArg::_internal_filters() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.filters_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::BPFArg_Filter>*
BPFArg::_internal_mutable_filters() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.filters_;
}

// -------------------------------------------------------------------

// BufferArg

// -------------------------------------------------------------------

// BypassArg

// uint32 cycles_per_batch = 1;
inline void BypassArg::clear_cycles_per_batch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cycles_per_batch_ = 0u;
}
inline ::uint32_t BypassArg::cycles_per_batch() const {
  // @@protoc_insertion_point(field_get:bess.pb.BypassArg.cycles_per_batch)
  return _internal_cycles_per_batch();
}
inline void BypassArg::set_cycles_per_batch(::uint32_t value) {
  _internal_set_cycles_per_batch(value);
  // @@protoc_insertion_point(field_set:bess.pb.BypassArg.cycles_per_batch)
}
inline ::uint32_t BypassArg::_internal_cycles_per_batch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cycles_per_batch_;
}
inline void BypassArg::_internal_set_cycles_per_batch(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cycles_per_batch_ = value;
}

// uint32 cycles_per_packet = 2;
inline void BypassArg::clear_cycles_per_packet() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cycles_per_packet_ = 0u;
}
inline ::uint32_t BypassArg::cycles_per_packet() const {
  // @@protoc_insertion_point(field_get:bess.pb.BypassArg.cycles_per_packet)
  return _internal_cycles_per_packet();
}
inline void BypassArg::set_cycles_per_packet(::uint32_t value) {
  _internal_set_cycles_per_packet(value);
  // @@protoc_insertion_point(field_set:bess.pb.BypassArg.cycles_per_packet)
}
inline ::uint32_t BypassArg::_internal_cycles_per_packet() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cycles_per_packet_;
}
inline void BypassArg::_internal_set_cycles_per_packet(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cycles_per_packet_ = value;
}

// uint32 cycles_per_byte = 3;
inline void BypassArg::clear_cycles_per_byte() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cycles_per_byte_ = 0u;
}
inline ::uint32_t BypassArg::cycles_per_byte() const {
  // @@protoc_insertion_point(field_get:bess.pb.BypassArg.cycles_per_byte)
  return _internal_cycles_per_byte();
}
inline void BypassArg::set_cycles_per_byte(::uint32_t value) {
  _internal_set_cycles_per_byte(value);
  // @@protoc_insertion_point(field_set:bess.pb.BypassArg.cycles_per_byte)
}
inline ::uint32_t BypassArg::_internal_cycles_per_byte() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cycles_per_byte_;
}
inline void BypassArg::_internal_set_cycles_per_byte(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cycles_per_byte_ = value;
}

// -------------------------------------------------------------------

// DumpArg

// double interval = 1;
inline void DumpArg::clear_interval() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.interval_ = 0;
}
inline double DumpArg::interval() const {
  // @@protoc_insertion_point(field_get:bess.pb.DumpArg.interval)
  return _internal_interval();
}
inline void DumpArg::set_interval(double value) {
  _internal_set_interval(value);
  // @@protoc_insertion_point(field_set:bess.pb.DumpArg.interval)
}
inline double DumpArg::_internal_interval() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.interval_;
}
inline void DumpArg::_internal_set_interval(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.interval_ = value;
}

// -------------------------------------------------------------------

// EtherEncapArg

// -------------------------------------------------------------------

// ExactMatchArg

// repeated .bess.pb.Field fields = 1;
inline int ExactMatchArg::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int ExactMatchArg::fields_size() const {
  return _internal_fields_size();
}
inline ::bess::pb::Field* ExactMatchArg::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.ExactMatchArg.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::Field>* ExactMatchArg::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ExactMatchArg.fields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_fields();
}
inline const ::bess::pb::Field& ExactMatchArg::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.ExactMatchArg.fields)
  return _internal_fields().Get(index);
}
inline ::bess::pb::Field* ExactMatchArg::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::Field* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.ExactMatchArg.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>& ExactMatchArg::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.ExactMatchArg.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>&
ExactMatchArg::_internal_fields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::Field>*
ExactMatchArg::_internal_mutable_fields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.fields_;
}

// repeated .bess.pb.FieldData masks = 2;
inline int ExactMatchArg::_internal_masks_size() const {
  return _internal_masks().size();
}
inline int ExactMatchArg::masks_size() const {
  return _internal_masks_size();
}
inline ::bess::pb::FieldData* ExactMatchArg::mutable_masks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.ExactMatchArg.masks)
  return _internal_mutable_masks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>* ExactMatchArg::mutable_masks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ExactMatchArg.masks)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_masks();
}
inline const ::bess::pb::FieldData& ExactMatchArg::masks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.ExactMatchArg.masks)
  return _internal_masks().Get(index);
}
inline ::bess::pb::FieldData* ExactMatchArg::add_masks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::FieldData* _add = _internal_mutable_masks()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.ExactMatchArg.masks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>& ExactMatchArg::masks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.ExactMatchArg.masks)
  return _internal_masks();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>&
ExactMatchArg::_internal_masks() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.masks_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::FieldData>*
ExactMatchArg::_internal_mutable_masks() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.masks_;
}

// -------------------------------------------------------------------

// ExactMatchConfig

// uint64 default_gate = 1;
inline void ExactMatchConfig::clear_default_gate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.default_gate_ = ::uint64_t{0u};
}
inline ::uint64_t ExactMatchConfig::default_gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.ExactMatchConfig.default_gate)
  return _internal_default_gate();
}
inline void ExactMatchConfig::set_default_gate(::uint64_t value) {
  _internal_set_default_gate(value);
  // @@protoc_insertion_point(field_set:bess.pb.ExactMatchConfig.default_gate)
}
inline ::uint64_t ExactMatchConfig::_internal_default_gate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.default_gate_;
}
inline void ExactMatchConfig::_internal_set_default_gate(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_gate_ = value;
}

// repeated .bess.pb.ExactMatchCommandAddArg rules = 2;
inline int ExactMatchConfig::_internal_rules_size() const {
  return _internal_rules().size();
}
inline int ExactMatchConfig::rules_size() const {
  return _internal_rules_size();
}
inline void ExactMatchConfig::clear_rules() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rules_.Clear();
}
inline ::bess::pb::ExactMatchCommandAddArg* ExactMatchConfig::mutable_rules(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.ExactMatchConfig.rules)
  return _internal_mutable_rules()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::ExactMatchCommandAddArg>* ExactMatchConfig::mutable_rules()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ExactMatchConfig.rules)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_rules();
}
inline const ::bess::pb::ExactMatchCommandAddArg& ExactMatchConfig::rules(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.ExactMatchConfig.rules)
  return _internal_rules().Get(index);
}
inline ::bess::pb::ExactMatchCommandAddArg* ExactMatchConfig::add_rules() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::ExactMatchCommandAddArg* _add = _internal_mutable_rules()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.ExactMatchConfig.rules)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::ExactMatchCommandAddArg>& ExactMatchConfig::rules() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.ExactMatchConfig.rules)
  return _internal_rules();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::ExactMatchCommandAddArg>&
ExactMatchConfig::_internal_rules() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rules_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::ExactMatchCommandAddArg>*
ExactMatchConfig::_internal_mutable_rules() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.rules_;
}

// -------------------------------------------------------------------

// FlowGenArg

// bytes template = 1;
inline void FlowGenArg::clear_template_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.template__.ClearToEmpty();
}
inline const std::string& FlowGenArg::template_() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.template)
  return _internal_template_();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowGenArg::set_template_(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.template__.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.template)
}
inline std::string* FlowGenArg::mutable_template_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_template_();
  // @@protoc_insertion_point(field_mutable:bess.pb.FlowGenArg.template)
  return _s;
}
inline const std::string& FlowGenArg::_internal_template_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.template__.Get();
}
inline void FlowGenArg::_internal_set_template_(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.template__.Set(value, GetArena());
}
inline std::string* FlowGenArg::_internal_mutable_template_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.template__.Mutable( GetArena());
}
inline std::string* FlowGenArg::release_template_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.FlowGenArg.template)
  return _impl_.template__.Release();
}
inline void FlowGenArg::set_allocated_template_(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.template__.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.template__.IsDefault()) {
          _impl_.template__.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.FlowGenArg.template)
}

// double pps = 2;
inline void FlowGenArg::clear_pps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pps_ = 0;
}
inline double FlowGenArg::pps() const {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.pps)
  return _internal_pps();
}
inline void FlowGenArg::set_pps(double value) {
  _internal_set_pps(value);
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.pps)
}
inline double FlowGenArg::_internal_pps() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pps_;
}
inline void FlowGenArg::_internal_set_pps(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pps_ = value;
}

// double flow_rate = 3;
inline void FlowGenArg::clear_flow_rate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flow_rate_ = 0;
}
inline double FlowGenArg::flow_rate() const {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.flow_rate)
  return _internal_flow_rate();
}
inline void FlowGenArg::set_flow_rate(double value) {
  _internal_set_flow_rate(value);
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.flow_rate)
}
inline double FlowGenArg::_internal_flow_rate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flow_rate_;
}
inline void FlowGenArg::_internal_set_flow_rate(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flow_rate_ = value;
}

// double flow_duration = 4;
inline void FlowGenArg::clear_flow_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flow_duration_ = 0;
}
inline double FlowGenArg::flow_duration() const {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.flow_duration)
  return _internal_flow_duration();
}
inline void FlowGenArg::set_flow_duration(double value) {
  _internal_set_flow_duration(value);
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.flow_duration)
}
inline double FlowGenArg::_internal_flow_duration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flow_duration_;
}
inline void FlowGenArg::_internal_set_flow_duration(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flow_duration_ = value;
}

// string arrival = 5;
inline void FlowGenArg::clear_arrival() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arrival_.ClearToEmpty();
}
inline const std::string& FlowGenArg::arrival() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.arrival)
  return _internal_arrival();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowGenArg::set_arrival(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.arrival_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.arrival)
}
inline std::string* FlowGenArg::mutable_arrival() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_arrival();
  // @@protoc_insertion_point(field_mutable:bess.pb.FlowGenArg.arrival)
  return _s;
}
inline const std::string& FlowGenArg::_internal_arrival() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.arrival_.Get();
}
inline void FlowGenArg::_internal_set_arrival(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.arrival_.Set(value, GetArena());
}
inline std::string* FlowGenArg::_internal_mutable_arrival() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.arrival_.Mutable( GetArena());
}
inline std::string* FlowGenArg::release_arrival() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.FlowGenArg.arrival)
  return _impl_.arrival_.Release();
}
inline void FlowGenArg::set_allocated_arrival(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arrival_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.arrival_.IsDefault()) {
          _impl_.arrival_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.FlowGenArg.arrival)
}

// string duration = 6;
inline void FlowGenArg::clear_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.duration_.ClearToEmpty();
}
inline const std::string& FlowGenArg::duration() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.duration)
  return _internal_duration();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowGenArg::set_duration(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.duration_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.duration)
}
inline std::string* FlowGenArg::mutable_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_duration();
  // @@protoc_insertion_point(field_mutable:bess.pb.FlowGenArg.duration)
  return _s;
}
inline const std::string& FlowGenArg::_internal_duration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.duration_.Get();
}
inline void FlowGenArg::_internal_set_duration(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.duration_.Set(value, GetArena());
}
inline std::string* FlowGenArg::_internal_mutable_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.duration_.Mutable( GetArena());
}
inline std::string* FlowGenArg::release_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.FlowGenArg.duration)
  return _impl_.duration_.Release();
}
inline void FlowGenArg::set_allocated_duration(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.duration_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.duration_.IsDefault()) {
          _impl_.duration_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.FlowGenArg.duration)
}

// bool quick_rampup = 7;
inline void FlowGenArg::clear_quick_rampup() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.quick_rampup_ = false;
}
inline bool FlowGenArg::quick_rampup() const {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.quick_rampup)
  return _internal_quick_rampup();
}
inline void FlowGenArg::set_quick_rampup(bool value) {
  _internal_set_quick_rampup(value);
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.quick_rampup)
}
inline bool FlowGenArg::_internal_quick_rampup() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.quick_rampup_;
}
inline void FlowGenArg::_internal_set_quick_rampup(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.quick_rampup_ = value;
}

// uint32 ip_src_range = 8;
inline void FlowGenArg::clear_ip_src_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_src_range_ = 0u;
}
inline ::uint32_t FlowGenArg::ip_src_range() const {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.ip_src_range)
  return _internal_ip_src_range();
}
inline void FlowGenArg::set_ip_src_range(::uint32_t value) {
  _internal_set_ip_src_range(value);
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.ip_src_range)
}
inline ::uint32_t FlowGenArg::_internal_ip_src_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_src_range_;
}
inline void FlowGenArg::_internal_set_ip_src_range(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_src_range_ = value;
}

// uint32 ip_dst_range = 9;
inline void FlowGenArg::clear_ip_dst_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_dst_range_ = 0u;
}
inline ::uint32_t FlowGenArg::ip_dst_range() const {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.ip_dst_range)
  return _internal_ip_dst_range();
}
inline void FlowGenArg::set_ip_dst_range(::uint32_t value) {
  _internal_set_ip_dst_range(value);
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.ip_dst_range)
}
inline ::uint32_t FlowGenArg::_internal_ip_dst_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_dst_range_;
}
inline void FlowGenArg::_internal_set_ip_dst_range(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_dst_range_ = value;
}

// uint32 port_src_range = 10;
inline void FlowGenArg::clear_port_src_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_src_range_ = 0u;
}
inline ::uint32_t FlowGenArg::port_src_range() const {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.port_src_range)
  return _internal_port_src_range();
}
inline void FlowGenArg::set_port_src_range(::uint32_t value) {
  _internal_set_port_src_range(value);
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.port_src_range)
}
inline ::uint32_t FlowGenArg::_internal_port_src_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_src_range_;
}
inline void FlowGenArg::_internal_set_port_src_range(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_src_range_ = value;
}

// uint32 port_dst_range = 11;
inline void FlowGenArg::clear_port_dst_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_dst_range_ = 0u;
}
inline ::uint32_t FlowGenArg::port_dst_range() const {
  // @@protoc_insertion_point(field_get:bess.pb.FlowGenArg.port_dst_range)
  return _internal_port_dst_range();
}
inline void FlowGenArg::set_port_dst_range(::uint32_t value) {
  _internal_set_port_dst_range(value);
  // @@protoc_insertion_point(field_set:bess.pb.FlowGenArg.port_dst_range)
}
inline ::uint32_t FlowGenArg::_internal_port_dst_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_dst_range_;
}
inline void FlowGenArg::_internal_set_port_dst_range(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_dst_range_ = value;
}

// -------------------------------------------------------------------

// GenericDecapArg

// uint64 bytes = 1;
inline void GenericDecapArg::clear_bytes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bytes_ = ::uint64_t{0u};
}
inline ::uint64_t GenericDecapArg::bytes() const {
  // @@protoc_insertion_point(field_get:bess.pb.GenericDecapArg.bytes)
  return _internal_bytes();
}
inline void GenericDecapArg::set_bytes(::uint64_t value) {
  _internal_set_bytes(value);
  // @@protoc_insertion_point(field_set:bess.pb.GenericDecapArg.bytes)
}
inline ::uint64_t GenericDecapArg::_internal_bytes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bytes_;
}
inline void GenericDecapArg::_internal_set_bytes(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bytes_ = value;
}

// -------------------------------------------------------------------

// GenericEncapArg_EncapField

// uint64 size = 1;
inline void GenericEncapArg_EncapField::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t GenericEncapArg_EncapField::size() const {
  // @@protoc_insertion_point(field_get:bess.pb.GenericEncapArg.EncapField.size)
  return _internal_size();
}
inline void GenericEncapArg_EncapField::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.GenericEncapArg.EncapField.size)
}
inline ::uint64_t GenericEncapArg_EncapField::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void GenericEncapArg_EncapField::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// string attribute = 2;
inline bool GenericEncapArg_EncapField::has_attribute() const {
  return insertion_case() == kAttribute;
}
inline void GenericEncapArg_EncapField::set_has_attribute() {
  _impl_._oneof_case_[0] = kAttribute;
}
inline void GenericEncapArg_EncapField::clear_attribute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (insertion_case() == kAttribute) {
    _impl_.insertion_.attribute_.Destroy();
    clear_has_insertion();
  }
}
inline const std::string& GenericEncapArg_EncapField::attribute() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.GenericEncapArg.EncapField.attribute)
  return _internal_attribute();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GenericEncapArg_EncapField::set_attribute(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (insertion_case() != kAttribute) {
    clear_insertion();

    set_has_attribute();
    _impl_.insertion_.attribute_.InitDefault();
  }
  _impl_.insertion_.attribute_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.GenericEncapArg.EncapField.attribute)
}
inline std::string* GenericEncapArg_EncapField::mutable_attribute() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attribute();
  // @@protoc_insertion_point(field_mutable:bess.pb.GenericEncapArg.EncapField.attribute)
  return _s;
}
inline const std::string& GenericEncapArg_EncapField::_internal_attribute() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (insertion_case() != kAttribute) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.insertion_.attribute_.Get();
}
inline void GenericEncapArg_EncapField::_internal_set_attribute(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (insertion_case() != kAttribute) {
    clear_insertion();

    set_has_attribute();
    _impl_.insertion_.attribute_.InitDefault();
  }
  _impl_.insertion_.attribute_.Set(value, GetArena());
}
inline std::string* GenericEncapArg_EncapField::_internal_mutable_attribute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (insertion_case() != kAttribute) {
    clear_insertion();

    set_has_attribute();
    _impl_.insertion_.attribute_.InitDefault();
  }
  return _impl_.insertion_.attribute_.Mutable( GetArena());
}
inline std::string* GenericEncapArg_EncapField::release_attribute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.GenericEncapArg.EncapField.attribute)
  if (insertion_case() != kAttribute) {
    return nullptr;
  }
  clear_has_insertion();
  return _impl_.insertion_.attribute_.Release();
}
inline void GenericEncapArg_EncapField::set_allocated_attribute(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_insertion()) {
    clear_insertion();
  }
  if (value != nullptr) {
    set_has_attribute();
    _impl_.insertion_.attribute_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.GenericEncapArg.EncapField.attribute)
}

// .bess.pb.FieldData value = 3;
inline bool GenericEncapArg_EncapField::has_value() const {
  return insertion_case() == kValue;
}
inline bool GenericEncapArg_EncapField::_internal_has_value() const {
  return insertion_case() == kValue;
}
inline void GenericEncapArg_EncapField::set_has_value() {
  _impl_._oneof_case_[0] = kValue;
}
inline ::bess::pb::FieldData* GenericEncapArg_EncapField::release_value() {
  // @@protoc_insertion_point(field_release:bess.pb.GenericEncapArg.EncapField.value)
  if (insertion_case() == kValue) {
    clear_has_insertion();
    auto* temp = _impl_.insertion_.value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.insertion_.value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bess::pb::FieldData& GenericEncapArg_EncapField::_internal_value() const {
  return insertion_case() == kValue ? *_impl_.insertion_.value_ : reinterpret_cast<::bess::pb::FieldData&>(::bess::pb::_FieldData_default_instance_);
}
inline const ::bess::pb::FieldData& GenericEncapArg_EncapField::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.GenericEncapArg.EncapField.value)
  return _internal_value();
}
inline ::bess::pb::FieldData* GenericEncapArg_EncapField::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:bess.pb.GenericEncapArg.EncapField.value)
  if (insertion_case() == kValue) {
    clear_has_insertion();
    auto* temp = _impl_.insertion_.value_;
    _impl_.insertion_.value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GenericEncapArg_EncapField::unsafe_arena_set_allocated_value(::bess::pb::FieldData* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_insertion();
  if (value) {
    set_has_value();
    _impl_.insertion_.value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:bess.pb.GenericEncapArg.EncapField.value)
}
inline ::bess::pb::FieldData* GenericEncapArg_EncapField::_internal_mutable_value() {
  if (insertion_case() != kValue) {
    clear_insertion();
    set_has_value();
    _impl_.insertion_.value_ = CreateMaybeMessage<::bess::pb::FieldData>(GetArena());
  }
  return _impl_.insertion_.value_;
}
inline ::bess::pb::FieldData* GenericEncapArg_EncapField::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::bess::pb::FieldData* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:bess.pb.GenericEncapArg.EncapField.value)
  return _msg;
}

inline bool GenericEncapArg_EncapField::has_insertion() const {
  return insertion_case() != INSERTION_NOT_SET;
}
inline void GenericEncapArg_EncapField::clear_has_insertion() {
  _impl_._oneof_case_[0] = INSERTION_NOT_SET;
}
inline GenericEncapArg_EncapField::InsertionCase GenericEncapArg_EncapField::insertion_case() const {
  return GenericEncapArg_EncapField::InsertionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// GenericEncapArg

// repeated .bess.pb.GenericEncapArg.EncapField fields = 1;
inline int GenericEncapArg::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int GenericEncapArg::fields_size() const {
  return _internal_fields_size();
}
inline void GenericEncapArg::clear_fields() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fields_.Clear();
}
inline ::bess::pb::GenericEncapArg_EncapField* GenericEncapArg::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.GenericEncapArg.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::GenericEncapArg_EncapField>* GenericEncapArg::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.GenericEncapArg.fields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_fields();
}
inline const ::bess::pb::GenericEncapArg_EncapField& GenericEncapArg::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.GenericEncapArg.fields)
  return _internal_fields().Get(index);
}
inline ::bess::pb::GenericEncapArg_EncapField* GenericEncapArg::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::GenericEncapArg_EncapField* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.GenericEncapArg.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::GenericEncapArg_EncapField>& GenericEncapArg::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.GenericEncapArg.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::GenericEncapArg_EncapField>&
GenericEncapArg::_internal_fields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::GenericEncapArg_EncapField>*
GenericEncapArg::_internal_mutable_fields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.fields_;
}

// -------------------------------------------------------------------

// HashLBArg

// repeated int64 gates = 1;
inline int HashLBArg::_internal_gates_size() const {
  return _internal_gates().size();
}
inline int HashLBArg::gates_size() const {
  return _internal_gates_size();
}
inline void HashLBArg::clear_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gates_.Clear();
}
inline ::int64_t HashLBArg::gates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.HashLBArg.gates)
  return _internal_gates().Get(index);
}
inline void HashLBArg::set_gates(int index, ::int64_t value) {
  _internal_mutable_gates()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.HashLBArg.gates)
}
inline void HashLBArg::add_gates(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gates()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.HashLBArg.gates)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& HashLBArg::gates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.HashLBArg.gates)
  return _internal_gates();
}
inline ::google::protobuf::RepeatedField<::int64_t>* HashLBArg::mutable_gates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.HashLBArg.gates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gates();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& HashLBArg::_internal_gates()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gates_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* HashLBArg::_internal_mutable_gates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gates_;
}

// string mode = 2;
inline void HashLBArg::clear_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_.ClearToEmpty();
}
inline const std::string& HashLBArg::mode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.HashLBArg.mode)
  return _internal_mode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HashLBArg::set_mode(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.HashLBArg.mode)
}
inline std::string* HashLBArg::mutable_mode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mode();
  // @@protoc_insertion_point(field_mutable:bess.pb.HashLBArg.mode)
  return _s;
}
inline const std::string& HashLBArg::_internal_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mode_.Get();
}
inline void HashLBArg::_internal_set_mode(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_.Set(value, GetArena());
}
inline std::string* HashLBArg::_internal_mutable_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mode_.Mutable( GetArena());
}
inline std::string* HashLBArg::release_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.HashLBArg.mode)
  return _impl_.mode_.Release();
}
inline void HashLBArg::set_allocated_mode(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mode_.IsDefault()) {
          _impl_.mode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.HashLBArg.mode)
}

// repeated .bess.pb.Field fields = 3;
inline int HashLBArg::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int HashLBArg::fields_size() const {
  return _internal_fields_size();
}
inline ::bess::pb::Field* HashLBArg::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.HashLBArg.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::Field>* HashLBArg::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.HashLBArg.fields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_fields();
}
inline const ::bess::pb::Field& HashLBArg::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.HashLBArg.fields)
  return _internal_fields().Get(index);
}
inline ::bess::pb::Field* HashLBArg::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::Field* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.HashLBArg.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>& HashLBArg::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.HashLBArg.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>&
HashLBArg::_internal_fields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::Field>*
HashLBArg::_internal_mutable_fields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.fields_;
}

// -------------------------------------------------------------------

// IPEncapArg

// -------------------------------------------------------------------

// IPLookupArg

// uint32 max_rules = 1;
inline void IPLookupArg::clear_max_rules() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_rules_ = 0u;
}
inline ::uint32_t IPLookupArg::max_rules() const {
  // @@protoc_insertion_point(field_get:bess.pb.IPLookupArg.max_rules)
  return _internal_max_rules();
}
inline void IPLookupArg::set_max_rules(::uint32_t value) {
  _internal_set_max_rules(value);
  // @@protoc_insertion_point(field_set:bess.pb.IPLookupArg.max_rules)
}
inline ::uint32_t IPLookupArg::_internal_max_rules() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_rules_;
}
inline void IPLookupArg::_internal_set_max_rules(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_rules_ = value;
}

// uint32 max_tbl8s = 2;
inline void IPLookupArg::clear_max_tbl8s() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_tbl8s_ = 0u;
}
inline ::uint32_t IPLookupArg::max_tbl8s() const {
  // @@protoc_insertion_point(field_get:bess.pb.IPLookupArg.max_tbl8s)
  return _internal_max_tbl8s();
}
inline void IPLookupArg::set_max_tbl8s(::uint32_t value) {
  _internal_set_max_tbl8s(value);
  // @@protoc_insertion_point(field_set:bess.pb.IPLookupArg.max_tbl8s)
}
inline ::uint32_t IPLookupArg::_internal_max_tbl8s() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_tbl8s_;
}
inline void IPLookupArg::_internal_set_max_tbl8s(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_tbl8s_ = value;
}

// -------------------------------------------------------------------

// L2ForwardArg

// int64 size = 1;
inline void L2ForwardArg::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::int64_t{0};
}
inline ::int64_t L2ForwardArg::size() const {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardArg.size)
  return _internal_size();
}
inline void L2ForwardArg::set_size(::int64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardArg.size)
}
inline ::int64_t L2ForwardArg::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void L2ForwardArg::_internal_set_size(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// int64 bucket = 2;
inline void L2ForwardArg::clear_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bucket_ = ::int64_t{0};
}
inline ::int64_t L2ForwardArg::bucket() const {
  // @@protoc_insertion_point(field_get:bess.pb.L2ForwardArg.bucket)
  return _internal_bucket();
}
inline void L2ForwardArg::set_bucket(::int64_t value) {
  _internal_set_bucket(value);
  // @@protoc_insertion_point(field_set:bess.pb.L2ForwardArg.bucket)
}
inline ::int64_t L2ForwardArg::_internal_bucket() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bucket_;
}
inline void L2ForwardArg::_internal_set_bucket(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bucket_ = value;
}

// -------------------------------------------------------------------

// MACSwapArg

// -------------------------------------------------------------------

// MeasureArg

// uint64 offset = 2;
inline bool MeasureArg::has_offset() const {
  return type_case() == kOffset;
}
inline void MeasureArg::set_has_offset() {
  _impl_._oneof_case_[0] = kOffset;
}
inline void MeasureArg::clear_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() == kOffset) {
    _impl_.type_.offset_ = ::uint64_t{0u};
    clear_has_type();
  }
}
inline ::uint64_t MeasureArg::offset() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureArg.offset)
  return _internal_offset();
}
inline void MeasureArg::set_offset(::uint64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureArg.offset)
}
inline ::uint64_t MeasureArg::_internal_offset() const {
  if (type_case() == kOffset) {
    return _impl_.type_.offset_;
  }
  return ::uint64_t{0u};
}
inline void MeasureArg::_internal_set_offset(::uint64_t value) {
  if (type_case() != kOffset) {
    clear_type();
    set_has_offset();
  }
  _impl_.type_.offset_ = value;
}

// string attr_name = 6;
inline bool MeasureArg::has_attr_name() const {
  return type_case() == kAttrName;
}
inline void MeasureArg::set_has_attr_name() {
  _impl_._oneof_case_[0] = kAttrName;
}
inline void MeasureArg::clear_attr_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() == kAttrName) {
    _impl_.type_.attr_name_.Destroy();
    clear_has_type();
  }
}
inline const std::string& MeasureArg::attr_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureArg.attr_name)
  return _internal_attr_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MeasureArg::set_attr_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() != kAttrName) {
    clear_type();

    set_has_attr_name();
    _impl_.type_.attr_name_.InitDefault();
  }
  _impl_.type_.attr_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.MeasureArg.attr_name)
}
inline std::string* MeasureArg::mutable_attr_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attr_name();
  // @@protoc_insertion_point(field_mutable:bess.pb.MeasureArg.attr_name)
  return _s;
}
inline const std::string& MeasureArg::_internal_attr_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (type_case() != kAttrName) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.type_.attr_name_.Get();
}
inline void MeasureArg::_internal_set_attr_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() != kAttrName) {
    clear_type();

    set_has_attr_name();
    _impl_.type_.attr_name_.InitDefault();
  }
  _impl_.type_.attr_name_.Set(value, GetArena());
}
inline std::string* MeasureArg::_internal_mutable_attr_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() != kAttrName) {
    clear_type();

    set_has_attr_name();
    _impl_.type_.attr_name_.InitDefault();
  }
  return _impl_.type_.attr_name_.Mutable( GetArena());
}
inline std::string* MeasureArg::release_attr_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.MeasureArg.attr_name)
  if (type_case() != kAttrName) {
    return nullptr;
  }
  clear_has_type();
  return _impl_.type_.attr_name_.Release();
}
inline void MeasureArg::set_allocated_attr_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_type()) {
    clear_type();
  }
  if (value != nullptr) {
    set_has_attr_name();
    _impl_.type_.attr_name_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.MeasureArg.attr_name)
}

// double jitter_sample_prob = 3;
inline void MeasureArg::clear_jitter_sample_prob() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.jitter_sample_prob_ = 0;
}
inline double MeasureArg::jitter_sample_prob() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureArg.jitter_sample_prob)
  return _internal_jitter_sample_prob();
}
inline void MeasureArg::set_jitter_sample_prob(double value) {
  _internal_set_jitter_sample_prob(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureArg.jitter_sample_prob)
}
inline double MeasureArg::_internal_jitter_sample_prob() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jitter_sample_prob_;
}
inline void MeasureArg::_internal_set_jitter_sample_prob(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.jitter_sample_prob_ = value;
}

// uint64 latency_ns_max = 4;
inline void MeasureArg::clear_latency_ns_max() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.latency_ns_max_ = ::uint64_t{0u};
}
inline ::uint64_t MeasureArg::latency_ns_max() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureArg.latency_ns_max)
  return _internal_latency_ns_max();
}
inline void MeasureArg::set_latency_ns_max(::uint64_t value) {
  _internal_set_latency_ns_max(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureArg.latency_ns_max)
}
inline ::uint64_t MeasureArg::_internal_latency_ns_max() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.latency_ns_max_;
}
inline void MeasureArg::_internal_set_latency_ns_max(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.latency_ns_max_ = value;
}

// uint32 latency_ns_resolution = 5;
inline void MeasureArg::clear_latency_ns_resolution() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.latency_ns_resolution_ = 0u;
}
inline ::uint32_t MeasureArg::latency_ns_resolution() const {
  // @@protoc_insertion_point(field_get:bess.pb.MeasureArg.latency_ns_resolution)
  return _internal_latency_ns_resolution();
}
inline void MeasureArg::set_latency_ns_resolution(::uint32_t value) {
  _internal_set_latency_ns_resolution(value);
  // @@protoc_insertion_point(field_set:bess.pb.MeasureArg.latency_ns_resolution)
}
inline ::uint32_t MeasureArg::_internal_latency_ns_resolution() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.latency_ns_resolution_;
}
inline void MeasureArg::_internal_set_latency_ns_resolution(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.latency_ns_resolution_ = value;
}

inline bool MeasureArg::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void MeasureArg::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline MeasureArg::TypeCase MeasureArg::type_case() const {
  return MeasureArg::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// MergeArg

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MetadataTestArg

// map<string, int64> read = 1;
inline int MetadataTestArg::_internal_read_size() const {
  return _internal_read().size();
}
inline int MetadataTestArg::read_size() const {
  return _internal_read_size();
}
inline void MetadataTestArg::clear_read() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.read_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& MetadataTestArg::_internal_read() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.read_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& MetadataTestArg::read() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:bess.pb.MetadataTestArg.read)
  return _internal_read();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* MetadataTestArg::_internal_mutable_read() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.read_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* MetadataTestArg::mutable_read() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:bess.pb.MetadataTestArg.read)
  return _internal_mutable_read();
}

// map<string, int64> write = 2;
inline int MetadataTestArg::_internal_write_size() const {
  return _internal_write().size();
}
inline int MetadataTestArg::write_size() const {
  return _internal_write_size();
}
inline void MetadataTestArg::clear_write() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.write_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& MetadataTestArg::_internal_write() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.write_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& MetadataTestArg::write() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:bess.pb.MetadataTestArg.write)
  return _internal_write();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* MetadataTestArg::_internal_mutable_write() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.write_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* MetadataTestArg::mutable_write() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:bess.pb.MetadataTestArg.write)
  return _internal_mutable_write();
}

// map<string, int64> update = 3;
inline int MetadataTestArg::_internal_update_size() const {
  return _internal_update().size();
}
inline int MetadataTestArg::update_size() const {
  return _internal_update_size();
}
inline void MetadataTestArg::clear_update() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.update_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& MetadataTestArg::_internal_update() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.update_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& MetadataTestArg::update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:bess.pb.MetadataTestArg.update)
  return _internal_update();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* MetadataTestArg::_internal_mutable_update() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.update_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* MetadataTestArg::mutable_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:bess.pb.MetadataTestArg.update)
  return _internal_mutable_update();
}

// -------------------------------------------------------------------

// NATArg_PortRange

// uint32 begin = 1;
inline void NATArg_PortRange::clear_begin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.begin_ = 0u;
}
inline ::uint32_t NATArg_PortRange::begin() const {
  // @@protoc_insertion_point(field_get:bess.pb.NATArg.PortRange.begin)
  return _internal_begin();
}
inline void NATArg_PortRange::set_begin(::uint32_t value) {
  _internal_set_begin(value);
  // @@protoc_insertion_point(field_set:bess.pb.NATArg.PortRange.begin)
}
inline ::uint32_t NATArg_PortRange::_internal_begin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.begin_;
}
inline void NATArg_PortRange::_internal_set_begin(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.begin_ = value;
}

// uint32 end = 2;
inline void NATArg_PortRange::clear_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.end_ = 0u;
}
inline ::uint32_t NATArg_PortRange::end() const {
  // @@protoc_insertion_point(field_get:bess.pb.NATArg.PortRange.end)
  return _internal_end();
}
inline void NATArg_PortRange::set_end(::uint32_t value) {
  _internal_set_end(value);
  // @@protoc_insertion_point(field_set:bess.pb.NATArg.PortRange.end)
}
inline ::uint32_t NATArg_PortRange::_internal_end() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_;
}
inline void NATArg_PortRange::_internal_set_end(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.end_ = value;
}

// bool suspended = 3;
inline void NATArg_PortRange::clear_suspended() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.suspended_ = false;
}
inline bool NATArg_PortRange::suspended() const {
  // @@protoc_insertion_point(field_get:bess.pb.NATArg.PortRange.suspended)
  return _internal_suspended();
}
inline void NATArg_PortRange::set_suspended(bool value) {
  _internal_set_suspended(value);
  // @@protoc_insertion_point(field_set:bess.pb.NATArg.PortRange.suspended)
}
inline bool NATArg_PortRange::_internal_suspended() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.suspended_;
}
inline void NATArg_PortRange::_internal_set_suspended(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.suspended_ = value;
}

// -------------------------------------------------------------------

// NATArg_ExternalAddress

// string ext_addr = 1;
inline void NATArg_ExternalAddress::clear_ext_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ext_addr_.ClearToEmpty();
}
inline const std::string& NATArg_ExternalAddress::ext_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.NATArg.ExternalAddress.ext_addr)
  return _internal_ext_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NATArg_ExternalAddress::set_ext_addr(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ext_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.NATArg.ExternalAddress.ext_addr)
}
inline std::string* NATArg_ExternalAddress::mutable_ext_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ext_addr();
  // @@protoc_insertion_point(field_mutable:bess.pb.NATArg.ExternalAddress.ext_addr)
  return _s;
}
inline const std::string& NATArg_ExternalAddress::_internal_ext_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ext_addr_.Get();
}
inline void NATArg_ExternalAddress::_internal_set_ext_addr(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ext_addr_.Set(value, GetArena());
}
inline std::string* NATArg_ExternalAddress::_internal_mutable_ext_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ext_addr_.Mutable( GetArena());
}
inline std::string* NATArg_ExternalAddress::release_ext_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.NATArg.ExternalAddress.ext_addr)
  return _impl_.ext_addr_.Release();
}
inline void NATArg_ExternalAddress::set_allocated_ext_addr(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ext_addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ext_addr_.IsDefault()) {
          _impl_.ext_addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.NATArg.ExternalAddress.ext_addr)
}

// repeated .bess.pb.NATArg.PortRange port_ranges = 2;
inline int NATArg_ExternalAddress::_internal_port_ranges_size() const {
  return _internal_port_ranges().size();
}
inline int NATArg_ExternalAddress::port_ranges_size() const {
  return _internal_port_ranges_size();
}
inline void NATArg_ExternalAddress::clear_port_ranges() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_ranges_.Clear();
}
inline ::bess::pb::NATArg_PortRange* NATArg_ExternalAddress::mutable_port_ranges(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.NATArg.ExternalAddress.port_ranges)
  return _internal_mutable_port_ranges()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_PortRange>* NATArg_ExternalAddress::mutable_port_ranges()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.NATArg.ExternalAddress.port_ranges)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_port_ranges();
}
inline const ::bess::pb::NATArg_PortRange& NATArg_ExternalAddress::port_ranges(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.NATArg.ExternalAddress.port_ranges)
  return _internal_port_ranges().Get(index);
}
inline ::bess::pb::NATArg_PortRange* NATArg_ExternalAddress::add_port_ranges() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::NATArg_PortRange* _add = _internal_mutable_port_ranges()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.NATArg.ExternalAddress.port_ranges)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_PortRange>& NATArg_ExternalAddress::port_ranges() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.NATArg.ExternalAddress.port_ranges)
  return _internal_port_ranges();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_PortRange>&
NATArg_ExternalAddress::_internal_port_ranges() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_ranges_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_PortRange>*
NATArg_ExternalAddress::_internal_mutable_port_ranges() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.port_ranges_;
}

// -------------------------------------------------------------------

// NATArg

// repeated .bess.pb.NATArg.ExternalAddress ext_addrs = 1;
inline int NATArg::_internal_ext_addrs_size() const {
  return _internal_ext_addrs().size();
}
inline int NATArg::ext_addrs_size() const {
  return _internal_ext_addrs_size();
}
inline void NATArg::clear_ext_addrs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ext_addrs_.Clear();
}
inline ::bess::pb::NATArg_ExternalAddress* NATArg::mutable_ext_addrs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.NATArg.ext_addrs)
  return _internal_mutable_ext_addrs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_ExternalAddress>* NATArg::mutable_ext_addrs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.NATArg.ext_addrs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ext_addrs();
}
inline const ::bess::pb::NATArg_ExternalAddress& NATArg::ext_addrs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.NATArg.ext_addrs)
  return _internal_ext_addrs().Get(index);
}
inline ::bess::pb::NATArg_ExternalAddress* NATArg::add_ext_addrs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::NATArg_ExternalAddress* _add = _internal_mutable_ext_addrs()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.NATArg.ext_addrs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_ExternalAddress>& NATArg::ext_addrs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.NATArg.ext_addrs)
  return _internal_ext_addrs();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_ExternalAddress>&
NATArg::_internal_ext_addrs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ext_addrs_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::NATArg_ExternalAddress>*
NATArg::_internal_mutable_ext_addrs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ext_addrs_;
}

// -------------------------------------------------------------------

// StaticNATArg_AddressRange

// string start = 1;
inline void StaticNATArg_AddressRange::clear_start() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_.ClearToEmpty();
}
inline const std::string& StaticNATArg_AddressRange::start() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.StaticNATArg.AddressRange.start)
  return _internal_start();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StaticNATArg_AddressRange::set_start(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.StaticNATArg.AddressRange.start)
}
inline std::string* StaticNATArg_AddressRange::mutable_start() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_start();
  // @@protoc_insertion_point(field_mutable:bess.pb.StaticNATArg.AddressRange.start)
  return _s;
}
inline const std::string& StaticNATArg_AddressRange::_internal_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_.Get();
}
inline void StaticNATArg_AddressRange::_internal_set_start(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_.Set(value, GetArena());
}
inline std::string* StaticNATArg_AddressRange::_internal_mutable_start() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.start_.Mutable( GetArena());
}
inline std::string* StaticNATArg_AddressRange::release_start() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.StaticNATArg.AddressRange.start)
  return _impl_.start_.Release();
}
inline void StaticNATArg_AddressRange::set_allocated_start(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.start_.IsDefault()) {
          _impl_.start_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.StaticNATArg.AddressRange.start)
}

// string end = 2;
inline void StaticNATArg_AddressRange::clear_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.end_.ClearToEmpty();
}
inline const std::string& StaticNATArg_AddressRange::end() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.StaticNATArg.AddressRange.end)
  return _internal_end();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StaticNATArg_AddressRange::set_end(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.end_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.StaticNATArg.AddressRange.end)
}
inline std::string* StaticNATArg_AddressRange::mutable_end() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_end();
  // @@protoc_insertion_point(field_mutable:bess.pb.StaticNATArg.AddressRange.end)
  return _s;
}
inline const std::string& StaticNATArg_AddressRange::_internal_end() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_.Get();
}
inline void StaticNATArg_AddressRange::_internal_set_end(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.end_.Set(value, GetArena());
}
inline std::string* StaticNATArg_AddressRange::_internal_mutable_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.end_.Mutable( GetArena());
}
inline std::string* StaticNATArg_AddressRange::release_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.StaticNATArg.AddressRange.end)
  return _impl_.end_.Release();
}
inline void StaticNATArg_AddressRange::set_allocated_end(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.end_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.end_.IsDefault()) {
          _impl_.end_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.StaticNATArg.AddressRange.end)
}

// -------------------------------------------------------------------

// StaticNATArg_AddressRangePair

// .bess.pb.StaticNATArg.AddressRange int_range = 1;
inline bool StaticNATArg_AddressRangePair::has_int_range() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.int_range_ != nullptr);
  return value;
}
inline void StaticNATArg_AddressRangePair::clear_int_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.int_range_ != nullptr) _impl_.int_range_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::bess::pb::StaticNATArg_AddressRange& StaticNATArg_AddressRangePair::_internal_int_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::bess::pb::StaticNATArg_AddressRange* p = _impl_.int_range_;
  return p != nullptr ? *p : reinterpret_cast<const ::bess::pb::StaticNATArg_AddressRange&>(::bess::pb::_StaticNATArg_AddressRange_default_instance_);
}
inline const ::bess::pb::StaticNATArg_AddressRange& StaticNATArg_AddressRangePair::int_range() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.StaticNATArg.AddressRangePair.int_range)
  return _internal_int_range();
}
inline void StaticNATArg_AddressRangePair::unsafe_arena_set_allocated_int_range(::bess::pb::StaticNATArg_AddressRange* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.int_range_);
  }
  _impl_.int_range_ = reinterpret_cast<::bess::pb::StaticNATArg_AddressRange*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:bess.pb.StaticNATArg.AddressRangePair.int_range)
}
inline ::bess::pb::StaticNATArg_AddressRange* StaticNATArg_AddressRangePair::release_int_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::bess::pb::StaticNATArg_AddressRange* released = _impl_.int_range_;
  _impl_.int_range_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::bess::pb::StaticNATArg_AddressRange* StaticNATArg_AddressRangePair::unsafe_arena_release_int_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.StaticNATArg.AddressRangePair.int_range)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::bess::pb::StaticNATArg_AddressRange* temp = _impl_.int_range_;
  _impl_.int_range_ = nullptr;
  return temp;
}
inline ::bess::pb::StaticNATArg_AddressRange* StaticNATArg_AddressRangePair::_internal_mutable_int_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.int_range_ == nullptr) {
    auto* p = CreateMaybeMessage<::bess::pb::StaticNATArg_AddressRange>(GetArena());
    _impl_.int_range_ = reinterpret_cast<::bess::pb::StaticNATArg_AddressRange*>(p);
  }
  return _impl_.int_range_;
}
inline ::bess::pb::StaticNATArg_AddressRange* StaticNATArg_AddressRangePair::mutable_int_range() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::bess::pb::StaticNATArg_AddressRange* _msg = _internal_mutable_int_range();
  // @@protoc_insertion_point(field_mutable:bess.pb.StaticNATArg.AddressRangePair.int_range)
  return _msg;
}
inline void StaticNATArg_AddressRangePair::set_allocated_int_range(::bess::pb::StaticNATArg_AddressRange* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::bess::pb::StaticNATArg_AddressRange*>(_impl_.int_range_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::bess::pb::StaticNATArg_AddressRange*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.int_range_ = reinterpret_cast<::bess::pb::StaticNATArg_AddressRange*>(value);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.StaticNATArg.AddressRangePair.int_range)
}

// .bess.pb.StaticNATArg.AddressRange ext_range = 2;
inline bool StaticNATArg_AddressRangePair::has_ext_range() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ext_range_ != nullptr);
  return value;
}
inline void StaticNATArg_AddressRangePair::clear_ext_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.ext_range_ != nullptr) _impl_.ext_range_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::bess::pb::StaticNATArg_AddressRange& StaticNATArg_AddressRangePair::_internal_ext_range() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::bess::pb::StaticNATArg_AddressRange* p = _impl_.ext_range_;
  return p != nullptr ? *p : reinterpret_cast<const ::bess::pb::StaticNATArg_AddressRange&>(::bess::pb::_StaticNATArg_AddressRange_default_instance_);
}
inline const ::bess::pb::StaticNATArg_AddressRange& StaticNATArg_AddressRangePair::ext_range() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.StaticNATArg.AddressRangePair.ext_range)
  return _internal_ext_range();
}
inline void StaticNATArg_AddressRangePair::unsafe_arena_set_allocated_ext_range(::bess::pb::StaticNATArg_AddressRange* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ext_range_);
  }
  _impl_.ext_range_ = reinterpret_cast<::bess::pb::StaticNATArg_AddressRange*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:bess.pb.StaticNATArg.AddressRangePair.ext_range)
}
inline ::bess::pb::StaticNATArg_AddressRange* StaticNATArg_AddressRangePair::release_ext_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::bess::pb::StaticNATArg_AddressRange* released = _impl_.ext_range_;
  _impl_.ext_range_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::bess::pb::StaticNATArg_AddressRange* StaticNATArg_AddressRangePair::unsafe_arena_release_ext_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.StaticNATArg.AddressRangePair.ext_range)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::bess::pb::StaticNATArg_AddressRange* temp = _impl_.ext_range_;
  _impl_.ext_range_ = nullptr;
  return temp;
}
inline ::bess::pb::StaticNATArg_AddressRange* StaticNATArg_AddressRangePair::_internal_mutable_ext_range() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.ext_range_ == nullptr) {
    auto* p = CreateMaybeMessage<::bess::pb::StaticNATArg_AddressRange>(GetArena());
    _impl_.ext_range_ = reinterpret_cast<::bess::pb::StaticNATArg_AddressRange*>(p);
  }
  return _impl_.ext_range_;
}
inline ::bess::pb::StaticNATArg_AddressRange* StaticNATArg_AddressRangePair::mutable_ext_range() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::bess::pb::StaticNATArg_AddressRange* _msg = _internal_mutable_ext_range();
  // @@protoc_insertion_point(field_mutable:bess.pb.StaticNATArg.AddressRangePair.ext_range)
  return _msg;
}
inline void StaticNATArg_AddressRangePair::set_allocated_ext_range(::bess::pb::StaticNATArg_AddressRange* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::bess::pb::StaticNATArg_AddressRange*>(_impl_.ext_range_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::bess::pb::StaticNATArg_AddressRange*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ext_range_ = reinterpret_cast<::bess::pb::StaticNATArg_AddressRange*>(value);
  // @@protoc_insertion_point(field_set_allocated:bess.pb.StaticNATArg.AddressRangePair.ext_range)
}

// -------------------------------------------------------------------

// StaticNATArg

// repeated .bess.pb.StaticNATArg.AddressRangePair pairs = 1;
inline int StaticNATArg::_internal_pairs_size() const {
  return _internal_pairs().size();
}
inline int StaticNATArg::pairs_size() const {
  return _internal_pairs_size();
}
inline void StaticNATArg::clear_pairs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pairs_.Clear();
}
inline ::bess::pb::StaticNATArg_AddressRangePair* StaticNATArg::mutable_pairs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.StaticNATArg.pairs)
  return _internal_mutable_pairs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::StaticNATArg_AddressRangePair>* StaticNATArg::mutable_pairs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.StaticNATArg.pairs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pairs();
}
inline const ::bess::pb::StaticNATArg_AddressRangePair& StaticNATArg::pairs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.StaticNATArg.pairs)
  return _internal_pairs().Get(index);
}
inline ::bess::pb::StaticNATArg_AddressRangePair* StaticNATArg::add_pairs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::StaticNATArg_AddressRangePair* _add = _internal_mutable_pairs()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.StaticNATArg.pairs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::StaticNATArg_AddressRangePair>& StaticNATArg::pairs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.StaticNATArg.pairs)
  return _internal_pairs();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::StaticNATArg_AddressRangePair>&
StaticNATArg::_internal_pairs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pairs_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::StaticNATArg_AddressRangePair>*
StaticNATArg::_internal_mutable_pairs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pairs_;
}

// -------------------------------------------------------------------

// NoOpArg

// -------------------------------------------------------------------

// PortIncArg

// string port = 1;
inline void PortIncArg::clear_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.ClearToEmpty();
}
inline const std::string& PortIncArg::port() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.PortIncArg.port)
  return _internal_port();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PortIncArg::set_port(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.PortIncArg.port)
}
inline std::string* PortIncArg::mutable_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_port();
  // @@protoc_insertion_point(field_mutable:bess.pb.PortIncArg.port)
  return _s;
}
inline const std::string& PortIncArg::_internal_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_.Get();
}
inline void PortIncArg::_internal_set_port(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_.Set(value, GetArena());
}
inline std::string* PortIncArg::_internal_mutable_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.port_.Mutable( GetArena());
}
inline std::string* PortIncArg::release_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.PortIncArg.port)
  return _impl_.port_.Release();
}
inline void PortIncArg::set_allocated_port(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.port_.IsDefault()) {
          _impl_.port_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.PortIncArg.port)
}

// bool prefetch = 2;
inline void PortIncArg::clear_prefetch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefetch_ = false;
}
inline bool PortIncArg::prefetch() const {
  // @@protoc_insertion_point(field_get:bess.pb.PortIncArg.prefetch)
  return _internal_prefetch();
}
inline void PortIncArg::set_prefetch(bool value) {
  _internal_set_prefetch(value);
  // @@protoc_insertion_point(field_set:bess.pb.PortIncArg.prefetch)
}
inline bool PortIncArg::_internal_prefetch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prefetch_;
}
inline void PortIncArg::_internal_set_prefetch(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefetch_ = value;
}

// -------------------------------------------------------------------

// PortOutArg

// string port = 1;
inline void PortOutArg::clear_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.ClearToEmpty();
}
inline const std::string& PortOutArg::port() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.PortOutArg.port)
  return _internal_port();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PortOutArg::set_port(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.PortOutArg.port)
}
inline std::string* PortOutArg::mutable_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_port();
  // @@protoc_insertion_point(field_mutable:bess.pb.PortOutArg.port)
  return _s;
}
inline const std::string& PortOutArg::_internal_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_.Get();
}
inline void PortOutArg::_internal_set_port(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_.Set(value, GetArena());
}
inline std::string* PortOutArg::_internal_mutable_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.port_.Mutable( GetArena());
}
inline std::string* PortOutArg::release_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.PortOutArg.port)
  return _impl_.port_.Release();
}
inline void PortOutArg::set_allocated_port(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.port_.IsDefault()) {
          _impl_.port_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.PortOutArg.port)
}

// -------------------------------------------------------------------

// QueueIncArg

// string port = 1;
inline void QueueIncArg::clear_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.ClearToEmpty();
}
inline const std::string& QueueIncArg::port() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.QueueIncArg.port)
  return _internal_port();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueueIncArg::set_port(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.QueueIncArg.port)
}
inline std::string* QueueIncArg::mutable_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_port();
  // @@protoc_insertion_point(field_mutable:bess.pb.QueueIncArg.port)
  return _s;
}
inline const std::string& QueueIncArg::_internal_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_.Get();
}
inline void QueueIncArg::_internal_set_port(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_.Set(value, GetArena());
}
inline std::string* QueueIncArg::_internal_mutable_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.port_.Mutable( GetArena());
}
inline std::string* QueueIncArg::release_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.QueueIncArg.port)
  return _impl_.port_.Release();
}
inline void QueueIncArg::set_allocated_port(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.port_.IsDefault()) {
          _impl_.port_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.QueueIncArg.port)
}

// uint64 qid = 2;
inline void QueueIncArg::clear_qid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.qid_ = ::uint64_t{0u};
}
inline ::uint64_t QueueIncArg::qid() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueIncArg.qid)
  return _internal_qid();
}
inline void QueueIncArg::set_qid(::uint64_t value) {
  _internal_set_qid(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueIncArg.qid)
}
inline ::uint64_t QueueIncArg::_internal_qid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.qid_;
}
inline void QueueIncArg::_internal_set_qid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.qid_ = value;
}

// bool prefetch = 3;
inline void QueueIncArg::clear_prefetch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefetch_ = false;
}
inline bool QueueIncArg::prefetch() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueIncArg.prefetch)
  return _internal_prefetch();
}
inline void QueueIncArg::set_prefetch(bool value) {
  _internal_set_prefetch(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueIncArg.prefetch)
}
inline bool QueueIncArg::_internal_prefetch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prefetch_;
}
inline void QueueIncArg::_internal_set_prefetch(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefetch_ = value;
}

// -------------------------------------------------------------------

// QueueOutArg

// string port = 1;
inline void QueueOutArg::clear_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.ClearToEmpty();
}
inline const std::string& QueueOutArg::port() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.QueueOutArg.port)
  return _internal_port();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueueOutArg::set_port(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.QueueOutArg.port)
}
inline std::string* QueueOutArg::mutable_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_port();
  // @@protoc_insertion_point(field_mutable:bess.pb.QueueOutArg.port)
  return _s;
}
inline const std::string& QueueOutArg::_internal_port() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.port_.Get();
}
inline void QueueOutArg::_internal_set_port(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.port_.Set(value, GetArena());
}
inline std::string* QueueOutArg::_internal_mutable_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.port_.Mutable( GetArena());
}
inline std::string* QueueOutArg::release_port() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.QueueOutArg.port)
  return _impl_.port_.Release();
}
inline void QueueOutArg::set_allocated_port(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.port_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.port_.IsDefault()) {
          _impl_.port_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.QueueOutArg.port)
}

// uint64 qid = 2;
inline void QueueOutArg::clear_qid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.qid_ = ::uint64_t{0u};
}
inline ::uint64_t QueueOutArg::qid() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueOutArg.qid)
  return _internal_qid();
}
inline void QueueOutArg::set_qid(::uint64_t value) {
  _internal_set_qid(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueOutArg.qid)
}
inline ::uint64_t QueueOutArg::_internal_qid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.qid_;
}
inline void QueueOutArg::_internal_set_qid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.qid_ = value;
}

// -------------------------------------------------------------------

// QueueArg

// uint64 size = 1;
inline void QueueArg::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t QueueArg::size() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueArg.size)
  return _internal_size();
}
inline void QueueArg::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueArg.size)
}
inline ::uint64_t QueueArg::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void QueueArg::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// bool prefetch = 2;
inline void QueueArg::clear_prefetch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefetch_ = false;
}
inline bool QueueArg::prefetch() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueArg.prefetch)
  return _internal_prefetch();
}
inline void QueueArg::set_prefetch(bool value) {
  _internal_set_prefetch(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueArg.prefetch)
}
inline bool QueueArg::_internal_prefetch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prefetch_;
}
inline void QueueArg::_internal_set_prefetch(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.prefetch_ = value;
}

// bool backpressure = 3;
inline void QueueArg::clear_backpressure() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.backpressure_ = false;
}
inline bool QueueArg::backpressure() const {
  // @@protoc_insertion_point(field_get:bess.pb.QueueArg.backpressure)
  return _internal_backpressure();
}
inline void QueueArg::set_backpressure(bool value) {
  _internal_set_backpressure(value);
  // @@protoc_insertion_point(field_set:bess.pb.QueueArg.backpressure)
}
inline bool QueueArg::_internal_backpressure() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.backpressure_;
}
inline void QueueArg::_internal_set_backpressure(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.backpressure_ = value;
}

// -------------------------------------------------------------------

// RandomSplitArg

// double drop_rate = 1;
inline void RandomSplitArg::clear_drop_rate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.drop_rate_ = 0;
}
inline double RandomSplitArg::drop_rate() const {
  // @@protoc_insertion_point(field_get:bess.pb.RandomSplitArg.drop_rate)
  return _internal_drop_rate();
}
inline void RandomSplitArg::set_drop_rate(double value) {
  _internal_set_drop_rate(value);
  // @@protoc_insertion_point(field_set:bess.pb.RandomSplitArg.drop_rate)
}
inline double RandomSplitArg::_internal_drop_rate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.drop_rate_;
}
inline void RandomSplitArg::_internal_set_drop_rate(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.drop_rate_ = value;
}

// repeated int64 gates = 2;
inline int RandomSplitArg::_internal_gates_size() const {
  return _internal_gates().size();
}
inline int RandomSplitArg::gates_size() const {
  return _internal_gates_size();
}
inline void RandomSplitArg::clear_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gates_.Clear();
}
inline ::int64_t RandomSplitArg::gates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.RandomSplitArg.gates)
  return _internal_gates().Get(index);
}
inline void RandomSplitArg::set_gates(int index, ::int64_t value) {
  _internal_mutable_gates()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.RandomSplitArg.gates)
}
inline void RandomSplitArg::add_gates(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gates()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.RandomSplitArg.gates)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& RandomSplitArg::gates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.RandomSplitArg.gates)
  return _internal_gates();
}
inline ::google::protobuf::RepeatedField<::int64_t>* RandomSplitArg::mutable_gates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.RandomSplitArg.gates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gates();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& RandomSplitArg::_internal_gates()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gates_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* RandomSplitArg::_internal_mutable_gates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gates_;
}

// -------------------------------------------------------------------

// RandomSplitCommandSetDroprateArg

// double drop_rate = 1;
inline void RandomSplitCommandSetDroprateArg::clear_drop_rate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.drop_rate_ = 0;
}
inline double RandomSplitCommandSetDroprateArg::drop_rate() const {
  // @@protoc_insertion_point(field_get:bess.pb.RandomSplitCommandSetDroprateArg.drop_rate)
  return _internal_drop_rate();
}
inline void RandomSplitCommandSetDroprateArg::set_drop_rate(double value) {
  _internal_set_drop_rate(value);
  // @@protoc_insertion_point(field_set:bess.pb.RandomSplitCommandSetDroprateArg.drop_rate)
}
inline double RandomSplitCommandSetDroprateArg::_internal_drop_rate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.drop_rate_;
}
inline void RandomSplitCommandSetDroprateArg::_internal_set_drop_rate(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.drop_rate_ = value;
}

// -------------------------------------------------------------------

// RandomSplitCommandSetGatesArg

// repeated int64 gates = 1;
inline int RandomSplitCommandSetGatesArg::_internal_gates_size() const {
  return _internal_gates().size();
}
inline int RandomSplitCommandSetGatesArg::gates_size() const {
  return _internal_gates_size();
}
inline void RandomSplitCommandSetGatesArg::clear_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gates_.Clear();
}
inline ::int64_t RandomSplitCommandSetGatesArg::gates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.RandomSplitCommandSetGatesArg.gates)
  return _internal_gates().Get(index);
}
inline void RandomSplitCommandSetGatesArg::set_gates(int index, ::int64_t value) {
  _internal_mutable_gates()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.RandomSplitCommandSetGatesArg.gates)
}
inline void RandomSplitCommandSetGatesArg::add_gates(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gates()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.RandomSplitCommandSetGatesArg.gates)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& RandomSplitCommandSetGatesArg::gates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.RandomSplitCommandSetGatesArg.gates)
  return _internal_gates();
}
inline ::google::protobuf::RepeatedField<::int64_t>* RandomSplitCommandSetGatesArg::mutable_gates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.RandomSplitCommandSetGatesArg.gates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gates();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& RandomSplitCommandSetGatesArg::_internal_gates()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gates_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* RandomSplitCommandSetGatesArg::_internal_mutable_gates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gates_;
}

// -------------------------------------------------------------------

// RandomUpdateArg_Field

// int64 offset = 1;
inline void RandomUpdateArg_Field::clear_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.offset_ = ::int64_t{0};
}
inline ::int64_t RandomUpdateArg_Field::offset() const {
  // @@protoc_insertion_point(field_get:bess.pb.RandomUpdateArg.Field.offset)
  return _internal_offset();
}
inline void RandomUpdateArg_Field::set_offset(::int64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:bess.pb.RandomUpdateArg.Field.offset)
}
inline ::int64_t RandomUpdateArg_Field::_internal_offset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.offset_;
}
inline void RandomUpdateArg_Field::_internal_set_offset(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.offset_ = value;
}

// uint64 size = 2;
inline void RandomUpdateArg_Field::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t RandomUpdateArg_Field::size() const {
  // @@protoc_insertion_point(field_get:bess.pb.RandomUpdateArg.Field.size)
  return _internal_size();
}
inline void RandomUpdateArg_Field::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.RandomUpdateArg.Field.size)
}
inline ::uint64_t RandomUpdateArg_Field::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void RandomUpdateArg_Field::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// uint64 min = 3;
inline void RandomUpdateArg_Field::clear_min() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.min_ = ::uint64_t{0u};
}
inline ::uint64_t RandomUpdateArg_Field::min() const {
  // @@protoc_insertion_point(field_get:bess.pb.RandomUpdateArg.Field.min)
  return _internal_min();
}
inline void RandomUpdateArg_Field::set_min(::uint64_t value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:bess.pb.RandomUpdateArg.Field.min)
}
inline ::uint64_t RandomUpdateArg_Field::_internal_min() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_;
}
inline void RandomUpdateArg_Field::_internal_set_min(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.min_ = value;
}

// uint64 max = 4;
inline void RandomUpdateArg_Field::clear_max() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_ = ::uint64_t{0u};
}
inline ::uint64_t RandomUpdateArg_Field::max() const {
  // @@protoc_insertion_point(field_get:bess.pb.RandomUpdateArg.Field.max)
  return _internal_max();
}
inline void RandomUpdateArg_Field::set_max(::uint64_t value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:bess.pb.RandomUpdateArg.Field.max)
}
inline ::uint64_t RandomUpdateArg_Field::_internal_max() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_;
}
inline void RandomUpdateArg_Field::_internal_set_max(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// RandomUpdateArg

// repeated .bess.pb.RandomUpdateArg.Field fields = 1;
inline int RandomUpdateArg::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int RandomUpdateArg::fields_size() const {
  return _internal_fields_size();
}
inline void RandomUpdateArg::clear_fields() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fields_.Clear();
}
inline ::bess::pb::RandomUpdateArg_Field* RandomUpdateArg::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.RandomUpdateArg.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::RandomUpdateArg_Field>* RandomUpdateArg::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.RandomUpdateArg.fields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_fields();
}
inline const ::bess::pb::RandomUpdateArg_Field& RandomUpdateArg::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.RandomUpdateArg.fields)
  return _internal_fields().Get(index);
}
inline ::bess::pb::RandomUpdateArg_Field* RandomUpdateArg::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::RandomUpdateArg_Field* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.RandomUpdateArg.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::RandomUpdateArg_Field>& RandomUpdateArg::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.RandomUpdateArg.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::RandomUpdateArg_Field>&
RandomUpdateArg::_internal_fields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::RandomUpdateArg_Field>*
RandomUpdateArg::_internal_mutable_fields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.fields_;
}

// -------------------------------------------------------------------

// RewriteArg

// repeated bytes templates = 1;
inline int RewriteArg::_internal_templates_size() const {
  return _internal_templates().size();
}
inline int RewriteArg::templates_size() const {
  return _internal_templates_size();
}
inline void RewriteArg::clear_templates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.templates_.Clear();
}
inline std::string* RewriteArg::add_templates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_templates()->Add();
  // @@protoc_insertion_point(field_add_mutable:bess.pb.RewriteArg.templates)
  return _s;
}
inline const std::string& RewriteArg::templates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.RewriteArg.templates)
  return _internal_templates().Get(index);
}
inline std::string* RewriteArg::mutable_templates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.RewriteArg.templates)
  return _internal_mutable_templates()->Mutable(index);
}
inline void RewriteArg::set_templates(int index, const std::string& value) {
  _internal_mutable_templates()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:bess.pb.RewriteArg.templates)
}
inline void RewriteArg::set_templates(int index, std::string&& value) {
  _internal_mutable_templates()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:bess.pb.RewriteArg.templates)
}
inline void RewriteArg::set_templates(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_templates()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bess.pb.RewriteArg.templates)
}
inline void RewriteArg::set_templates(int index, const void* value,
                              std::size_t size) {
  _internal_mutable_templates()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bess.pb.RewriteArg.templates)
}
inline void RewriteArg::set_templates(int index, absl::string_view value) {
  _internal_mutable_templates()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:bess.pb.RewriteArg.templates)
}
inline void RewriteArg::add_templates(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_templates()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:bess.pb.RewriteArg.templates)
}
inline void RewriteArg::add_templates(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_templates()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:bess.pb.RewriteArg.templates)
}
inline void RewriteArg::add_templates(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_templates()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bess.pb.RewriteArg.templates)
}
inline void RewriteArg::add_templates(const void* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_templates()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bess.pb.RewriteArg.templates)
}
inline void RewriteArg::add_templates(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_templates()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:bess.pb.RewriteArg.templates)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RewriteArg::templates() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.RewriteArg.templates)
  return _internal_templates();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RewriteArg::mutable_templates() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.RewriteArg.templates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_templates();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RewriteArg::_internal_templates() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.templates_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RewriteArg::_internal_mutable_templates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.templates_;
}

// -------------------------------------------------------------------

// RoundRobinCommandSetGatesArg

// repeated int64 gates = 1;
inline int RoundRobinCommandSetGatesArg::_internal_gates_size() const {
  return _internal_gates().size();
}
inline int RoundRobinCommandSetGatesArg::gates_size() const {
  return _internal_gates_size();
}
inline void RoundRobinCommandSetGatesArg::clear_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gates_.Clear();
}
inline ::int64_t RoundRobinCommandSetGatesArg::gates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.RoundRobinCommandSetGatesArg.gates)
  return _internal_gates().Get(index);
}
inline void RoundRobinCommandSetGatesArg::set_gates(int index, ::int64_t value) {
  _internal_mutable_gates()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.RoundRobinCommandSetGatesArg.gates)
}
inline void RoundRobinCommandSetGatesArg::add_gates(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gates()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.RoundRobinCommandSetGatesArg.gates)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& RoundRobinCommandSetGatesArg::gates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.RoundRobinCommandSetGatesArg.gates)
  return _internal_gates();
}
inline ::google::protobuf::RepeatedField<::int64_t>* RoundRobinCommandSetGatesArg::mutable_gates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.RoundRobinCommandSetGatesArg.gates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gates();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& RoundRobinCommandSetGatesArg::_internal_gates()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gates_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* RoundRobinCommandSetGatesArg::_internal_mutable_gates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gates_;
}

// -------------------------------------------------------------------

// RoundRobinCommandSetModeArg

// string mode = 1;
inline void RoundRobinCommandSetModeArg::clear_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_.ClearToEmpty();
}
inline const std::string& RoundRobinCommandSetModeArg::mode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.RoundRobinCommandSetModeArg.mode)
  return _internal_mode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RoundRobinCommandSetModeArg::set_mode(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.RoundRobinCommandSetModeArg.mode)
}
inline std::string* RoundRobinCommandSetModeArg::mutable_mode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mode();
  // @@protoc_insertion_point(field_mutable:bess.pb.RoundRobinCommandSetModeArg.mode)
  return _s;
}
inline const std::string& RoundRobinCommandSetModeArg::_internal_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mode_.Get();
}
inline void RoundRobinCommandSetModeArg::_internal_set_mode(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_.Set(value, GetArena());
}
inline std::string* RoundRobinCommandSetModeArg::_internal_mutable_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mode_.Mutable( GetArena());
}
inline std::string* RoundRobinCommandSetModeArg::release_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.RoundRobinCommandSetModeArg.mode)
  return _impl_.mode_.Release();
}
inline void RoundRobinCommandSetModeArg::set_allocated_mode(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mode_.IsDefault()) {
          _impl_.mode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.RoundRobinCommandSetModeArg.mode)
}

// -------------------------------------------------------------------

// RoundRobinArg

// repeated int64 gates = 1;
inline int RoundRobinArg::_internal_gates_size() const {
  return _internal_gates().size();
}
inline int RoundRobinArg::gates_size() const {
  return _internal_gates_size();
}
inline void RoundRobinArg::clear_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gates_.Clear();
}
inline ::int64_t RoundRobinArg::gates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.RoundRobinArg.gates)
  return _internal_gates().Get(index);
}
inline void RoundRobinArg::set_gates(int index, ::int64_t value) {
  _internal_mutable_gates()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.RoundRobinArg.gates)
}
inline void RoundRobinArg::add_gates(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gates()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.RoundRobinArg.gates)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& RoundRobinArg::gates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.RoundRobinArg.gates)
  return _internal_gates();
}
inline ::google::protobuf::RepeatedField<::int64_t>* RoundRobinArg::mutable_gates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.RoundRobinArg.gates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gates();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& RoundRobinArg::_internal_gates()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gates_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* RoundRobinArg::_internal_mutable_gates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gates_;
}

// string mode = 2;
inline void RoundRobinArg::clear_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_.ClearToEmpty();
}
inline const std::string& RoundRobinArg::mode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.RoundRobinArg.mode)
  return _internal_mode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RoundRobinArg::set_mode(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.RoundRobinArg.mode)
}
inline std::string* RoundRobinArg::mutable_mode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mode();
  // @@protoc_insertion_point(field_mutable:bess.pb.RoundRobinArg.mode)
  return _s;
}
inline const std::string& RoundRobinArg::_internal_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mode_.Get();
}
inline void RoundRobinArg::_internal_set_mode(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_.Set(value, GetArena());
}
inline std::string* RoundRobinArg::_internal_mutable_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mode_.Mutable( GetArena());
}
inline std::string* RoundRobinArg::release_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.RoundRobinArg.mode)
  return _impl_.mode_.Release();
}
inline void RoundRobinArg::set_allocated_mode(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mode_.IsDefault()) {
          _impl_.mode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.RoundRobinArg.mode)
}

// -------------------------------------------------------------------

// ReplicateArg

// repeated int64 gates = 1;
inline int ReplicateArg::_internal_gates_size() const {
  return _internal_gates().size();
}
inline int ReplicateArg::gates_size() const {
  return _internal_gates_size();
}
inline void ReplicateArg::clear_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gates_.Clear();
}
inline ::int64_t ReplicateArg::gates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.ReplicateArg.gates)
  return _internal_gates().Get(index);
}
inline void ReplicateArg::set_gates(int index, ::int64_t value) {
  _internal_mutable_gates()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.ReplicateArg.gates)
}
inline void ReplicateArg::add_gates(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gates()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.ReplicateArg.gates)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& ReplicateArg::gates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.ReplicateArg.gates)
  return _internal_gates();
}
inline ::google::protobuf::RepeatedField<::int64_t>* ReplicateArg::mutable_gates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ReplicateArg.gates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gates();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& ReplicateArg::_internal_gates()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gates_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* ReplicateArg::_internal_mutable_gates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gates_;
}

// -------------------------------------------------------------------

// ReplicateCommandSetGatesArg

// repeated int64 gates = 1;
inline int ReplicateCommandSetGatesArg::_internal_gates_size() const {
  return _internal_gates().size();
}
inline int ReplicateCommandSetGatesArg::gates_size() const {
  return _internal_gates_size();
}
inline void ReplicateCommandSetGatesArg::clear_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gates_.Clear();
}
inline ::int64_t ReplicateCommandSetGatesArg::gates(int index) const {
  // @@protoc_insertion_point(field_get:bess.pb.ReplicateCommandSetGatesArg.gates)
  return _internal_gates().Get(index);
}
inline void ReplicateCommandSetGatesArg::set_gates(int index, ::int64_t value) {
  _internal_mutable_gates()->Set(index, value);
  // @@protoc_insertion_point(field_set:bess.pb.ReplicateCommandSetGatesArg.gates)
}
inline void ReplicateCommandSetGatesArg::add_gates(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_gates()->Add(value);
  // @@protoc_insertion_point(field_add:bess.pb.ReplicateCommandSetGatesArg.gates)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& ReplicateCommandSetGatesArg::gates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.ReplicateCommandSetGatesArg.gates)
  return _internal_gates();
}
inline ::google::protobuf::RepeatedField<::int64_t>* ReplicateCommandSetGatesArg::mutable_gates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.ReplicateCommandSetGatesArg.gates)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gates();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& ReplicateCommandSetGatesArg::_internal_gates()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gates_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* ReplicateCommandSetGatesArg::_internal_mutable_gates() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gates_;
}

// -------------------------------------------------------------------

// SetMetadataArg_Attribute

// string name = 1;
inline void SetMetadataArg_Attribute::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SetMetadataArg_Attribute::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.SetMetadataArg.Attribute.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetMetadataArg_Attribute::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.SetMetadataArg.Attribute.name)
}
inline std::string* SetMetadataArg_Attribute::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:bess.pb.SetMetadataArg.Attribute.name)
  return _s;
}
inline const std::string& SetMetadataArg_Attribute::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SetMetadataArg_Attribute::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SetMetadataArg_Attribute::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SetMetadataArg_Attribute::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.SetMetadataArg.Attribute.name)
  return _impl_.name_.Release();
}
inline void SetMetadataArg_Attribute::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.SetMetadataArg.Attribute.name)
}

// uint64 size = 2;
inline void SetMetadataArg_Attribute::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t SetMetadataArg_Attribute::size() const {
  // @@protoc_insertion_point(field_get:bess.pb.SetMetadataArg.Attribute.size)
  return _internal_size();
}
inline void SetMetadataArg_Attribute::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.SetMetadataArg.Attribute.size)
}
inline ::uint64_t SetMetadataArg_Attribute::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void SetMetadataArg_Attribute::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// uint64 value_int = 3;
inline bool SetMetadataArg_Attribute::has_value_int() const {
  return value_case() == kValueInt;
}
inline void SetMetadataArg_Attribute::set_has_value_int() {
  _impl_._oneof_case_[0] = kValueInt;
}
inline void SetMetadataArg_Attribute::clear_value_int() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() == kValueInt) {
    _impl_.value_.value_int_ = ::uint64_t{0u};
    clear_has_value();
  }
}
inline ::uint64_t SetMetadataArg_Attribute::value_int() const {
  // @@protoc_insertion_point(field_get:bess.pb.SetMetadataArg.Attribute.value_int)
  return _internal_value_int();
}
inline void SetMetadataArg_Attribute::set_value_int(::uint64_t value) {
  _internal_set_value_int(value);
  // @@protoc_insertion_point(field_set:bess.pb.SetMetadataArg.Attribute.value_int)
}
inline ::uint64_t SetMetadataArg_Attribute::_internal_value_int() const {
  if (value_case() == kValueInt) {
    return _impl_.value_.value_int_;
  }
  return ::uint64_t{0u};
}
inline void SetMetadataArg_Attribute::_internal_set_value_int(::uint64_t value) {
  if (value_case() != kValueInt) {
    clear_value();
    set_has_value_int();
  }
  _impl_.value_.value_int_ = value;
}

// bytes value_bin = 4;
inline bool SetMetadataArg_Attribute::has_value_bin() const {
  return value_case() == kValueBin;
}
inline void SetMetadataArg_Attribute::set_has_value_bin() {
  _impl_._oneof_case_[0] = kValueBin;
}
inline void SetMetadataArg_Attribute::clear_value_bin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() == kValueBin) {
    _impl_.value_.value_bin_.Destroy();
    clear_has_value();
  }
}
inline const std::string& SetMetadataArg_Attribute::value_bin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.SetMetadataArg.Attribute.value_bin)
  return _internal_value_bin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetMetadataArg_Attribute::set_value_bin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() != kValueBin) {
    clear_value();

    set_has_value_bin();
    _impl_.value_.value_bin_.InitDefault();
  }
  _impl_.value_.value_bin_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.SetMetadataArg.Attribute.value_bin)
}
inline std::string* SetMetadataArg_Attribute::mutable_value_bin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value_bin();
  // @@protoc_insertion_point(field_mutable:bess.pb.SetMetadataArg.Attribute.value_bin)
  return _s;
}
inline const std::string& SetMetadataArg_Attribute::_internal_value_bin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (value_case() != kValueBin) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.value_bin_.Get();
}
inline void SetMetadataArg_Attribute::_internal_set_value_bin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() != kValueBin) {
    clear_value();

    set_has_value_bin();
    _impl_.value_.value_bin_.InitDefault();
  }
  _impl_.value_.value_bin_.Set(value, GetArena());
}
inline std::string* SetMetadataArg_Attribute::_internal_mutable_value_bin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() != kValueBin) {
    clear_value();

    set_has_value_bin();
    _impl_.value_.value_bin_.InitDefault();
  }
  return _impl_.value_.value_bin_.Mutable( GetArena());
}
inline std::string* SetMetadataArg_Attribute::release_value_bin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.SetMetadataArg.Attribute.value_bin)
  if (value_case() != kValueBin) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.value_bin_.Release();
}
inline void SetMetadataArg_Attribute::set_allocated_value_bin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_value_bin();
    _impl_.value_.value_bin_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.SetMetadataArg.Attribute.value_bin)
}

// int32 offset = 5;
inline void SetMetadataArg_Attribute::clear_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.offset_ = 0;
}
inline ::int32_t SetMetadataArg_Attribute::offset() const {
  // @@protoc_insertion_point(field_get:bess.pb.SetMetadataArg.Attribute.offset)
  return _internal_offset();
}
inline void SetMetadataArg_Attribute::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:bess.pb.SetMetadataArg.Attribute.offset)
}
inline ::int32_t SetMetadataArg_Attribute::_internal_offset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.offset_;
}
inline void SetMetadataArg_Attribute::_internal_set_offset(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.offset_ = value;
}

// bytes mask = 6;
inline void SetMetadataArg_Attribute::clear_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mask_.ClearToEmpty();
}
inline const std::string& SetMetadataArg_Attribute::mask() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.SetMetadataArg.Attribute.mask)
  return _internal_mask();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetMetadataArg_Attribute::set_mask(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mask_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.SetMetadataArg.Attribute.mask)
}
inline std::string* SetMetadataArg_Attribute::mutable_mask() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mask();
  // @@protoc_insertion_point(field_mutable:bess.pb.SetMetadataArg.Attribute.mask)
  return _s;
}
inline const std::string& SetMetadataArg_Attribute::_internal_mask() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mask_.Get();
}
inline void SetMetadataArg_Attribute::_internal_set_mask(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mask_.Set(value, GetArena());
}
inline std::string* SetMetadataArg_Attribute::_internal_mutable_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mask_.Mutable( GetArena());
}
inline std::string* SetMetadataArg_Attribute::release_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.SetMetadataArg.Attribute.mask)
  return _impl_.mask_.Release();
}
inline void SetMetadataArg_Attribute::set_allocated_mask(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mask_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mask_.IsDefault()) {
          _impl_.mask_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.SetMetadataArg.Attribute.mask)
}

// int32 rshift_bits = 7;
inline void SetMetadataArg_Attribute::clear_rshift_bits() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rshift_bits_ = 0;
}
inline ::int32_t SetMetadataArg_Attribute::rshift_bits() const {
  // @@protoc_insertion_point(field_get:bess.pb.SetMetadataArg.Attribute.rshift_bits)
  return _internal_rshift_bits();
}
inline void SetMetadataArg_Attribute::set_rshift_bits(::int32_t value) {
  _internal_set_rshift_bits(value);
  // @@protoc_insertion_point(field_set:bess.pb.SetMetadataArg.Attribute.rshift_bits)
}
inline ::int32_t SetMetadataArg_Attribute::_internal_rshift_bits() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rshift_bits_;
}
inline void SetMetadataArg_Attribute::_internal_set_rshift_bits(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rshift_bits_ = value;
}

inline bool SetMetadataArg_Attribute::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void SetMetadataArg_Attribute::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline SetMetadataArg_Attribute::ValueCase SetMetadataArg_Attribute::value_case() const {
  return SetMetadataArg_Attribute::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// SetMetadataArg

// repeated .bess.pb.SetMetadataArg.Attribute attrs = 1;
inline int SetMetadataArg::_internal_attrs_size() const {
  return _internal_attrs().size();
}
inline int SetMetadataArg::attrs_size() const {
  return _internal_attrs_size();
}
inline void SetMetadataArg::clear_attrs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attrs_.Clear();
}
inline ::bess::pb::SetMetadataArg_Attribute* SetMetadataArg::mutable_attrs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.SetMetadataArg.attrs)
  return _internal_mutable_attrs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::SetMetadataArg_Attribute>* SetMetadataArg::mutable_attrs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.SetMetadataArg.attrs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_attrs();
}
inline const ::bess::pb::SetMetadataArg_Attribute& SetMetadataArg::attrs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.SetMetadataArg.attrs)
  return _internal_attrs().Get(index);
}
inline ::bess::pb::SetMetadataArg_Attribute* SetMetadataArg::add_attrs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::SetMetadataArg_Attribute* _add = _internal_mutable_attrs()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.SetMetadataArg.attrs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::SetMetadataArg_Attribute>& SetMetadataArg::attrs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.SetMetadataArg.attrs)
  return _internal_attrs();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::SetMetadataArg_Attribute>&
SetMetadataArg::_internal_attrs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.attrs_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::SetMetadataArg_Attribute>*
SetMetadataArg::_internal_mutable_attrs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.attrs_;
}

// -------------------------------------------------------------------

// SinkArg

// -------------------------------------------------------------------

// SourceCommandSetBurstArg

// uint64 burst = 1;
inline void SourceCommandSetBurstArg::clear_burst() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.burst_ = ::uint64_t{0u};
}
inline ::uint64_t SourceCommandSetBurstArg::burst() const {
  // @@protoc_insertion_point(field_get:bess.pb.SourceCommandSetBurstArg.burst)
  return _internal_burst();
}
inline void SourceCommandSetBurstArg::set_burst(::uint64_t value) {
  _internal_set_burst(value);
  // @@protoc_insertion_point(field_set:bess.pb.SourceCommandSetBurstArg.burst)
}
inline ::uint64_t SourceCommandSetBurstArg::_internal_burst() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.burst_;
}
inline void SourceCommandSetBurstArg::_internal_set_burst(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.burst_ = value;
}

// -------------------------------------------------------------------

// SourceCommandSetPktSizeArg

// uint64 pkt_size = 1;
inline void SourceCommandSetPktSizeArg::clear_pkt_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pkt_size_ = ::uint64_t{0u};
}
inline ::uint64_t SourceCommandSetPktSizeArg::pkt_size() const {
  // @@protoc_insertion_point(field_get:bess.pb.SourceCommandSetPktSizeArg.pkt_size)
  return _internal_pkt_size();
}
inline void SourceCommandSetPktSizeArg::set_pkt_size(::uint64_t value) {
  _internal_set_pkt_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.SourceCommandSetPktSizeArg.pkt_size)
}
inline ::uint64_t SourceCommandSetPktSizeArg::_internal_pkt_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pkt_size_;
}
inline void SourceCommandSetPktSizeArg::_internal_set_pkt_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pkt_size_ = value;
}

// -------------------------------------------------------------------

// SourceArg

// uint64 pkt_size = 1;
inline void SourceArg::clear_pkt_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pkt_size_ = ::uint64_t{0u};
}
inline ::uint64_t SourceArg::pkt_size() const {
  // @@protoc_insertion_point(field_get:bess.pb.SourceArg.pkt_size)
  return _internal_pkt_size();
}
inline void SourceArg::set_pkt_size(::uint64_t value) {
  _internal_set_pkt_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.SourceArg.pkt_size)
}
inline ::uint64_t SourceArg::_internal_pkt_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pkt_size_;
}
inline void SourceArg::_internal_set_pkt_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pkt_size_ = value;
}

// -------------------------------------------------------------------

// IPChecksumArg

// bool verify = 1;
inline void IPChecksumArg::clear_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.verify_ = false;
}
inline bool IPChecksumArg::verify() const {
  // @@protoc_insertion_point(field_get:bess.pb.IPChecksumArg.verify)
  return _internal_verify();
}
inline void IPChecksumArg::set_verify(bool value) {
  _internal_set_verify(value);
  // @@protoc_insertion_point(field_set:bess.pb.IPChecksumArg.verify)
}
inline bool IPChecksumArg::_internal_verify() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.verify_;
}
inline void IPChecksumArg::_internal_set_verify(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.verify_ = value;
}

// -------------------------------------------------------------------

// L4ChecksumArg

// bool verify = 1;
inline void L4ChecksumArg::clear_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.verify_ = false;
}
inline bool L4ChecksumArg::verify() const {
  // @@protoc_insertion_point(field_get:bess.pb.L4ChecksumArg.verify)
  return _internal_verify();
}
inline void L4ChecksumArg::set_verify(bool value) {
  _internal_set_verify(value);
  // @@protoc_insertion_point(field_set:bess.pb.L4ChecksumArg.verify)
}
inline bool L4ChecksumArg::_internal_verify() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.verify_;
}
inline void L4ChecksumArg::_internal_set_verify(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.verify_ = value;
}

// -------------------------------------------------------------------

// SplitArg

// uint64 size = 1;
inline void SplitArg::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t SplitArg::size() const {
  // @@protoc_insertion_point(field_get:bess.pb.SplitArg.size)
  return _internal_size();
}
inline void SplitArg::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.SplitArg.size)
}
inline ::uint64_t SplitArg::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void SplitArg::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// string attribute = 2;
inline bool SplitArg::has_attribute() const {
  return type_case() == kAttribute;
}
inline void SplitArg::set_has_attribute() {
  _impl_._oneof_case_[0] = kAttribute;
}
inline void SplitArg::clear_attribute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() == kAttribute) {
    _impl_.type_.attribute_.Destroy();
    clear_has_type();
  }
}
inline const std::string& SplitArg::attribute() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.SplitArg.attribute)
  return _internal_attribute();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SplitArg::set_attribute(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() != kAttribute) {
    clear_type();

    set_has_attribute();
    _impl_.type_.attribute_.InitDefault();
  }
  _impl_.type_.attribute_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.SplitArg.attribute)
}
inline std::string* SplitArg::mutable_attribute() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attribute();
  // @@protoc_insertion_point(field_mutable:bess.pb.SplitArg.attribute)
  return _s;
}
inline const std::string& SplitArg::_internal_attribute() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (type_case() != kAttribute) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.type_.attribute_.Get();
}
inline void SplitArg::_internal_set_attribute(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() != kAttribute) {
    clear_type();

    set_has_attribute();
    _impl_.type_.attribute_.InitDefault();
  }
  _impl_.type_.attribute_.Set(value, GetArena());
}
inline std::string* SplitArg::_internal_mutable_attribute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() != kAttribute) {
    clear_type();

    set_has_attribute();
    _impl_.type_.attribute_.InitDefault();
  }
  return _impl_.type_.attribute_.Mutable( GetArena());
}
inline std::string* SplitArg::release_attribute() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.SplitArg.attribute)
  if (type_case() != kAttribute) {
    return nullptr;
  }
  clear_has_type();
  return _impl_.type_.attribute_.Release();
}
inline void SplitArg::set_allocated_attribute(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_type()) {
    clear_type();
  }
  if (value != nullptr) {
    set_has_attribute();
    _impl_.type_.attribute_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.SplitArg.attribute)
}

// int64 offset = 3;
inline bool SplitArg::has_offset() const {
  return type_case() == kOffset;
}
inline void SplitArg::set_has_offset() {
  _impl_._oneof_case_[0] = kOffset;
}
inline void SplitArg::clear_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() == kOffset) {
    _impl_.type_.offset_ = ::int64_t{0};
    clear_has_type();
  }
}
inline ::int64_t SplitArg::offset() const {
  // @@protoc_insertion_point(field_get:bess.pb.SplitArg.offset)
  return _internal_offset();
}
inline void SplitArg::set_offset(::int64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:bess.pb.SplitArg.offset)
}
inline ::int64_t SplitArg::_internal_offset() const {
  if (type_case() == kOffset) {
    return _impl_.type_.offset_;
  }
  return ::int64_t{0};
}
inline void SplitArg::_internal_set_offset(::int64_t value) {
  if (type_case() != kOffset) {
    clear_type();
    set_has_offset();
  }
  _impl_.type_.offset_ = value;
}

inline bool SplitArg::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void SplitArg::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline SplitArg::TypeCase SplitArg::type_case() const {
  return SplitArg::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TimestampArg

// uint64 offset = 1;
inline bool TimestampArg::has_offset() const {
  return type_case() == kOffset;
}
inline void TimestampArg::set_has_offset() {
  _impl_._oneof_case_[0] = kOffset;
}
inline void TimestampArg::clear_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() == kOffset) {
    _impl_.type_.offset_ = ::uint64_t{0u};
    clear_has_type();
  }
}
inline ::uint64_t TimestampArg::offset() const {
  // @@protoc_insertion_point(field_get:bess.pb.TimestampArg.offset)
  return _internal_offset();
}
inline void TimestampArg::set_offset(::uint64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:bess.pb.TimestampArg.offset)
}
inline ::uint64_t TimestampArg::_internal_offset() const {
  if (type_case() == kOffset) {
    return _impl_.type_.offset_;
  }
  return ::uint64_t{0u};
}
inline void TimestampArg::_internal_set_offset(::uint64_t value) {
  if (type_case() != kOffset) {
    clear_type();
    set_has_offset();
  }
  _impl_.type_.offset_ = value;
}

// string attr_name = 2;
inline bool TimestampArg::has_attr_name() const {
  return type_case() == kAttrName;
}
inline void TimestampArg::set_has_attr_name() {
  _impl_._oneof_case_[0] = kAttrName;
}
inline void TimestampArg::clear_attr_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() == kAttrName) {
    _impl_.type_.attr_name_.Destroy();
    clear_has_type();
  }
}
inline const std::string& TimestampArg::attr_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.TimestampArg.attr_name)
  return _internal_attr_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimestampArg::set_attr_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() != kAttrName) {
    clear_type();

    set_has_attr_name();
    _impl_.type_.attr_name_.InitDefault();
  }
  _impl_.type_.attr_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.TimestampArg.attr_name)
}
inline std::string* TimestampArg::mutable_attr_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attr_name();
  // @@protoc_insertion_point(field_mutable:bess.pb.TimestampArg.attr_name)
  return _s;
}
inline const std::string& TimestampArg::_internal_attr_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (type_case() != kAttrName) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.type_.attr_name_.Get();
}
inline void TimestampArg::_internal_set_attr_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() != kAttrName) {
    clear_type();

    set_has_attr_name();
    _impl_.type_.attr_name_.InitDefault();
  }
  _impl_.type_.attr_name_.Set(value, GetArena());
}
inline std::string* TimestampArg::_internal_mutable_attr_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (type_case() != kAttrName) {
    clear_type();

    set_has_attr_name();
    _impl_.type_.attr_name_.InitDefault();
  }
  return _impl_.type_.attr_name_.Mutable( GetArena());
}
inline std::string* TimestampArg::release_attr_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.TimestampArg.attr_name)
  if (type_case() != kAttrName) {
    return nullptr;
  }
  clear_has_type();
  return _impl_.type_.attr_name_.Release();
}
inline void TimestampArg::set_allocated_attr_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_type()) {
    clear_type();
  }
  if (value != nullptr) {
    set_has_attr_name();
    _impl_.type_.attr_name_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bess.pb.TimestampArg.attr_name)
}

inline bool TimestampArg::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void TimestampArg::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline TimestampArg::TypeCase TimestampArg::type_case() const {
  return TimestampArg::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// UpdateArg_Field

// int64 offset = 1;
inline void UpdateArg_Field::clear_offset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.offset_ = ::int64_t{0};
}
inline ::int64_t UpdateArg_Field::offset() const {
  // @@protoc_insertion_point(field_get:bess.pb.UpdateArg.Field.offset)
  return _internal_offset();
}
inline void UpdateArg_Field::set_offset(::int64_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:bess.pb.UpdateArg.Field.offset)
}
inline ::int64_t UpdateArg_Field::_internal_offset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.offset_;
}
inline void UpdateArg_Field::_internal_set_offset(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.offset_ = value;
}

// uint64 size = 2;
inline void UpdateArg_Field::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t UpdateArg_Field::size() const {
  // @@protoc_insertion_point(field_get:bess.pb.UpdateArg.Field.size)
  return _internal_size();
}
inline void UpdateArg_Field::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:bess.pb.UpdateArg.Field.size)
}
inline ::uint64_t UpdateArg_Field::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void UpdateArg_Field::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// uint64 value = 3;
inline void UpdateArg_Field::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = ::uint64_t{0u};
}
inline ::uint64_t UpdateArg_Field::value() const {
  // @@protoc_insertion_point(field_get:bess.pb.UpdateArg.Field.value)
  return _internal_value();
}
inline void UpdateArg_Field::set_value(::uint64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:bess.pb.UpdateArg.Field.value)
}
inline ::uint64_t UpdateArg_Field::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void UpdateArg_Field::_internal_set_value(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// UpdateArg

// repeated .bess.pb.UpdateArg.Field fields = 1;
inline int UpdateArg::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int UpdateArg::fields_size() const {
  return _internal_fields_size();
}
inline void UpdateArg::clear_fields() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fields_.Clear();
}
inline ::bess::pb::UpdateArg_Field* UpdateArg::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.UpdateArg.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::UpdateArg_Field>* UpdateArg::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.UpdateArg.fields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_fields();
}
inline const ::bess::pb::UpdateArg_Field& UpdateArg::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.UpdateArg.fields)
  return _internal_fields().Get(index);
}
inline ::bess::pb::UpdateArg_Field* UpdateArg::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::UpdateArg_Field* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.UpdateArg.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::UpdateArg_Field>& UpdateArg::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.UpdateArg.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::UpdateArg_Field>&
UpdateArg::_internal_fields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::UpdateArg_Field>*
UpdateArg::_internal_mutable_fields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.fields_;
}

// -------------------------------------------------------------------

// UrlFilterArg_Url

// string host = 1;
inline void UrlFilterArg_Url::clear_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.ClearToEmpty();
}
inline const std::string& UrlFilterArg_Url::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.UrlFilterArg.Url.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UrlFilterArg_Url::set_host(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.UrlFilterArg.Url.host)
}
inline std::string* UrlFilterArg_Url::mutable_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:bess.pb.UrlFilterArg.Url.host)
  return _s;
}
inline const std::string& UrlFilterArg_Url::_internal_host() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.host_.Get();
}
inline void UrlFilterArg_Url::_internal_set_host(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.host_.Set(value, GetArena());
}
inline std::string* UrlFilterArg_Url::_internal_mutable_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.host_.Mutable( GetArena());
}
inline std::string* UrlFilterArg_Url::release_host() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.UrlFilterArg.Url.host)
  return _impl_.host_.Release();
}
inline void UrlFilterArg_Url::set_allocated_host(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.host_.IsDefault()) {
          _impl_.host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.UrlFilterArg.Url.host)
}

// string path = 2;
inline void UrlFilterArg_Url::clear_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& UrlFilterArg_Url::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.UrlFilterArg.Url.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UrlFilterArg_Url::set_path(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.UrlFilterArg.Url.path)
}
inline std::string* UrlFilterArg_Url::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:bess.pb.UrlFilterArg.Url.path)
  return _s;
}
inline const std::string& UrlFilterArg_Url::_internal_path() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.path_.Get();
}
inline void UrlFilterArg_Url::_internal_set_path(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.path_.Set(value, GetArena());
}
inline std::string* UrlFilterArg_Url::_internal_mutable_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* UrlFilterArg_Url::release_path() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.UrlFilterArg.Url.path)
  return _impl_.path_.Release();
}
inline void UrlFilterArg_Url::set_allocated_path(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.path_.IsDefault()) {
          _impl_.path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.UrlFilterArg.Url.path)
}

// -------------------------------------------------------------------

// UrlFilterArg

// repeated .bess.pb.UrlFilterArg.Url blacklist = 1;
inline int UrlFilterArg::_internal_blacklist_size() const {
  return _internal_blacklist().size();
}
inline int UrlFilterArg::blacklist_size() const {
  return _internal_blacklist_size();
}
inline void UrlFilterArg::clear_blacklist() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.blacklist_.Clear();
}
inline ::bess::pb::UrlFilterArg_Url* UrlFilterArg::mutable_blacklist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.UrlFilterArg.blacklist)
  return _internal_mutable_blacklist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>* UrlFilterArg::mutable_blacklist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.UrlFilterArg.blacklist)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_blacklist();
}
inline const ::bess::pb::UrlFilterArg_Url& UrlFilterArg::blacklist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.UrlFilterArg.blacklist)
  return _internal_blacklist().Get(index);
}
inline ::bess::pb::UrlFilterArg_Url* UrlFilterArg::add_blacklist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::UrlFilterArg_Url* _add = _internal_mutable_blacklist()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.UrlFilterArg.blacklist)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>& UrlFilterArg::blacklist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.UrlFilterArg.blacklist)
  return _internal_blacklist();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>&
UrlFilterArg::_internal_blacklist() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.blacklist_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>*
UrlFilterArg::_internal_mutable_blacklist() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.blacklist_;
}

// -------------------------------------------------------------------

// UrlFilterConfig

// repeated .bess.pb.UrlFilterArg.Url blacklist = 1;
inline int UrlFilterConfig::_internal_blacklist_size() const {
  return _internal_blacklist().size();
}
inline int UrlFilterConfig::blacklist_size() const {
  return _internal_blacklist_size();
}
inline void UrlFilterConfig::clear_blacklist() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.blacklist_.Clear();
}
inline ::bess::pb::UrlFilterArg_Url* UrlFilterConfig::mutable_blacklist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.UrlFilterConfig.blacklist)
  return _internal_mutable_blacklist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>* UrlFilterConfig::mutable_blacklist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.UrlFilterConfig.blacklist)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_blacklist();
}
inline const ::bess::pb::UrlFilterArg_Url& UrlFilterConfig::blacklist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.UrlFilterConfig.blacklist)
  return _internal_blacklist().Get(index);
}
inline ::bess::pb::UrlFilterArg_Url* UrlFilterConfig::add_blacklist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::UrlFilterArg_Url* _add = _internal_mutable_blacklist()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.UrlFilterConfig.blacklist)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>& UrlFilterConfig::blacklist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.UrlFilterConfig.blacklist)
  return _internal_blacklist();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>&
UrlFilterConfig::_internal_blacklist() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.blacklist_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::UrlFilterArg_Url>*
UrlFilterConfig::_internal_mutable_blacklist() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.blacklist_;
}

// -------------------------------------------------------------------

// VLANPopArg

// -------------------------------------------------------------------

// VLANPushArg

// uint64 tci = 1;
inline void VLANPushArg::clear_tci() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tci_ = ::uint64_t{0u};
}
inline ::uint64_t VLANPushArg::tci() const {
  // @@protoc_insertion_point(field_get:bess.pb.VLANPushArg.tci)
  return _internal_tci();
}
inline void VLANPushArg::set_tci(::uint64_t value) {
  _internal_set_tci(value);
  // @@protoc_insertion_point(field_set:bess.pb.VLANPushArg.tci)
}
inline ::uint64_t VLANPushArg::_internal_tci() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tci_;
}
inline void VLANPushArg::_internal_set_tci(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tci_ = value;
}

// -------------------------------------------------------------------

// VLANSplitArg

// -------------------------------------------------------------------

// VXLANDecapArg

// -------------------------------------------------------------------

// VXLANEncapArg

// uint64 dstport = 1;
inline void VXLANEncapArg::clear_dstport() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.dstport_ = ::uint64_t{0u};
}
inline ::uint64_t VXLANEncapArg::dstport() const {
  // @@protoc_insertion_point(field_get:bess.pb.VXLANEncapArg.dstport)
  return _internal_dstport();
}
inline void VXLANEncapArg::set_dstport(::uint64_t value) {
  _internal_set_dstport(value);
  // @@protoc_insertion_point(field_set:bess.pb.VXLANEncapArg.dstport)
}
inline ::uint64_t VXLANEncapArg::_internal_dstport() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dstport_;
}
inline void VXLANEncapArg::_internal_set_dstport(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.dstport_ = value;
}

// -------------------------------------------------------------------

// WildcardMatchArg

// repeated .bess.pb.Field fields = 1;
inline int WildcardMatchArg::_internal_fields_size() const {
  return _internal_fields().size();
}
inline int WildcardMatchArg::fields_size() const {
  return _internal_fields_size();
}
inline ::bess::pb::Field* WildcardMatchArg::mutable_fields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.WildcardMatchArg.fields)
  return _internal_mutable_fields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::Field>* WildcardMatchArg::mutable_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.WildcardMatchArg.fields)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_fields();
}
inline const ::bess::pb::Field& WildcardMatchArg::fields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.WildcardMatchArg.fields)
  return _internal_fields().Get(index);
}
inline ::bess::pb::Field* WildcardMatchArg::add_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::Field* _add = _internal_mutable_fields()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.WildcardMatchArg.fields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>& WildcardMatchArg::fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.WildcardMatchArg.fields)
  return _internal_fields();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::Field>&
WildcardMatchArg::_internal_fields() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fields_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::Field>*
WildcardMatchArg::_internal_mutable_fields() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.fields_;
}

// -------------------------------------------------------------------

// WildcardMatchConfig

// uint64 default_gate = 1;
inline void WildcardMatchConfig::clear_default_gate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.default_gate_ = ::uint64_t{0u};
}
inline ::uint64_t WildcardMatchConfig::default_gate() const {
  // @@protoc_insertion_point(field_get:bess.pb.WildcardMatchConfig.default_gate)
  return _internal_default_gate();
}
inline void WildcardMatchConfig::set_default_gate(::uint64_t value) {
  _internal_set_default_gate(value);
  // @@protoc_insertion_point(field_set:bess.pb.WildcardMatchConfig.default_gate)
}
inline ::uint64_t WildcardMatchConfig::_internal_default_gate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.default_gate_;
}
inline void WildcardMatchConfig::_internal_set_default_gate(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.default_gate_ = value;
}

// repeated .bess.pb.WildcardMatchCommandAddArg rules = 2;
inline int WildcardMatchConfig::_internal_rules_size() const {
  return _internal_rules().size();
}
inline int WildcardMatchConfig::rules_size() const {
  return _internal_rules_size();
}
inline void WildcardMatchConfig::clear_rules() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rules_.Clear();
}
inline ::bess::pb::WildcardMatchCommandAddArg* WildcardMatchConfig::mutable_rules(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:bess.pb.WildcardMatchConfig.rules)
  return _internal_mutable_rules()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::WildcardMatchCommandAddArg>* WildcardMatchConfig::mutable_rules()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:bess.pb.WildcardMatchConfig.rules)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_rules();
}
inline const ::bess::pb::WildcardMatchCommandAddArg& WildcardMatchConfig::rules(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.WildcardMatchConfig.rules)
  return _internal_rules().Get(index);
}
inline ::bess::pb::WildcardMatchCommandAddArg* WildcardMatchConfig::add_rules() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::bess::pb::WildcardMatchCommandAddArg* _add = _internal_mutable_rules()->Add();
  // @@protoc_insertion_point(field_add:bess.pb.WildcardMatchConfig.rules)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::WildcardMatchCommandAddArg>& WildcardMatchConfig::rules() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:bess.pb.WildcardMatchConfig.rules)
  return _internal_rules();
}
inline const ::google::protobuf::RepeatedPtrField<::bess::pb::WildcardMatchCommandAddArg>&
WildcardMatchConfig::_internal_rules() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rules_;
}
inline ::google::protobuf::RepeatedPtrField<::bess::pb::WildcardMatchCommandAddArg>*
WildcardMatchConfig::_internal_mutable_rules() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.rules_;
}

// -------------------------------------------------------------------

// ArpResponderArg

// string ip = 1;
inline void ArpResponderArg::clear_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& ArpResponderArg::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.ArpResponderArg.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ArpResponderArg::set_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.ArpResponderArg.ip)
}
inline std::string* ArpResponderArg::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:bess.pb.ArpResponderArg.ip)
  return _s;
}
inline const std::string& ArpResponderArg::_internal_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_.Get();
}
inline void ArpResponderArg::_internal_set_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* ArpResponderArg::_internal_mutable_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* ArpResponderArg::release_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.ArpResponderArg.ip)
  return _impl_.ip_.Release();
}
inline void ArpResponderArg::set_allocated_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_.IsDefault()) {
          _impl_.ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ArpResponderArg.ip)
}

// string mac_addr = 2;
inline void ArpResponderArg::clear_mac_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mac_addr_.ClearToEmpty();
}
inline const std::string& ArpResponderArg::mac_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bess.pb.ArpResponderArg.mac_addr)
  return _internal_mac_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ArpResponderArg::set_mac_addr(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mac_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bess.pb.ArpResponderArg.mac_addr)
}
inline std::string* ArpResponderArg::mutable_mac_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mac_addr();
  // @@protoc_insertion_point(field_mutable:bess.pb.ArpResponderArg.mac_addr)
  return _s;
}
inline const std::string& ArpResponderArg::_internal_mac_addr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mac_addr_.Get();
}
inline void ArpResponderArg::_internal_set_mac_addr(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mac_addr_.Set(value, GetArena());
}
inline std::string* ArpResponderArg::_internal_mutable_mac_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.mac_addr_.Mutable( GetArena());
}
inline std::string* ArpResponderArg::release_mac_addr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:bess.pb.ArpResponderArg.mac_addr)
  return _impl_.mac_addr_.Release();
}
inline void ArpResponderArg::set_allocated_mac_addr(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mac_addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.mac_addr_.IsDefault()) {
          _impl_.mac_addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:bess.pb.ArpResponderArg.mac_addr)
}

// -------------------------------------------------------------------

// MplsPopArg

// bool remove_eth_header = 1;
inline void MplsPopArg::clear_remove_eth_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.remove_eth_header_ = false;
}
inline bool MplsPopArg::remove_eth_header() const {
  // @@protoc_insertion_point(field_get:bess.pb.MplsPopArg.remove_eth_header)
  return _internal_remove_eth_header();
}
inline void MplsPopArg::set_remove_eth_header(bool value) {
  _internal_set_remove_eth_header(value);
  // @@protoc_insertion_point(field_set:bess.pb.MplsPopArg.remove_eth_header)
}
inline bool MplsPopArg::_internal_remove_eth_header() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remove_eth_header_;
}
inline void MplsPopArg::_internal_set_remove_eth_header(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remove_eth_header_ = value;
}

// uint32 next_eth_type = 2;
inline void MplsPopArg::clear_next_eth_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.next_eth_type_ = 0u;
}
inline ::uint32_t MplsPopArg::next_eth_type() const {
  // @@protoc_insertion_point(field_get:bess.pb.MplsPopArg.next_eth_type)
  return _internal_next_eth_type();
}
inline void MplsPopArg::set_next_eth_type(::uint32_t value) {
  _internal_set_next_eth_type(value);
  // @@protoc_insertion_point(field_set:bess.pb.MplsPopArg.next_eth_type)
}
inline ::uint32_t MplsPopArg::_internal_next_eth_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.next_eth_type_;
}
inline void MplsPopArg::_internal_set_next_eth_type(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.next_eth_type_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// WorkerSplitArg

// map<uint32, uint32> worker_gates = 1;
inline int WorkerSplitArg::_internal_worker_gates_size() const {
  return _internal_worker_gates().size();
}
inline int WorkerSplitArg::worker_gates_size() const {
  return _internal_worker_gates_size();
}
inline void WorkerSplitArg::clear_worker_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.worker_gates_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& WorkerSplitArg::_internal_worker_gates() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.worker_gates_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::uint32_t>& WorkerSplitArg::worker_gates() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:bess.pb.WorkerSplitArg.worker_gates)
  return _internal_worker_gates();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* WorkerSplitArg::_internal_mutable_worker_gates() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.worker_gates_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::uint32_t>* WorkerSplitArg::mutable_worker_gates() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:bess.pb.WorkerSplitArg.worker_gates)
  return _internal_mutable_worker_gates();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace bess


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_module_5fmsg_2eproto_2epb_2eh
